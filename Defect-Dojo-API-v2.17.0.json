{
    "openapi": "3.0.3",
    "info": {
        "title": "Defect Dojo API v2",
        "version": "2.17.0",
        "description": "Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema."
    },
    "paths": {
        "/api/v2/api-token-auth/": {
            "post": {
                "operationId": "api_token_auth_create",
                "tags": [
                    "api-token-auth"
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthTokenRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthTokenRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthTokenRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/configuration_permissions/": {
            "get": {
                "operationId": "configuration_permissions_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "codename",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "configuration_permissions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedConfigurationPermissionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/configuration_permissions/{id}/": {
            "get": {
                "operationId": "configuration_permissions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this permission.",
                        "required": true
                    }
                ],
                "tags": [
                    "configuration_permissions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigurationPermission"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/development_environments/": {
            "get": {
                "operationId": "development_environments_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "development_environments"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDevelopmentEnvironmentList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "development_environments_create",
                "tags": [
                    "development_environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DevelopmentEnvironmentRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DevelopmentEnvironmentRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DevelopmentEnvironmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevelopmentEnvironment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/development_environments/{id}/": {
            "get": {
                "operationId": "development_environments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this development_ environment.",
                        "required": true
                    }
                ],
                "tags": [
                    "development_environments"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevelopmentEnvironment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "development_environments_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this development_ environment.",
                        "required": true
                    }
                ],
                "tags": [
                    "development_environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DevelopmentEnvironmentRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DevelopmentEnvironmentRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DevelopmentEnvironmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevelopmentEnvironment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "development_environments_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this development_ environment.",
                        "required": true
                    }
                ],
                "tags": [
                    "development_environments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDevelopmentEnvironmentRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDevelopmentEnvironmentRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDevelopmentEnvironmentRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DevelopmentEnvironment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "development_environments_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this development_ environment.",
                        "required": true
                    }
                ],
                "tags": [
                    "development_environments"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/development_environments/{id}/delete_preview/": {
            "get": {
                "operationId": "development_environments_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this development_ environment.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "development_environments"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/dojo_group_members/": {
            "get": {
                "operationId": "dojo_group_members_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "group",
                                    "role",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "dojo_group_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDojoGroupMemberList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "dojo_group_members_create",
                "tags": [
                    "dojo_group_members"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupMemberRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DojoGroupMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/dojo_group_members/{id}/": {
            "get": {
                "operationId": "dojo_group_members_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group_ member.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "group",
                                    "role",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "dojo_group_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DojoGroupMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "dojo_group_members_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group_ member.",
                        "required": true
                    }
                ],
                "tags": [
                    "dojo_group_members"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupMemberRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DojoGroupMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "dojo_group_members_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group_ member.",
                        "required": true
                    }
                ],
                "tags": [
                    "dojo_group_members"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDojoGroupMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDojoGroupMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDojoGroupMemberRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DojoGroupMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "dojo_group_members_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group_ member.",
                        "required": true
                    }
                ],
                "tags": [
                    "dojo_group_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/dojo_group_members/{id}/delete_preview/": {
            "get": {
                "operationId": "dojo_group_members_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group_ member.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "dojo_group_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/dojo_groups/": {
            "get": {
                "operationId": "dojo_groups_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "product_groups",
                                    "product_type_groups",
                                    "users"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "social_provider",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "title": "Social Authentication Provider",
                            "enum": [
                                "AzureAD"
                            ]
                        },
                        "description": "Group imported from a social provider."
                    }
                ],
                "tags": [
                    "dojo_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDojoGroupList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "dojo_groups_create",
                "tags": [
                    "dojo_groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/dojo_groups/{id}/": {
            "get": {
                "operationId": "dojo_groups_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "product_groups",
                                    "product_type_groups",
                                    "users"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "dojo_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "dojo_groups_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group.",
                        "required": true
                    }
                ],
                "tags": [
                    "dojo_groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DojoGroupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "dojo_groups_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group.",
                        "required": true
                    }
                ],
                "tags": [
                    "dojo_groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDojoGroupRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDojoGroupRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDojoGroupRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "dojo_groups_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group.",
                        "required": true
                    }
                ],
                "tags": [
                    "dojo_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/dojo_groups/{id}/delete_preview/": {
            "get": {
                "operationId": "dojo_groups_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo_ group.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "dojo_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/endpoint_meta_import/": {
            "post": {
                "operationId": "endpoint_meta_import_create",
                "description": "Imports a CSV file into a product to propogate arbitrary meta and tags on endpoints.\n\nBy Names:\n- Provide `product_name` of existing product\n\nBy ID:\n- Provide the id of the product in the `product` parameter\n\nIn this scenario Defect Dojo will look up the product by the provided details.",
                "tags": [
                    "endpoint_meta_import"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointMetaImporterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointMetaImporter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/endpoint_status/": {
            "get": {
                "operationId": "endpoint_status_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "endpoint",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "false_positive",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finding",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mitigated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mitigated_by",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "out_of_scope",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "risk_accepted",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "endpoint_status"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEndpointStatusList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "endpoint_status_create",
                "tags": [
                    "endpoint_status"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointStatusRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointStatusRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointStatusRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/endpoint_status/{id}/": {
            "get": {
                "operationId": "endpoint_status_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint_ status.",
                        "required": true
                    }
                ],
                "tags": [
                    "endpoint_status"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "endpoint_status_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint_ status.",
                        "required": true
                    }
                ],
                "tags": [
                    "endpoint_status"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointStatusRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointStatusRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointStatusRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "endpoint_status_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint_ status.",
                        "required": true
                    }
                ],
                "tags": [
                    "endpoint_status"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEndpointStatusRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEndpointStatusRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEndpointStatusRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "endpoint_status_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint_ status.",
                        "required": true
                    }
                ],
                "tags": [
                    "endpoint_status"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/endpoint_status/{id}/delete_preview/": {
            "get": {
                "operationId": "endpoint_status_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint_ status.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "endpoint_status"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/endpoints/": {
            "get": {
                "operationId": "endpoints_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fragment",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "host",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "not_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Not Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "not_tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on model",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-host",
                                    "-product",
                                    "host",
                                    "product"
                                ]
                            }
                        },
                        "description": "Ordering",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "port",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "protocol",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "userinfo",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "endpoints"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEndpointList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "endpoints_create",
                "tags": [
                    "endpoints"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/endpoints/{id}/": {
            "get": {
                "operationId": "endpoints_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint.",
                        "required": true
                    }
                ],
                "tags": [
                    "endpoints"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "endpoints_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint.",
                        "required": true
                    }
                ],
                "tags": [
                    "endpoints"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "endpoints_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint.",
                        "required": true
                    }
                ],
                "tags": [
                    "endpoints"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEndpointRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "endpoints_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint.",
                        "required": true
                    }
                ],
                "tags": [
                    "endpoints"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/endpoints/{id}/delete_preview/": {
            "get": {
                "operationId": "endpoints_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "endpoints"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/endpoints/{id}/generate_report/": {
            "post": {
                "operationId": "endpoints_generate_report_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this endpoint.",
                        "required": true
                    }
                ],
                "tags": [
                    "endpoints"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportGenerate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/engagement_presets/": {
            "get": {
                "operationId": "engagement_presets_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "engagement_presets"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEngagementPresetsList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "engagement_presets_create",
                "tags": [
                    "engagement_presets"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementPresetsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementPresetsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementPresetsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EngagementPresets"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/engagement_presets/{id}/": {
            "get": {
                "operationId": "engagement_presets_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement_ presets.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagement_presets"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EngagementPresets"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "engagement_presets_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement_ presets.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagement_presets"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementPresetsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementPresetsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementPresetsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EngagementPresets"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "engagement_presets_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement_ presets.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagement_presets"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEngagementPresetsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEngagementPresetsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEngagementPresetsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EngagementPresets"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "engagement_presets_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement_ presets.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagement_presets"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/engagement_presets/{id}/delete_preview/": {
            "get": {
                "operationId": "engagement_presets_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement_ presets.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "engagement_presets"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/engagements/": {
            "get": {
                "operationId": "engagements_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "api_test",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "not_product__tags__name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on product",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Not Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "not_tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on model",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created",
                                    "-lead",
                                    "-name",
                                    "-status",
                                    "-target_end",
                                    "-target_start",
                                    "-updated",
                                    "-version",
                                    "created",
                                    "lead",
                                    "name",
                                    "status",
                                    "target_end",
                                    "target_start",
                                    "updated",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pen_test",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product__prod_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "product__tags__name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags present on product",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "report_type",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "requester",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "Blocked",
                                "Cancelled",
                                "Completed",
                                "In Progress",
                                "Not Started",
                                "On Hold",
                                "Waiting for Resource"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "target_end",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "target_start",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "threat_model",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEngagementList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "engagements_create",
                "tags": [
                    "engagements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Engagement"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/engagements/{id}/": {
            "get": {
                "operationId": "engagements_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Engagement"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "engagements_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EngagementRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Engagement"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "engagements_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEngagementRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEngagementRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEngagementRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Engagement"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "engagements_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/engagements/{id}/accept_risks/": {
            "post": {
                "operationId": "engagements_accept_risks_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcceptedRiskRequest"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcceptedRiskRequest"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcceptedRiskRequest"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RiskAcceptance"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/engagements/{id}/close/": {
            "post": {
                "operationId": "engagements_close_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/engagements/{id}/delete_preview/": {
            "get": {
                "operationId": "engagements_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/engagements/{id}/files/": {
            "get": {
                "operationId": "engagements_files_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EngagementToFiles"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "engagements_files_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewFileOptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/engagements/{id}/generate_report/": {
            "post": {
                "operationId": "engagements_generate_report_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportGenerate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/engagements/{id}/notes/": {
            "get": {
                "operationId": "engagements_notes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EngagementToNotes"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "engagements_notes_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewNoteOptionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewNoteOptionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewNoteOptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/engagements/{id}/reopen/": {
            "post": {
                "operationId": "engagements_reopen_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this engagement.",
                        "required": true
                    }
                ],
                "tags": [
                    "engagements"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/finding_templates/": {
            "get": {
                "operationId": "finding_templates_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cwe",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mitigation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "not_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Not Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "not_tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on model",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-cwe",
                                    "-title",
                                    "cwe",
                                    "title"
                                ]
                            }
                        },
                        "description": "Ordering",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "severity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "finding_templates"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFindingTemplateList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finding_templates_create",
                "tags": [
                    "finding_templates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingTemplateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingTemplateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/finding_templates/{id}/": {
            "get": {
                "operationId": "finding_templates_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding_ template.",
                        "required": true
                    }
                ],
                "tags": [
                    "finding_templates"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finding_templates_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding_ template.",
                        "required": true
                    }
                ],
                "tags": [
                    "finding_templates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingTemplateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingTemplateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finding_templates_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding_ template.",
                        "required": true
                    }
                ],
                "tags": [
                    "finding_templates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFindingTemplateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFindingTemplateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFindingTemplateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finding_templates_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding_ template.",
                        "required": true
                    }
                ],
                "tags": [
                    "finding_templates"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/finding_templates/{id}/delete_preview/": {
            "get": {
                "operationId": "finding_templates_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding_ template.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "finding_templates"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/": {
            "get": {
                "operationId": "findings_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "component_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "component_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "The date the finding was created inside DefectDojo."
                    },
                    {
                        "in": "query",
                        "name": "cvssv3",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cvssv3_score",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cwe",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "date",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "The date the flaw was discovered."
                    },
                    {
                        "in": "query",
                        "name": "defect_review_requested_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duplicate",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duplicate_finding",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "dynamic_finding",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "endpoints",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "false_p",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finding_group",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "found_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "has_jira",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "hash_code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "impact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_mitigated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "jira_change",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "title": "Jira last update",
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "The date the linked Jira issue was last modified."
                    },
                    {
                        "in": "query",
                        "name": "jira_creation",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "The date a Jira issue was created from this finding."
                    },
                    {
                        "in": "query",
                        "name": "last_reviewed",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "Provides the date the flaw was last 'touched' by a tester."
                    },
                    {
                        "in": "query",
                        "name": "last_reviewed_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "last_status_update",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mitigated",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "Denotes if this flaw has been fixed by storing the date it was fixed."
                    },
                    {
                        "in": "query",
                        "name": "mitigated_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "mitigation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nb_occurences",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Not Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "not_tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on model",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_test__engagement__product__tags__name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on product",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_test__engagement__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on engagement",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_test__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on test",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "numerical_severity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-active",
                                    "-component_name",
                                    "-component_version",
                                    "-created",
                                    "-cwe",
                                    "-date",
                                    "-duplicate",
                                    "-dynamic_finding",
                                    "-false_p",
                                    "-found_by",
                                    "-id",
                                    "-is_mitigated",
                                    "-last_reviewed",
                                    "-last_status_update",
                                    "-numerical_severity",
                                    "-out_of_scope",
                                    "-reviewers",
                                    "-severity",
                                    "-static_finding",
                                    "-test__engagement__product__name",
                                    "-title",
                                    "-under_defect_review",
                                    "-under_review",
                                    "-verified",
                                    "active",
                                    "component_name",
                                    "component_version",
                                    "created",
                                    "cwe",
                                    "date",
                                    "duplicate",
                                    "dynamic_finding",
                                    "false_p",
                                    "found_by",
                                    "id",
                                    "is_mitigated",
                                    "last_reviewed",
                                    "last_status_update",
                                    "numerical_severity",
                                    "out_of_scope",
                                    "reviewers",
                                    "severity",
                                    "static_finding",
                                    "test__engagement__product__name",
                                    "title",
                                    "under_defect_review",
                                    "under_review",
                                    "verified"
                                ]
                            }
                        },
                        "description": "Ordering",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "out_of_scope",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "param",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "planned_remediation_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "defect_review_requested_by",
                                    "duplicate_finding",
                                    "endpoint_set",
                                    "endpoints",
                                    "files",
                                    "finding_group_set",
                                    "found_by",
                                    "last_reviewed_by",
                                    "mitigated_by",
                                    "notes",
                                    "reporter",
                                    "review_requested_by",
                                    "reviewers",
                                    "risk_acceptance_set",
                                    "sonarqube_issue",
                                    "test",
                                    "test_import_set"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "publish_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "references",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "related_fields",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Expand finding external relations (engagement, environment, product,                                             product_type, test, test_type)"
                    },
                    {
                        "in": "query",
                        "name": "reporter",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "review_requested_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "reviewers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "risk_acceptance",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "risk_accepted",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sast_sink_object",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sast_source_file_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sast_source_line",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "sast_source_object",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scanner_confidence",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "severity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "severity_justification",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sla_start_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sonarqube_issue",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "static_finding",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "steps_to_reproduce",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "test__engagement",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__engagement__product",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__engagement__product__prod_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__engagement__product__tags__name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags present on product",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__engagement__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags present on engagement",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags present on test",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__test_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "under_defect_review",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "under_review",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "unique_id_from_tool",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "verified",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vuln_id_from_tool",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vulnerability_id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFindingList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "findings_create",
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/{id}/": {
            "get": {
                "operationId": "findings_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "defect_review_requested_by",
                                    "duplicate_finding",
                                    "endpoint_set",
                                    "endpoints",
                                    "files",
                                    "finding_group_set",
                                    "found_by",
                                    "last_reviewed_by",
                                    "mitigated_by",
                                    "notes",
                                    "reporter",
                                    "review_requested_by",
                                    "reviewers",
                                    "risk_acceptance_set",
                                    "sonarqube_issue",
                                    "test",
                                    "test_import_set"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "related_fields",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Expand finding external relations (engagement, environment, product,                                             product_type, test, test_type)"
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Finding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "findings_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Finding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "findings_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFindingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFindingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFindingRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Finding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "findings_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/findings/{id}/close/": {
            "post": {
                "operationId": "findings_close_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingCloseRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingCloseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingCloseRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingClose"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/{id}/delete_preview/": {
            "get": {
                "operationId": "findings_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/{id}/duplicate/": {
            "get": {
                "operationId": "findings_duplicate_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Finding"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/{id}/duplicate/reset/": {
            "post": {
                "operationId": "findings_duplicate_reset_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/findings/{id}/files/": {
            "get": {
                "operationId": "findings_files_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingToFiles"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "findings_files_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewFileOptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/{id}/metadata/": {
            "get": {
                "operationId": "findings_metadata_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FindingMeta"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "description": "Returned if finding does not exist"
                    }
                }
            },
            "post": {
                "operationId": "findings_metadata_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingMetaRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingMetaRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingMetaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingMeta"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "description": "Returned if finding does not exist"
                    },
                    "400": {
                        "description": "Returned if there was a problem with the metadata information"
                    }
                }
            },
            "put": {
                "operationId": "findings_metadata_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingMetaRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingMetaRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingMetaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingMeta"
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "description": "Returned if finding does not exist"
                    },
                    "400": {
                        "description": "Returned if there was a problem with the metadata information"
                    }
                }
            },
            "delete": {
                "operationId": "findings_metadata_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "name of the metadata to retrieve. If name is empty, return all the                                     metadata associated with the finding",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returned if the metadata was correctly deleted"
                    },
                    "404": {
                        "description": "Returned if finding does not exist"
                    },
                    "400": {
                        "description": "Returned if there was a problem with the metadata information"
                    }
                }
            }
        },
        "/api/v2/findings/{id}/notes/": {
            "get": {
                "operationId": "findings_notes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingToNotes"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "findings_notes_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewNoteOptionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewNoteOptionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewNoteOptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/{id}/original/{new_fid}/": {
            "post": {
                "operationId": "findings_original_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "new_fid",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/findings/{id}/remove_note/": {
            "patch": {
                "operationId": "findings_remove_note_partial_update",
                "description": "Remove Note From Finding Note",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFindingNoteRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFindingNoteRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFindingNoteRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/findings/{id}/remove_tags/": {
            "put": {
                "operationId": "findings_remove_tags_update",
                "description": "Remove Tag(s) from finding list of tags",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "findings_remove_tags_partial_update",
                "description": "Remove Tag(s) from finding list of tags",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTagRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTagRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTagRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/findings/{id}/request_response/": {
            "get": {
                "operationId": "findings_request_response_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BurpRawRequestResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "findings_request_response_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BurpRawRequestResponseRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BurpRawRequestResponseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BurpRawRequestResponseRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BurpRawRequestResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/{id}/tags/": {
            "get": {
                "operationId": "findings_tags_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "findings_tags_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/accept_risks/": {
            "post": {
                "operationId": "findings_accept_risks_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "component_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "component_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "The date the finding was created inside DefectDojo."
                    },
                    {
                        "in": "query",
                        "name": "cvssv3",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cvssv3_score",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cwe",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "date",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "The date the flaw was discovered."
                    },
                    {
                        "in": "query",
                        "name": "defect_review_requested_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duplicate",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "duplicate_finding",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "dynamic_finding",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "endpoints",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "false_p",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finding_group",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "found_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "has_jira",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "hash_code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "impact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_mitigated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "jira_change",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "title": "Jira last update",
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "The date the linked Jira issue was last modified."
                    },
                    {
                        "in": "query",
                        "name": "jira_creation",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "The date a Jira issue was created from this finding."
                    },
                    {
                        "in": "query",
                        "name": "last_reviewed",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "Provides the date the flaw was last 'touched' by a tester."
                    },
                    {
                        "in": "query",
                        "name": "last_reviewed_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "last_status_update",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mitigated",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "Denotes if this flaw has been fixed by storing the date it was fixed."
                    },
                    {
                        "in": "query",
                        "name": "mitigated_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "mitigation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "nb_occurences",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Not Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "not_tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on model",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_test__engagement__product__tags__name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on product",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_test__engagement__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on engagement",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_test__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on test",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "numerical_severity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-active",
                                    "-component_name",
                                    "-component_version",
                                    "-created",
                                    "-cwe",
                                    "-date",
                                    "-duplicate",
                                    "-dynamic_finding",
                                    "-false_p",
                                    "-found_by",
                                    "-id",
                                    "-is_mitigated",
                                    "-last_reviewed",
                                    "-last_status_update",
                                    "-numerical_severity",
                                    "-out_of_scope",
                                    "-reviewers",
                                    "-severity",
                                    "-static_finding",
                                    "-test__engagement__product__name",
                                    "-title",
                                    "-under_defect_review",
                                    "-under_review",
                                    "-verified",
                                    "active",
                                    "component_name",
                                    "component_version",
                                    "created",
                                    "cwe",
                                    "date",
                                    "duplicate",
                                    "dynamic_finding",
                                    "false_p",
                                    "found_by",
                                    "id",
                                    "is_mitigated",
                                    "last_reviewed",
                                    "last_status_update",
                                    "numerical_severity",
                                    "out_of_scope",
                                    "reviewers",
                                    "severity",
                                    "static_finding",
                                    "test__engagement__product__name",
                                    "title",
                                    "under_defect_review",
                                    "under_review",
                                    "verified"
                                ]
                            }
                        },
                        "description": "Ordering",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "out_of_scope",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "param",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "planned_remediation_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "publish_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "references",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reporter",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "review_requested_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "reviewers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "risk_acceptance",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "risk_accepted",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sast_sink_object",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sast_source_file_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sast_source_line",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "sast_source_object",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scanner_confidence",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "severity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "severity_justification",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sla_start_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sonarqube_issue",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "static_finding",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "steps_to_reproduce",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "test__engagement",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__engagement__product",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__engagement__product__prod_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__engagement__product__tags__name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags present on product",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__engagement__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags present on engagement",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags present on test",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "test__test_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "under_defect_review",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "under_review",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "unique_id_from_tool",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "verified",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vuln_id_from_tool",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vulnerability_id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcceptedRiskRequest"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcceptedRiskRequest"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcceptedRiskRequest"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRiskAcceptanceList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/findings/generate_report/": {
            "post": {
                "operationId": "findings_generate_report_create",
                "tags": [
                    "findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportGenerate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/global_roles/": {
            "get": {
                "operationId": "global_roles_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "group",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "global_roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGlobalRoleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "global_roles_create",
                "tags": [
                    "global_roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GlobalRoleRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GlobalRoleRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GlobalRoleRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GlobalRole"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/global_roles/{id}/": {
            "get": {
                "operationId": "global_roles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this global_ role.",
                        "required": true
                    }
                ],
                "tags": [
                    "global_roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GlobalRole"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "global_roles_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this global_ role.",
                        "required": true
                    }
                ],
                "tags": [
                    "global_roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GlobalRoleRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GlobalRoleRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GlobalRoleRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GlobalRole"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "global_roles_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this global_ role.",
                        "required": true
                    }
                ],
                "tags": [
                    "global_roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGlobalRoleRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGlobalRoleRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGlobalRoleRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GlobalRole"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "global_roles_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this global_ role.",
                        "required": true
                    }
                ],
                "tags": [
                    "global_roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/global_roles/{id}/delete_preview/": {
            "get": {
                "operationId": "global_roles_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this global_ role.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "global_roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/import-languages/": {
            "post": {
                "operationId": "import_languages_create",
                "tags": [
                    "import-languages"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportLanguagesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportLanguages"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/import-scan/": {
            "post": {
                "operationId": "import_scan_create",
                "description": "Imports a scan report into an engagement or product.\n\nBy ID:\n- Create a Product (or use an existing product)\n- Create an Engagement inside the product\n- Provide the id of the engagement in the `engagement` parameter\n\nIn this scenario a new Test will be created inside the engagement.\n\nBy Names:\n- Create a Product (or use an existing product)\n- Create an Engagement inside the product\n- Provide `product_name`\n- Provide `engagement_name`\n- Optionally provide `product_type_name`\n\nIn this scenario Defect Dojo will look up the Engagement by the provided details.\n\nWhen using names you can let the importer automatically create Engagements, Products and Product_Types\nby using `auto_create_context=True`.\n\nWhen `auto_create_context` is set to `True` you can use `deduplication_on_engagement` to restrict deduplication for\nimported Findings to the newly created Engagement.",
                "tags": [
                    "import-scan"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ImportScanRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportScan"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_configurations/": {
            "get": {
                "operationId": "jira_configurations_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "jira_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJIRAInstanceList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "jira_configurations_create",
                "tags": [
                    "jira_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAInstance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_configurations/{id}/": {
            "get": {
                "operationId": "jira_configurations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAInstance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "jira_configurations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAInstance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "jira_configurations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAInstanceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAInstanceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAInstanceRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAInstance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "jira_configurations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/jira_configurations/{id}/delete_preview/": {
            "get": {
                "operationId": "jira_configurations_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "jira_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_finding_mappings/": {
            "get": {
                "operationId": "jira_finding_mappings_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "engagement",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finding",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finding_group",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "jira_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "jira_key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "jira_finding_mappings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJIRAIssueList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "jira_finding_mappings_create",
                "tags": [
                    "jira_finding_mappings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAIssueRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAIssueRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAIssueRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAIssue"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_finding_mappings/{id}/": {
            "get": {
                "operationId": "jira_finding_mappings_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ issue.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_finding_mappings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAIssue"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "jira_finding_mappings_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ issue.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_finding_mappings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAIssueRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAIssueRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAIssueRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAIssue"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "jira_finding_mappings_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ issue.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_finding_mappings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAIssueRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAIssueRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAIssueRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAIssue"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "jira_finding_mappings_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ issue.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_finding_mappings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/jira_finding_mappings/{id}/delete_preview/": {
            "get": {
                "operationId": "jira_finding_mappings_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ issue.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "jira_finding_mappings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_instances/": {
            "get": {
                "operationId": "jira_instances_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "jira_instances"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJIRAInstanceList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "jira_instances_create",
                "tags": [
                    "jira_instances"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAInstance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_instances/{id}/": {
            "get": {
                "operationId": "jira_instances_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_instances"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAInstance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "jira_instances_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_instances"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAInstanceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAInstance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "jira_instances_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_instances"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAInstanceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAInstanceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAInstanceRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAInstance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "jira_instances_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_instances"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/jira_instances/{id}/delete_preview/": {
            "get": {
                "operationId": "jira_instances_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ instance.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "jira_instances"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_product_configurations/": {
            "get": {
                "operationId": "jira_product_configurations_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "component",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "enable_engagement_epic_mapping",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "engagement",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "jira_instance",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project_key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "push_all_issues",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "push_notes",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "jira_product_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJIRAProjectList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "jira_product_configurations_create",
                "tags": [
                    "jira_product_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAProject"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_product_configurations/{id}/": {
            "get": {
                "operationId": "jira_product_configurations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_product_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAProject"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "jira_product_configurations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_product_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAProject"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "jira_product_configurations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_product_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAProjectRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAProjectRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAProjectRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAProject"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "jira_product_configurations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_product_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/jira_product_configurations/{id}/delete_preview/": {
            "get": {
                "operationId": "jira_product_configurations_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "jira_product_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_projects/": {
            "get": {
                "operationId": "jira_projects_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "component",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "enable_engagement_epic_mapping",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "engagement",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "jira_instance",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project_key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "push_all_issues",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "push_notes",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "jira_projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJIRAProjectList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "jira_projects_create",
                "tags": [
                    "jira_projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAProject"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/jira_projects/{id}/": {
            "get": {
                "operationId": "jira_projects_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAProject"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "jira_projects_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JIRAProjectRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAProject"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "jira_projects_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAProjectRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAProjectRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJIRAProjectRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JIRAProject"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "jira_projects_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    }
                ],
                "tags": [
                    "jira_projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/jira_projects/{id}/delete_preview/": {
            "get": {
                "operationId": "jira_projects_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this jir a_ project.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "jira_projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/language_types/": {
            "get": {
                "operationId": "language_types_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "color",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "language",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "language_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedLanguageTypeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "language_types_create",
                "tags": [
                    "language_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/language_types/{id}/": {
            "get": {
                "operationId": "language_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this language_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "language_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "language_types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this language_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "language_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "language_types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this language_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "language_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLanguageTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLanguageTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLanguageTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "language_types_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this language_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "language_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/language_types/{id}/delete_preview/": {
            "get": {
                "operationId": "language_types_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this language_ type.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "language_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/languages/": {
            "get": {
                "operationId": "languages_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "language",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "language",
                                    "product",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "languages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedLanguageList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "languages_create",
                "tags": [
                    "languages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Language"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/languages/{id}/": {
            "get": {
                "operationId": "languages_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this languages.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "language",
                                    "product",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "languages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Language"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "languages_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this languages.",
                        "required": true
                    }
                ],
                "tags": [
                    "languages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LanguageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Language"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "languages_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this languages.",
                        "required": true
                    }
                ],
                "tags": [
                    "languages"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLanguageRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLanguageRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLanguageRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Language"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "languages_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this languages.",
                        "required": true
                    }
                ],
                "tags": [
                    "languages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/languages/{id}/delete_preview/": {
            "get": {
                "operationId": "languages_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this languages.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "languages"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/metadata/": {
            "get": {
                "operationId": "metadata_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "endpoint",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finding",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "endpoint",
                                    "finding",
                                    "product"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "value",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "metadata"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMetaList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "metadata_create",
                "tags": [
                    "metadata"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetaRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetaRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/metadata/{id}/": {
            "get": {
                "operationId": "metadata_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo meta.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "endpoint",
                                    "finding",
                                    "product"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "metadata"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "metadata_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo meta.",
                        "required": true
                    }
                ],
                "tags": [
                    "metadata"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MetaRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MetaRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MetaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "metadata_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo meta.",
                        "required": true
                    }
                ],
                "tags": [
                    "metadata"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetaRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetaRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMetaRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Meta"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "metadata_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo meta.",
                        "required": true
                    }
                ],
                "tags": [
                    "metadata"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/metadata/{id}/delete_preview/": {
            "get": {
                "operationId": "metadata_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this dojo meta.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "metadata"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/network_locations/": {
            "get": {
                "operationId": "network_locations_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "location",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "network_locations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNetworkLocationsList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "network_locations_create",
                "tags": [
                    "network_locations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkLocationsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkLocationsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkLocationsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkLocations"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/network_locations/{id}/": {
            "get": {
                "operationId": "network_locations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this network_ locations.",
                        "required": true
                    }
                ],
                "tags": [
                    "network_locations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkLocations"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "network_locations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this network_ locations.",
                        "required": true
                    }
                ],
                "tags": [
                    "network_locations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkLocationsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkLocationsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkLocationsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkLocations"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "network_locations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this network_ locations.",
                        "required": true
                    }
                ],
                "tags": [
                    "network_locations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNetworkLocationsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNetworkLocationsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNetworkLocationsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkLocations"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "network_locations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this network_ locations.",
                        "required": true
                    }
                ],
                "tags": [
                    "network_locations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/network_locations/{id}/delete_preview/": {
            "get": {
                "operationId": "network_locations_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this network_ locations.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "network_locations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/note_type/": {
            "get": {
                "operationId": "note_type_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_mandatory",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_single",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "note_type"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNoteTypeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "note_type_create",
                "tags": [
                    "note_type"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NoteTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NoteTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NoteTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoteType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/note_type/{id}/": {
            "get": {
                "operationId": "note_type_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this note_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "note_type"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoteType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "note_type_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this note_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "note_type"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NoteTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NoteTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NoteTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoteType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "note_type_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this note_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "note_type"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNoteTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNoteTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNoteTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoteType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "note_type_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this note_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "note_type"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/note_type/{id}/delete_preview/": {
            "get": {
                "operationId": "note_type_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this note_ type.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "note_type"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/notes/": {
            "get": {
                "operationId": "notes_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "author",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "edit_time",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "edited",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "editor",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "entry",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "private",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "notes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNoteList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/notes/{id}/": {
            "get": {
                "operationId": "notes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notes.",
                        "required": true
                    }
                ],
                "tags": [
                    "notes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "notes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notes.",
                        "required": true
                    }
                ],
                "tags": [
                    "notes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NoteRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NoteRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NoteRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "notes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notes.",
                        "required": true
                    }
                ],
                "tags": [
                    "notes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNoteRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNoteRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNoteRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/notifications/": {
            "get": {
                "operationId": "notifications_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "product",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "template",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNotificationsList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "notifications_create",
                "tags": [
                    "notifications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notifications"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/notifications/{id}/": {
            "get": {
                "operationId": "notifications_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notifications.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "product",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notifications"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "notifications_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notifications.",
                        "required": true
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notifications"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "notifications_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notifications.",
                        "required": true
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNotificationsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNotificationsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNotificationsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notifications"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "notifications_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notifications.",
                        "required": true
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/notifications/{id}/delete_preview/": {
            "get": {
                "operationId": "notifications_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notifications.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "notifications"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/oa3/schema/": {
            "get": {
                "operationId": "oa3_schema_retrieve",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "yaml"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    }
                ],
                "tags": [
                    "oa3"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_api_scan_configurations/": {
            "get": {
                "operationId": "product_api_scan_configurations_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "service_key_1",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "service_key_2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "service_key_3",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tool_configuration",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_api_scan_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductAPIScanConfigurationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "product_api_scan_configurations_create",
                "tags": [
                    "product_api_scan_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAPIScanConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAPIScanConfigurationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAPIScanConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAPIScanConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_api_scan_configurations/{id}/": {
            "get": {
                "operationId": "product_api_scan_configurations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ap i_ scan_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_api_scan_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAPIScanConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "product_api_scan_configurations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ap i_ scan_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_api_scan_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAPIScanConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAPIScanConfigurationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductAPIScanConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAPIScanConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "product_api_scan_configurations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ap i_ scan_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_api_scan_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductAPIScanConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductAPIScanConfigurationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductAPIScanConfigurationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAPIScanConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "product_api_scan_configurations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ap i_ scan_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_api_scan_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/product_api_scan_configurations/{id}/delete_preview/": {
            "get": {
                "operationId": "product_api_scan_configurations_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ap i_ scan_ configuration.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_api_scan_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_groups/": {
            "get": {
                "operationId": "product_groups_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "group",
                                    "product",
                                    "role"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductGroupList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "product_groups_create",
                "tags": [
                    "product_groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductGroupRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductGroupRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductGroupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_groups/{id}/": {
            "get": {
                "operationId": "product_groups_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ group.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "group",
                                    "product",
                                    "role"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "product_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "product_groups_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ group.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductGroupRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductGroupRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductGroupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "product_groups_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ group.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "405": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "product_groups_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ group.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/product_groups/{id}/delete_preview/": {
            "get": {
                "operationId": "product_groups_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ group.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_members/": {
            "get": {
                "operationId": "product_members_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "product",
                                    "role",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductMemberList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "product_members_create",
                "tags": [
                    "product_members"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductMemberRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_members/{id}/": {
            "get": {
                "operationId": "product_members_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ member.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "product",
                                    "role",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "product_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "product_members_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ member.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_members"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductMemberRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "product_members_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ member.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "405": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "product_members_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ member.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/product_members/{id}/delete_preview/": {
            "get": {
                "operationId": "product_members_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ member.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_type_groups/": {
            "get": {
                "operationId": "product_type_groups_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "group_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "group",
                                    "product_type",
                                    "role"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "product_type_id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_type_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductTypeGroupList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "product_type_groups_create",
                "tags": [
                    "product_type_groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeGroupRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeGroupRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeGroupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypeGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_type_groups/{id}/": {
            "get": {
                "operationId": "product_type_groups_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ group.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "group",
                                    "product_type",
                                    "role"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "product_type_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypeGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "product_type_groups_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ group.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_type_groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeGroupRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeGroupRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeGroupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypeGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "product_type_groups_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ group.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_type_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "405": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "product_type_groups_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ group.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_type_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/product_type_groups/{id}/delete_preview/": {
            "get": {
                "operationId": "product_type_groups_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ group.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_type_groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_type_members/": {
            "get": {
                "operationId": "product_type_members_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "product_type",
                                    "role",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "product_type_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_type_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductTypeMemberList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "product_type_members_create",
                "tags": [
                    "product_type_members"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeMemberRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypeMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_type_members/{id}/": {
            "get": {
                "operationId": "product_type_members_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ member.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "product_type",
                                    "role",
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "product_type_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypeMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "product_type_members_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ member.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_type_members"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeMemberRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypeMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "product_type_members_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ member.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_type_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "405": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "product_type_members_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ member.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_type_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/product_type_members/{id}/delete_preview/": {
            "get": {
                "operationId": "product_type_members_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type_ member.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_type_members"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_types/": {
            "get": {
                "operationId": "product_types_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "critical_product",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "key_product",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "authorization_groups",
                                    "members"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "product_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductTypeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "product_types_create",
                "tags": [
                    "product_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_types/{id}/": {
            "get": {
                "operationId": "product_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "authorization_groups",
                                    "members"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "product_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "product_types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "product_types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "product_types_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/product_types/{id}/delete_preview/": {
            "get": {
                "operationId": "product_types_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "product_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/product_types/{id}/generate_report/": {
            "post": {
                "operationId": "product_types_generate_report_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "product_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportGenerate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/products/": {
            "get": {
                "operationId": "products_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "business_criticality",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "external_audience",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "internet_accessible",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "lifecycle",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "not_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Not Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "not_tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on product",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-business_criticality",
                                    "-created",
                                    "-external_audience",
                                    "-id",
                                    "-internet_accessible",
                                    "-lifecycle",
                                    "-name",
                                    "-origin",
                                    "-platform",
                                    "-prod_numeric_grade",
                                    "-prod_type",
                                    "-prod_type__name",
                                    "-product_manager",
                                    "-product_manager__first_name",
                                    "-product_manager__last_name",
                                    "-revenue",
                                    "-team_manager",
                                    "-team_manager__first_name",
                                    "-team_manager__last_name",
                                    "-technical_contact",
                                    "-technical_contact__first_name",
                                    "-technical_contact__last_name",
                                    "-tid",
                                    "-updated",
                                    "-user_records",
                                    "business_criticality",
                                    "created",
                                    "external_audience",
                                    "id",
                                    "internet_accessible",
                                    "lifecycle",
                                    "name",
                                    "origin",
                                    "platform",
                                    "prod_numeric_grade",
                                    "prod_type",
                                    "prod_type__name",
                                    "product_manager",
                                    "product_manager__first_name",
                                    "product_manager__last_name",
                                    "revenue",
                                    "team_manager",
                                    "team_manager__first_name",
                                    "team_manager__last_name",
                                    "technical_contact",
                                    "technical_contact__first_name",
                                    "technical_contact__last_name",
                                    "tid",
                                    "updated",
                                    "user_records"
                                ]
                            }
                        },
                        "description": "Ordering",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "origin",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "platform",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "authorization_groups",
                                    "members",
                                    "prod_type",
                                    "product_manager",
                                    "regulations",
                                    "sla_configuration",
                                    "team_manager",
                                    "technical_contact"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "prod_numeric_grade",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prod_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "product_manager",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "regulations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "revenue",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "team_manager",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "technical_contact",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "tid",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "enum": [
                                "",
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "products_create",
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/products/{id}/": {
            "get": {
                "operationId": "products_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "authorization_groups",
                                    "members",
                                    "prod_type",
                                    "product_manager",
                                    "regulations",
                                    "sla_configuration",
                                    "team_manager",
                                    "technical_contact"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "products_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "products_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "products_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/products/{id}/delete_preview/": {
            "get": {
                "operationId": "products_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/products/{id}/generate_report/": {
            "post": {
                "operationId": "products_generate_report_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this product.",
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportGenerate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/regulations/": {
            "get": {
                "operationId": "regulations_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "regulations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRegulationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "regulations_create",
                "tags": [
                    "regulations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegulationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegulationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RegulationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Regulation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/regulations/{id}/": {
            "get": {
                "operationId": "regulations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this regulation.",
                        "required": true
                    }
                ],
                "tags": [
                    "regulations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Regulation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "regulations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this regulation.",
                        "required": true
                    }
                ],
                "tags": [
                    "regulations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegulationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegulationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RegulationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Regulation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "regulations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this regulation.",
                        "required": true
                    }
                ],
                "tags": [
                    "regulations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRegulationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRegulationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRegulationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Regulation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "regulations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this regulation.",
                        "required": true
                    }
                ],
                "tags": [
                    "regulations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/regulations/{id}/delete_preview/": {
            "get": {
                "operationId": "regulations_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this regulation.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "regulations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/reimport-scan/": {
            "post": {
                "operationId": "reimport_scan_create",
                "description": "Reimports a scan report into an existing test.\n\nBy ID:\n- Create a Product (or use an existing product)\n- Create an Engagement inside the product\n- Import a scan report and find the id of the Test\n- Provide this in the `test` parameter\n\nBy Names:\n- Create a Product (or use an existing product)\n- Create an Engagement inside the product\n- Import a report which will create a Test\n- Provide `product_name`\n- Provide `engagement_name`\n- Optional: Provide `test_title`\n\nIn this scenario Defect Dojo will look up the Test by the provided details.\nIf no `test_title` is provided, the latest test inside the engagement will be chosen based on scan_type.\n\nWhen using names you can let the importer automatically create Engagements, Products and Product_Types\nby using `auto_create_context=True`.\n\nWhen `auto_create_context` is set to `True` you can use `deduplication_on_engagement` to restrict deduplication for\nimported Findings to the newly created Engagement.",
                "tags": [
                    "reimport-scan"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReImportScanRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReImportScan"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/roles/": {
            "get": {
                "operationId": "roles_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/roles/{id}/": {
            "get": {
                "operationId": "roles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this role.",
                        "required": true
                    }
                ],
                "tags": [
                    "roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/sla_configurations/": {
            "get": {
                "operationId": "sla_configurations_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "sla_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSLAConfigurationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "sla_configurations_create",
                "tags": [
                    "sla_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SLAConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SLAConfigurationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SLAConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SLAConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/sla_configurations/{id}/": {
            "get": {
                "operationId": "sla_configurations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sl a_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "sla_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SLAConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "sla_configurations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sl a_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "sla_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SLAConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SLAConfigurationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SLAConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SLAConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "sla_configurations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sl a_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "sla_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSLAConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSLAConfigurationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSLAConfigurationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SLAConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "sla_configurations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sl a_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "sla_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/sonarqube_issues/": {
            "get": {
                "operationId": "sonarqube_issues_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "sonarqube_issues"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSonarqubeIssueList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "sonarqube_issues_create",
                "tags": [
                    "sonarqube_issues"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SonarqubeIssue"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/sonarqube_issues/{id}/": {
            "get": {
                "operationId": "sonarqube_issues_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue.",
                        "required": true
                    }
                ],
                "tags": [
                    "sonarqube_issues"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SonarqubeIssue"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "sonarqube_issues_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue.",
                        "required": true
                    }
                ],
                "tags": [
                    "sonarqube_issues"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SonarqubeIssue"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "sonarqube_issues_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue.",
                        "required": true
                    }
                ],
                "tags": [
                    "sonarqube_issues"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSonarqubeIssueRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSonarqubeIssueRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSonarqubeIssueRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SonarqubeIssue"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "sonarqube_issues_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue.",
                        "required": true
                    }
                ],
                "tags": [
                    "sonarqube_issues"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/sonarqube_issues/{id}/delete_preview/": {
            "get": {
                "operationId": "sonarqube_issues_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "sonarqube_issues"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/sonarqube_transitions/": {
            "get": {
                "operationId": "sonarqube_transitions_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "finding_status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sonarqube_issue",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sonarqube_status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "transitions",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "sonarqube_transitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSonarqubeIssueTransitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "sonarqube_transitions_create",
                "tags": [
                    "sonarqube_transitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueTransitionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueTransitionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueTransitionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SonarqubeIssueTransition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/sonarqube_transitions/{id}/": {
            "get": {
                "operationId": "sonarqube_transitions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue_ transition.",
                        "required": true
                    }
                ],
                "tags": [
                    "sonarqube_transitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SonarqubeIssueTransition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "sonarqube_transitions_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue_ transition.",
                        "required": true
                    }
                ],
                "tags": [
                    "sonarqube_transitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueTransitionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueTransitionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SonarqubeIssueTransitionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SonarqubeIssueTransition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "sonarqube_transitions_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue_ transition.",
                        "required": true
                    }
                ],
                "tags": [
                    "sonarqube_transitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSonarqubeIssueTransitionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSonarqubeIssueTransitionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSonarqubeIssueTransitionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SonarqubeIssueTransition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "sonarqube_transitions_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue_ transition.",
                        "required": true
                    }
                ],
                "tags": [
                    "sonarqube_transitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/sonarqube_transitions/{id}/delete_preview/": {
            "get": {
                "operationId": "sonarqube_transitions_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this sonarqube_ issue_ transition.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "sonarqube_transitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/stub_findings/": {
            "get": {
                "operationId": "stub_findings_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "severity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "stub_findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedStubFindingList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "stub_findings_create",
                "tags": [
                    "stub_findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StubFindingCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/StubFindingCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StubFindingCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StubFindingCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/stub_findings/{id}/": {
            "get": {
                "operationId": "stub_findings_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this stub_ finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "stub_findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StubFinding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "stub_findings_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this stub_ finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "stub_findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StubFindingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/StubFindingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StubFindingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StubFinding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "stub_findings_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this stub_ finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "stub_findings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStubFindingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStubFindingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStubFindingRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StubFinding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "stub_findings_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this stub_ finding.",
                        "required": true
                    }
                ],
                "tags": [
                    "stub_findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/stub_findings/{id}/delete_preview/": {
            "get": {
                "operationId": "stub_findings_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this stub_ finding.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "stub_findings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/system_settings/": {
            "get": {
                "operationId": "system_settings_list",
                "description": "Basic control over System Settings. Use 'id' 1 for PUT, PATCH operations",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "system_settings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSystemSettingsList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/system_settings/{id}/": {
            "put": {
                "operationId": "system_settings_update",
                "description": "Basic control over System Settings. Use 'id' 1 for PUT, PATCH operations",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this system_ settings.",
                        "required": true
                    }
                ],
                "tags": [
                    "system_settings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SystemSettingsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SystemSettingsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SystemSettingsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemSettings"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "system_settings_partial_update",
                "description": "Basic control over System Settings. Use 'id' 1 for PUT, PATCH operations",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this system_ settings.",
                        "required": true
                    }
                ],
                "tags": [
                    "system_settings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSystemSettingsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSystemSettingsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSystemSettingsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemSettings"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/technologies/": {
            "get": {
                "operationId": "technologies_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "not_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Not Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "not_tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on model",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "technologies"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAppAnalysisList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "technologies_create",
                "tags": [
                    "technologies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppAnalysisRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AppAnalysisRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AppAnalysisRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAnalysis"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/technologies/{id}/": {
            "get": {
                "operationId": "technologies_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this app_ analysis.",
                        "required": true
                    }
                ],
                "tags": [
                    "technologies"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAnalysis"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "technologies_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this app_ analysis.",
                        "required": true
                    }
                ],
                "tags": [
                    "technologies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AppAnalysisRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AppAnalysisRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AppAnalysisRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAnalysis"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "technologies_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this app_ analysis.",
                        "required": true
                    }
                ],
                "tags": [
                    "technologies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAppAnalysisRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAppAnalysisRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAppAnalysisRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppAnalysis"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "technologies_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this app_ analysis.",
                        "required": true
                    }
                ],
                "tags": [
                    "technologies"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/technologies/{id}/delete_preview/": {
            "get": {
                "operationId": "technologies_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this app_ analysis.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "technologies"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/test_imports/": {
            "get": {
                "operationId": "test_imports_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "branch_tag",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "build_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "commit_hash",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "findings_affected",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "findings_affected",
                                    "test"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "test",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "test_import_finding_action__action",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "C",
                                "N",
                                "R",
                                "U"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "test_import_finding_action__created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "test_import_finding_action__finding",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "test_imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTestImportList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_imports_create",
                "tags": [
                    "test_imports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestImportRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestImportRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestImportRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestImport"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/test_imports/{id}/": {
            "get": {
                "operationId": "test_imports_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test_ import.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "findings_affected",
                                    "test"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "test_imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestImport"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_imports_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test_ import.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_imports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestImportRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestImportRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestImportRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestImport"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_imports_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test_ import.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_imports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestImportRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestImportRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestImportRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestImport"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "test_imports_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test_ import.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/test_imports/{id}/delete_preview/": {
            "get": {
                "operationId": "test_imports_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test_ import.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/test_types/": {
            "get": {
                "operationId": "test_types_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "test_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTestTypeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "test_types_create",
                "tags": [
                    "test_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/test_types/{id}/": {
            "get": {
                "operationId": "test_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "test_types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "test_types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "test_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tests/": {
            "get": {
                "operationId": "tests_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "actual_time",
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "api_scan_configuration",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "branch_tag",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "build_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "commit_hash",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "engagement",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "engagement__product__tags__name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags present on product",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "engagement__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags present on engagement",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "not_engagement__product__tags__name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on product",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_engagement__tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on engagement",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "not_tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Not Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "not_tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags not present on model",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-api_scan_configuration",
                                    "-branch_tag",
                                    "-build_id",
                                    "-commit_hash",
                                    "-created",
                                    "-engagement",
                                    "-lead",
                                    "-target_end",
                                    "-target_start",
                                    "-test_type",
                                    "-title",
                                    "-updated",
                                    "-version",
                                    "api_scan_configuration",
                                    "branch_tag",
                                    "build_id",
                                    "commit_hash",
                                    "created",
                                    "engagement",
                                    "lead",
                                    "target_end",
                                    "target_start",
                                    "test_type",
                                    "title",
                                    "updated",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "percent_complete",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Tag name contains"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Comma seperated list of exact tags",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "target_end",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "target_start",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "test_type",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "tests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTestList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "tests_create",
                "tags": [
                    "tests"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tests/{id}/": {
            "get": {
                "operationId": "tests_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Test"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "tests_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Test"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "tests_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTestRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Test"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "tests_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/tests/{id}/accept_risks/": {
            "post": {
                "operationId": "tests_accept_risks_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcceptedRiskRequest"
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcceptedRiskRequest"
                                }
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AcceptedRiskRequest"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RiskAcceptance"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tests/{id}/delete_preview/": {
            "get": {
                "operationId": "tests_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "tests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tests/{id}/files/": {
            "get": {
                "operationId": "tests_files_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestToFiles"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "tests_files_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewFileOptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tests/{id}/generate_report/": {
            "post": {
                "operationId": "tests_generate_report_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportGenerateOptionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportGenerate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tests/{id}/notes/": {
            "get": {
                "operationId": "tests_notes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestToNotes"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "tests_notes_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this test.",
                        "required": true
                    }
                ],
                "tags": [
                    "tests"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewNoteOptionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewNoteOptionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AddNewNoteOptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tool_configurations/": {
            "get": {
                "operationId": "tool_configurations_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "authentication_type",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "API",
                                "Password",
                                "SSH"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tool_type",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "tool_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedToolConfigurationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "tool_configurations_create",
                "tags": [
                    "tool_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolConfigurationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tool_configurations/{id}/": {
            "get": {
                "operationId": "tool_configurations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "tool_configurations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolConfigurationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "tool_configurations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_configurations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedToolConfigurationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedToolConfigurationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedToolConfigurationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "tool_configurations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ configuration.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/tool_configurations/{id}/delete_preview/": {
            "get": {
                "operationId": "tool_configurations_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ configuration.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "tool_configurations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tool_product_settings/": {
            "get": {
                "operationId": "tool_product_settings_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tool_configuration",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tool_project_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "tool_product_settings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedToolProductSettingsList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "tool_product_settings_create",
                "tags": [
                    "tool_product_settings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolProductSettingsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolProductSettingsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolProductSettingsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolProductSettings"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tool_product_settings/{id}/": {
            "get": {
                "operationId": "tool_product_settings_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ product_ settings.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_product_settings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolProductSettings"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "tool_product_settings_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ product_ settings.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_product_settings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolProductSettingsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolProductSettingsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolProductSettingsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolProductSettings"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "tool_product_settings_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ product_ settings.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_product_settings"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedToolProductSettingsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedToolProductSettingsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedToolProductSettingsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolProductSettings"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "tool_product_settings_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ product_ settings.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_product_settings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/tool_product_settings/{id}/delete_preview/": {
            "get": {
                "operationId": "tool_product_settings_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ product_ settings.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "tool_product_settings"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tool_types/": {
            "get": {
                "operationId": "tool_types_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "tool_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedToolTypeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "tool_types_create",
                "tags": [
                    "tool_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/tool_types/{id}/": {
            "get": {
                "operationId": "tool_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "tool_types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ToolTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "tool_types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_types"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedToolTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedToolTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedToolTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "tool_types_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ type.",
                        "required": true
                    }
                ],
                "tags": [
                    "tool_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/tool_types/{id}/delete_preview/": {
            "get": {
                "operationId": "tool_types_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tool_ type.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "tool_types"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/user_contact_infos/": {
            "get": {
                "operationId": "user_contact_infos_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "block_execution",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cell_number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "force_password_reset",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "github_username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "phone_number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    },
                    {
                        "in": "query",
                        "name": "slack_user_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "slack_username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "twitter_username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "user_contact_infos"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserContactInfoList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "user_contact_infos_create",
                "tags": [
                    "user_contact_infos"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserContactInfoRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserContactInfoRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserContactInfoRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserContactInfo"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/user_contact_infos/{id}/": {
            "get": {
                "operationId": "user_contact_infos_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user contact info.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prefetch",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "user"
                                ]
                            }
                        },
                        "description": "List of fields for which to prefetch model instances and add those to the response"
                    }
                ],
                "tags": [
                    "user_contact_infos"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserContactInfo"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "user_contact_infos_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user contact info.",
                        "required": true
                    }
                ],
                "tags": [
                    "user_contact_infos"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserContactInfoRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserContactInfoRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserContactInfoRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserContactInfo"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "user_contact_infos_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user contact info.",
                        "required": true
                    }
                ],
                "tags": [
                    "user_contact_infos"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserContactInfoRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserContactInfoRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserContactInfoRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserContactInfo"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "user_contact_infos_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user contact info.",
                        "required": true
                    }
                ],
                "tags": [
                    "user_contact_infos"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/user_contact_infos/{id}/delete_preview/": {
            "get": {
                "operationId": "user_contact_infos_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user contact info.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "user_contact_infos"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/user_profile/": {
            "get": {
                "operationId": "user_profile_retrieve",
                "tags": [
                    "user_profile"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/users/": {
            "get": {
                "operationId": "users_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_superuser",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "users_create",
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v2/users/{id}/": {
            "get": {
                "operationId": "users_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "users_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "users_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "users_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v2/users/{id}/delete_preview/": {
            "get": {
                "operationId": "users_delete_preview_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeletePreviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AcceptedRiskRequest": {
                "type": "object",
                "properties": {
                    "vulnerability_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "An id of a vulnerability in a security advisory associated with this finding. Can be a Common Vulnerabilities and Exposure (CVE) or from other sources.",
                        "maxLength": 50
                    },
                    "justification": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Justification for accepting findings with this vulnerability id"
                    },
                    "accepted_by": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name or email of person who accepts the risk",
                        "maxLength": 200
                    }
                },
                "required": [
                    "accepted_by",
                    "justification",
                    "vulnerability_id"
                ]
            },
            "AddNewFileOptionRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "file": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "required": [
                    "file",
                    "title"
                ]
            },
            "AddNewNoteOptionRequest": {
                "type": "object",
                "properties": {
                    "entry": {
                        "type": "string",
                        "minLength": 1
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "note_type": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "entry"
                ]
            },
            "AppAnalysis": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "confidence": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Confidence level"
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "title": "Version Number",
                        "maxLength": 200
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "website": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 400
                    },
                    "website_found": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 400
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "product": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    }
                },
                "required": [
                    "created",
                    "id",
                    "name",
                    "product",
                    "user"
                ]
            },
            "AppAnalysisRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "confidence": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Confidence level"
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "title": "Version Number",
                        "maxLength": 200
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "website": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 400
                    },
                    "website_found": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 400
                    },
                    "product": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "product",
                    "user"
                ]
            },
            "AuthToken": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "token"
                ]
            },
            "AuthTokenRequest": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    }
                },
                "required": [
                    "password",
                    "username"
                ]
            },
            "BurpRawRequestResponse": {
                "type": "object",
                "properties": {
                    "req_resp": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                },
                "required": [
                    "req_resp"
                ]
            },
            "BurpRawRequestResponseRequest": {
                "type": "object",
                "properties": {
                    "req_resp": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                },
                "required": [
                    "req_resp"
                ]
            },
            "ConfigurationPermission": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "codename": {
                        "type": "string",
                        "maxLength": 100
                    }
                },
                "required": [
                    "codename",
                    "id",
                    "name"
                ]
            },
            "DeletePreview": {
                "type": "object",
                "properties": {
                    "model": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "model",
                    "name"
                ]
            },
            "DeltaStatistics": {
                "type": "object",
                "properties": {
                    "created": {
                        "$ref": "#/components/schemas/SeverityStatusStatistics"
                    },
                    "closed": {
                        "$ref": "#/components/schemas/SeverityStatusStatistics"
                    },
                    "reactivated": {
                        "$ref": "#/components/schemas/SeverityStatusStatistics"
                    },
                    "left untouched": {
                        "$ref": "#/components/schemas/SeverityStatusStatistics"
                    }
                },
                "required": [
                    "closed",
                    "created",
                    "left untouched",
                    "reactivated"
                ]
            },
            "DeltaStatisticsRequest": {
                "type": "object",
                "properties": {
                    "created": {
                        "$ref": "#/components/schemas/SeverityStatusStatisticsRequest"
                    },
                    "closed": {
                        "$ref": "#/components/schemas/SeverityStatusStatisticsRequest"
                    },
                    "reactivated": {
                        "$ref": "#/components/schemas/SeverityStatusStatisticsRequest"
                    },
                    "left untouched": {
                        "$ref": "#/components/schemas/SeverityStatusStatisticsRequest"
                    }
                },
                "required": [
                    "closed",
                    "created",
                    "left untouched",
                    "reactivated"
                ]
            },
            "DevelopmentEnvironment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "DevelopmentEnvironmentRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    }
                },
                "required": [
                    "name"
                ]
            },
            "DojoGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "configuration_permissions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 4000
                    },
                    "social_provider": {
                        "enum": [
                            "AzureAD",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true,
                        "title": "Social Authentication Provider",
                        "description": "Group imported from a social provider."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "product_groups": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "product_type_groups": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            },
                            "users": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "users"
                ]
            },
            "DojoGroupMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "group": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer",
                        "title": "Group role",
                        "description": "This role determines the permissions of the user to manage the group."
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "group": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "group",
                    "id",
                    "role",
                    "user"
                ]
            },
            "DojoGroupMemberRequest": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer",
                        "title": "Group role",
                        "description": "This role determines the permissions of the user to manage the group."
                    }
                },
                "required": [
                    "group",
                    "role",
                    "user"
                ]
            },
            "DojoGroupRequest": {
                "type": "object",
                "properties": {
                    "configuration_permissions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 4000
                    },
                    "social_provider": {
                        "enum": [
                            "AzureAD",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true,
                        "title": "Social Authentication Provider",
                        "description": "Group imported from a social provider."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Endpoint": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "protocol": {
                        "type": "string",
                        "nullable": true,
                        "description": "The communication protocol/scheme such as 'http', 'ftp', 'dns', etc.",
                        "maxLength": 20
                    },
                    "userinfo": {
                        "type": "string",
                        "nullable": true,
                        "description": "User info as 'alice', 'bob', etc.",
                        "maxLength": 500
                    },
                    "host": {
                        "type": "string",
                        "nullable": true,
                        "description": "The host name or IP address. It must not include the port number. For example '127.0.0.1', 'localhost', 'yourdomain.com'.",
                        "maxLength": 500
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The network port associated with the endpoint."
                    },
                    "path": {
                        "type": "string",
                        "nullable": true,
                        "description": "The location of the resource, it must not start with a '/'. For example endpoint/420/edit",
                        "maxLength": 500
                    },
                    "query": {
                        "type": "string",
                        "nullable": true,
                        "description": "The query string, the question mark should be omitted.For example 'group=4&team=8'",
                        "maxLength": 1000
                    },
                    "fragment": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fragment identifier which follows the hash mark. The hash mark should be omitted. For example 'section-13', 'paragraph-2'.",
                        "maxLength": 500
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "endpoint_params": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "findings": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "endpoint_params",
                    "findings",
                    "id"
                ]
            },
            "EndpointMetaImporter": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "uri"
                    },
                    "create_endpoints": {
                        "type": "boolean",
                        "default": true
                    },
                    "create_tags": {
                        "type": "boolean",
                        "default": true
                    },
                    "create_dojo_meta": {
                        "type": "boolean",
                        "default": false
                    },
                    "product_name": {
                        "type": "string"
                    },
                    "product": {
                        "type": "integer"
                    },
                    "product_id": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "file",
                    "product_id"
                ]
            },
            "EndpointMetaImporterRequest": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    },
                    "create_endpoints": {
                        "type": "boolean",
                        "default": true
                    },
                    "create_tags": {
                        "type": "boolean",
                        "default": true
                    },
                    "create_dojo_meta": {
                        "type": "boolean",
                        "default": false
                    },
                    "product_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "product": {
                        "type": "integer"
                    }
                },
                "required": [
                    "file"
                ]
            },
            "EndpointRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "protocol": {
                        "type": "string",
                        "nullable": true,
                        "description": "The communication protocol/scheme such as 'http', 'ftp', 'dns', etc.",
                        "maxLength": 20
                    },
                    "userinfo": {
                        "type": "string",
                        "nullable": true,
                        "description": "User info as 'alice', 'bob', etc.",
                        "maxLength": 500
                    },
                    "host": {
                        "type": "string",
                        "nullable": true,
                        "description": "The host name or IP address. It must not include the port number. For example '127.0.0.1', 'localhost', 'yourdomain.com'.",
                        "maxLength": 500
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The network port associated with the endpoint."
                    },
                    "path": {
                        "type": "string",
                        "nullable": true,
                        "description": "The location of the resource, it must not start with a '/'. For example endpoint/420/edit",
                        "maxLength": 500
                    },
                    "query": {
                        "type": "string",
                        "nullable": true,
                        "description": "The query string, the question mark should be omitted.For example 'group=4&team=8'",
                        "maxLength": 1000
                    },
                    "fragment": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fragment identifier which follows the hash mark. The hash mark should be omitted. For example 'section-13', 'paragraph-2'.",
                        "maxLength": 500
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "EndpointStatus": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "last_modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "mitigated": {
                        "type": "boolean"
                    },
                    "mitigated_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "false_positive": {
                        "type": "boolean"
                    },
                    "out_of_scope": {
                        "type": "boolean"
                    },
                    "risk_accepted": {
                        "type": "boolean"
                    },
                    "mitigated_by": {
                        "type": "integer",
                        "nullable": true
                    },
                    "endpoint": {
                        "type": "integer"
                    },
                    "finding": {
                        "type": "integer"
                    }
                },
                "required": [
                    "endpoint",
                    "finding",
                    "id",
                    "last_modified",
                    "mitigated_time"
                ]
            },
            "EndpointStatusRequest": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "mitigated": {
                        "type": "boolean"
                    },
                    "false_positive": {
                        "type": "boolean"
                    },
                    "out_of_scope": {
                        "type": "boolean"
                    },
                    "risk_accepted": {
                        "type": "boolean"
                    },
                    "mitigated_by": {
                        "type": "integer",
                        "nullable": true
                    },
                    "endpoint": {
                        "type": "integer"
                    },
                    "finding": {
                        "type": "integer"
                    }
                },
                "required": [
                    "endpoint",
                    "finding"
                ]
            },
            "Engagement": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 300
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Version of the product the engagement tested.",
                        "maxLength": 100
                    },
                    "first_contacted": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "target_start": {
                        "type": "string",
                        "format": "date"
                    },
                    "target_end": {
                        "type": "string",
                        "format": "date"
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "tracker": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Link to epic or ticket system with changes to version.",
                        "maxLength": 200
                    },
                    "test_strategy": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "threat_model": {
                        "type": "boolean"
                    },
                    "api_test": {
                        "type": "boolean"
                    },
                    "pen_test": {
                        "type": "boolean"
                    },
                    "check_list": {
                        "type": "boolean"
                    },
                    "status": {
                        "enum": [
                            "Not Started",
                            "Blocked",
                            "Cancelled",
                            "Completed",
                            "In Progress",
                            "On Hold",
                            "Waiting for Resource",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "progress": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tmodel_path": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "done_testing": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "engagement_type": {
                        "enum": [
                            "Interactive",
                            "CI/CD",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID of the product the engagement tested.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash from repo",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch of the product the engagement tested.",
                        "maxLength": 150
                    },
                    "source_code_management_uri": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Repo",
                        "description": "Resource link to source code",
                        "maxLength": 600
                    },
                    "deduplication_on_engagement": {
                        "type": "boolean",
                        "title": "Deduplication within this engagement only",
                        "description": "If enabled deduplication will only mark a finding in this engagement as duplicate of another finding if both findings are in this engagement. If disabled, deduplication is on the product level."
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "requester": {
                        "type": "integer",
                        "nullable": true
                    },
                    "preset": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Settings and notes for performing this engagement."
                    },
                    "report_type": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product": {
                        "type": "integer"
                    },
                    "build_server": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Build server responsible for CI/CD test"
                    },
                    "source_code_management_server": {
                        "type": "integer",
                        "nullable": true,
                        "title": "SCM Server",
                        "description": "Source code server for CI/CD test"
                    },
                    "orchestration_engine": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Orchestration service responsible for CI/CD test"
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Note"
                        },
                        "readOnly": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        },
                        "readOnly": true
                    },
                    "risk_acceptance": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "active",
                    "created",
                    "done_testing",
                    "files",
                    "id",
                    "notes",
                    "product",
                    "progress",
                    "risk_acceptance",
                    "target_end",
                    "target_start",
                    "tmodel_path",
                    "updated"
                ]
            },
            "EngagementPresets": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "description": "Brief description of preset.",
                        "maxLength": 500
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true,
                        "description": "Description of what needs to be tested or setting up environment for testing",
                        "maxLength": 2000
                    },
                    "scope": {
                        "type": "string",
                        "description": "Scope of Engagement testing, IP's/Resources/URL's)",
                        "maxLength": 800
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "product": {
                        "type": "integer"
                    },
                    "test_type": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "network_locations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "created",
                    "id",
                    "product"
                ]
            },
            "EngagementPresetsRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Brief description of preset.",
                        "maxLength": 500
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true,
                        "description": "Description of what needs to be tested or setting up environment for testing",
                        "maxLength": 2000
                    },
                    "scope": {
                        "type": "string",
                        "description": "Scope of Engagement testing, IP's/Resources/URL's)",
                        "maxLength": 800
                    },
                    "product": {
                        "type": "integer"
                    },
                    "test_type": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "network_locations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "product"
                ]
            },
            "EngagementRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 300
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Version of the product the engagement tested.",
                        "maxLength": 100
                    },
                    "first_contacted": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "target_start": {
                        "type": "string",
                        "format": "date"
                    },
                    "target_end": {
                        "type": "string",
                        "format": "date"
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "tracker": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Link to epic or ticket system with changes to version.",
                        "maxLength": 200
                    },
                    "test_strategy": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "threat_model": {
                        "type": "boolean"
                    },
                    "api_test": {
                        "type": "boolean"
                    },
                    "pen_test": {
                        "type": "boolean"
                    },
                    "check_list": {
                        "type": "boolean"
                    },
                    "status": {
                        "enum": [
                            "Not Started",
                            "Blocked",
                            "Cancelled",
                            "Completed",
                            "In Progress",
                            "On Hold",
                            "Waiting for Resource",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "engagement_type": {
                        "enum": [
                            "Interactive",
                            "CI/CD",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID of the product the engagement tested.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash from repo",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch of the product the engagement tested.",
                        "maxLength": 150
                    },
                    "source_code_management_uri": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Repo",
                        "description": "Resource link to source code",
                        "maxLength": 600
                    },
                    "deduplication_on_engagement": {
                        "type": "boolean",
                        "title": "Deduplication within this engagement only",
                        "description": "If enabled deduplication will only mark a finding in this engagement as duplicate of another finding if both findings are in this engagement. If disabled, deduplication is on the product level."
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "requester": {
                        "type": "integer",
                        "nullable": true
                    },
                    "preset": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Settings and notes for performing this engagement."
                    },
                    "report_type": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product": {
                        "type": "integer"
                    },
                    "build_server": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Build server responsible for CI/CD test"
                    },
                    "source_code_management_server": {
                        "type": "integer",
                        "nullable": true,
                        "title": "SCM Server",
                        "description": "Source code server for CI/CD test"
                    },
                    "orchestration_engine": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Orchestration service responsible for CI/CD test"
                    }
                },
                "required": [
                    "product",
                    "target_end",
                    "target_start"
                ]
            },
            "EngagementToFiles": {
                "type": "object",
                "properties": {
                    "engagement_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    }
                },
                "required": [
                    "engagement_id",
                    "files"
                ]
            },
            "EngagementToNotes": {
                "type": "object",
                "properties": {
                    "engagement_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Note"
                        }
                    }
                },
                "required": [
                    "engagement_id",
                    "notes"
                ]
            },
            "ExecutiveSummary": {
                "type": "object",
                "properties": {
                    "engagement_name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "engagement_target_start": {
                        "type": "string",
                        "format": "date"
                    },
                    "engagement_target_end": {
                        "type": "string",
                        "format": "date"
                    },
                    "test_type_name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "test_target_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "test_target_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "test_environment_name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "test_strategy_ref": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "total_findings": {
                        "type": "integer"
                    }
                },
                "required": [
                    "engagement_name",
                    "engagement_target_end",
                    "engagement_target_start",
                    "test_environment_name",
                    "test_strategy_ref",
                    "test_target_end",
                    "test_target_start",
                    "test_type_name",
                    "total_findings"
                ]
            },
            "File": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "file": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 100
                    }
                },
                "required": [
                    "file",
                    "id",
                    "title"
                ]
            },
            "FileRequest": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    }
                },
                "required": [
                    "file",
                    "title"
                ]
            },
            "Finding": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "request_response": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/BurpRawRequestResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "accepted_risks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RiskAcceptance"
                        },
                        "readOnly": true
                    },
                    "push_to_jira": {
                        "type": "boolean",
                        "default": false
                    },
                    "age": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "sla_days_remaining": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "finding_meta": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FindingMeta"
                        },
                        "readOnly": true
                    },
                    "related_fields": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FindingRelatedFields"
                            }
                        ],
                        "readOnly": true
                    },
                    "jira_creation": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "jira_change": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "display_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "finding_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FindingGroup"
                        },
                        "readOnly": true
                    },
                    "vulnerability_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityId"
                        }
                    },
                    "title": {
                        "type": "string",
                        "description": "A short description of the flaw.",
                        "maxLength": 511
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the flaw was discovered."
                    },
                    "sla_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "(readonly)The date used as start date for SLA calculation. Set by expiring risk acceptances. Empty by default, causing a fallback to 'date'."
                    },
                    "cwe": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The CWE number associated with this flaw."
                    },
                    "cvssv3": {
                        "type": "string",
                        "nullable": true,
                        "title": "CVSS v3",
                        "description": "Common Vulnerability Scoring System version 3 (CVSSv3) score associated with this flaw.",
                        "pattern": "^AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]",
                        "maxLength": 117
                    },
                    "cvssv3_score": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Numerical CVSSv3 score for the vulnerability. If the vector is given, the score is updated while saving the finding"
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "External reference that provides more information about this flaw."
                    },
                    "severity": {
                        "type": "string",
                        "description": "The severity level of this flaw (Critical, High, Medium, Low, Informational).",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "description": "Longer more descriptive information about the flaw."
                    },
                    "mitigation": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing how to best fix the flaw."
                    },
                    "impact": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the impact this flaw has on systems, products, enterprise, etc."
                    },
                    "steps_to_reproduce": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the steps that must be followed in order to reproduce the flaw / bug."
                    },
                    "severity_justification": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing why a certain severity was associated with this flaw."
                    },
                    "references": {
                        "type": "string",
                        "nullable": true,
                        "description": "The external documentation available for this flaw."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is active or not."
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been manually verified by the tester."
                    },
                    "false_p": {
                        "type": "boolean",
                        "title": "False Positive",
                        "description": "Denotes if this flaw has been deemed a false positive by the tester."
                    },
                    "duplicate": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is a duplicate of other flaws reported."
                    },
                    "out_of_scope": {
                        "type": "boolean",
                        "description": "Denotes if this flaw falls outside the scope of the test and/or engagement."
                    },
                    "risk_accepted": {
                        "type": "boolean",
                        "description": "Denotes if this finding has been marked as an accepted risk."
                    },
                    "under_review": {
                        "type": "boolean",
                        "description": "Denotes is this flaw is currently being reviewed."
                    },
                    "last_status_update": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Timestamp of latest status update (change in status related fields)."
                    },
                    "under_defect_review": {
                        "type": "boolean",
                        "description": "Denotes if this finding is under defect review."
                    },
                    "is_mitigated": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been fixed."
                    },
                    "thread_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mitigated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Denotes if this flaw has been fixed by storing the date it was fixed."
                    },
                    "numerical_severity": {
                        "type": "string",
                        "description": "The numerical representation of the severity (S0, S1, S2, S3, S4).",
                        "maxLength": 4
                    },
                    "last_reviewed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Provides the date the flaw was last 'touched' by a tester."
                    },
                    "param": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Parameter",
                        "description": "Parameter used to trigger the issue (DAST)."
                    },
                    "payload": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Payload used to attack the service / application and trigger the bug / problem."
                    },
                    "hash_code": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "A hash over a configurable set of fields that is used for findings deduplication."
                    },
                    "line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Identified file(s) containing the flaw.",
                        "maxLength": 4000
                    },
                    "component_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the affected component (library name, part of a system, ...).",
                        "maxLength": 200
                    },
                    "component_version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Version of the affected component.",
                        "maxLength": 100
                    },
                    "static_finding": {
                        "type": "boolean",
                        "title": "Static finding (SAST)",
                        "description": "Flaw has been detected from a Static Application Security Testing tool (SAST)."
                    },
                    "dynamic_finding": {
                        "type": "boolean",
                        "title": "Dynamic finding (DAST)",
                        "description": "Flaw has been detected from a Dynamic Application Security Testing tool (DAST)."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The date the finding was created inside DefectDojo."
                    },
                    "scanner_confidence": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Confidence level of vulnerability which is supplied by the scanner."
                    },
                    "unique_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "description": "Vulnerability technical id from the source tool. Allows to track unique vulnerabilities.",
                        "maxLength": 500
                    },
                    "vuln_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "title": "Vulnerability ID from tool",
                        "description": "Non-unique technical id from the source tool associated with the vulnerability type.",
                        "maxLength": 500
                    },
                    "sast_source_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_sink_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Sink object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_source_line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "SAST Source Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "sast_source_file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source file path of the attack vector.",
                        "maxLength": 4000
                    },
                    "nb_occurences": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of occurences",
                        "description": "Number of occurences in the source tool when several vulnerabilites were found and aggregated by the scanner."
                    },
                    "publish_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "Date when this vulnerability was made publicly available."
                    },
                    "service": {
                        "type": "string",
                        "nullable": true,
                        "description": "A service is a self-contained piece of functionality within a Product. This is an optional field which is used in deduplication of findings when set.",
                        "maxLength": 200
                    },
                    "planned_remediation_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "The date the flaw is expected to be remediated."
                    },
                    "test": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The test that is associated with this flaw."
                    },
                    "duplicate_finding": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Link to the original finding if this finding is a duplicate."
                    },
                    "review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a review for this finding."
                    },
                    "defect_review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a defect review for this flaw."
                    },
                    "mitigated_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Documents who has marked this flaw as fixed."
                    },
                    "reporter": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Documents who reported the flaw."
                    },
                    "last_reviewed_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Provides the person who last reviewed the flaw."
                    },
                    "sonarqube_issue": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The SonarQube issue associated with this finding."
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true,
                        "description": "The hosts within the product that are susceptible to this flaw. + The status of the endpoint associated with this flaw (Vulnerable, Mitigated, ...)."
                    },
                    "reviewers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Documents who reviewed the flaw."
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Note"
                        },
                        "readOnly": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true,
                        "description": "Files(s) related to the flaw."
                    },
                    "found_by": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true,
                        "description": "The name of the scanner that identified the flaw."
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "defect_review_requested_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "duplicate_finding": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Finding"
                                }
                            },
                            "endpoint_set": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            },
                            "endpoints": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            },
                            "files": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/File"
                                }
                            },
                            "finding_group_set": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/FindingGroup"
                                }
                            },
                            "found_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TestType"
                                }
                            },
                            "last_reviewed_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "mitigated_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "notes": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            },
                            "reporter": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "review_requested_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "reviewers": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "risk_acceptance_set": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/RiskAcceptance"
                                }
                            },
                            "sonarqube_issue": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/SonarqubeIssue"
                                }
                            },
                            "test": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Test"
                                }
                            },
                            "test_import_set": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TestImport"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "accepted_risks",
                    "age",
                    "created",
                    "description",
                    "display_status",
                    "duplicate_finding",
                    "endpoints",
                    "files",
                    "finding_groups",
                    "finding_meta",
                    "found_by",
                    "hash_code",
                    "id",
                    "jira_change",
                    "jira_creation",
                    "last_reviewed",
                    "last_reviewed_by",
                    "last_status_update",
                    "mitigated",
                    "mitigated_by",
                    "notes",
                    "numerical_severity",
                    "param",
                    "payload",
                    "related_fields",
                    "reporter",
                    "request_response",
                    "scanner_confidence",
                    "severity",
                    "sla_days_remaining",
                    "test",
                    "thread_id",
                    "title",
                    "url"
                ]
            },
            "FindingClose": {
                "type": "object",
                "properties": {
                    "is_mitigated": {
                        "type": "boolean"
                    },
                    "mitigated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "false_p": {
                        "type": "boolean"
                    },
                    "out_of_scope": {
                        "type": "boolean"
                    },
                    "duplicate": {
                        "type": "boolean"
                    }
                }
            },
            "FindingCloseRequest": {
                "type": "object",
                "properties": {
                    "is_mitigated": {
                        "type": "boolean"
                    },
                    "mitigated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "false_p": {
                        "type": "boolean"
                    },
                    "out_of_scope": {
                        "type": "boolean"
                    },
                    "duplicate": {
                        "type": "boolean"
                    }
                }
            },
            "FindingCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        },
                        "readOnly": true
                    },
                    "test": {
                        "type": "integer"
                    },
                    "thread_id": {
                        "type": "integer",
                        "default": 0
                    },
                    "found_by": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "push_to_jira": {
                        "type": "boolean",
                        "default": false
                    },
                    "vulnerability_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityId"
                        }
                    },
                    "reporter": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short description of the flaw.",
                        "maxLength": 511
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the flaw was discovered."
                    },
                    "sla_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "(readonly)The date used as start date for SLA calculation. Set by expiring risk acceptances. Empty by default, causing a fallback to 'date'."
                    },
                    "cwe": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The CWE number associated with this flaw."
                    },
                    "cvssv3": {
                        "type": "string",
                        "nullable": true,
                        "title": "CVSS v3",
                        "description": "Common Vulnerability Scoring System version 3 (CVSSv3) score associated with this flaw.",
                        "pattern": "^AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]",
                        "maxLength": 117
                    },
                    "cvssv3_score": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Numerical CVSSv3 score for the vulnerability. If the vector is given, the score is updated while saving the finding"
                    },
                    "severity": {
                        "type": "string",
                        "description": "The severity level of this flaw (Critical, High, Medium, Low, Informational).",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "description": "Longer more descriptive information about the flaw."
                    },
                    "mitigation": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing how to best fix the flaw."
                    },
                    "impact": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the impact this flaw has on systems, products, enterprise, etc."
                    },
                    "steps_to_reproduce": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the steps that must be followed in order to reproduce the flaw / bug."
                    },
                    "severity_justification": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing why a certain severity was associated with this flaw."
                    },
                    "references": {
                        "type": "string",
                        "nullable": true,
                        "description": "The external documentation available for this flaw."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is active or not."
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been manually verified by the tester."
                    },
                    "false_p": {
                        "type": "boolean",
                        "title": "False Positive",
                        "description": "Denotes if this flaw has been deemed a false positive by the tester."
                    },
                    "duplicate": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is a duplicate of other flaws reported."
                    },
                    "out_of_scope": {
                        "type": "boolean",
                        "description": "Denotes if this flaw falls outside the scope of the test and/or engagement."
                    },
                    "risk_accepted": {
                        "type": "boolean",
                        "description": "Denotes if this finding has been marked as an accepted risk."
                    },
                    "under_review": {
                        "type": "boolean",
                        "description": "Denotes is this flaw is currently being reviewed."
                    },
                    "last_status_update": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Timestamp of latest status update (change in status related fields)."
                    },
                    "under_defect_review": {
                        "type": "boolean",
                        "description": "Denotes if this finding is under defect review."
                    },
                    "is_mitigated": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been fixed."
                    },
                    "mitigated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Denotes if this flaw has been fixed by storing the date it was fixed."
                    },
                    "numerical_severity": {
                        "type": "string",
                        "description": "The numerical representation of the severity (S0, S1, S2, S3, S4).",
                        "maxLength": 4
                    },
                    "last_reviewed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Provides the date the flaw was last 'touched' by a tester."
                    },
                    "param": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Parameter",
                        "description": "Parameter used to trigger the issue (DAST)."
                    },
                    "payload": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Payload used to attack the service / application and trigger the bug / problem."
                    },
                    "hash_code": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "A hash over a configurable set of fields that is used for findings deduplication."
                    },
                    "line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Identified file(s) containing the flaw.",
                        "maxLength": 4000
                    },
                    "component_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the affected component (library name, part of a system, ...).",
                        "maxLength": 200
                    },
                    "component_version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Version of the affected component.",
                        "maxLength": 100
                    },
                    "static_finding": {
                        "type": "boolean",
                        "title": "Static finding (SAST)",
                        "description": "Flaw has been detected from a Static Application Security Testing tool (SAST)."
                    },
                    "dynamic_finding": {
                        "type": "boolean",
                        "title": "Dynamic finding (DAST)",
                        "description": "Flaw has been detected from a Dynamic Application Security Testing tool (DAST)."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The date the finding was created inside DefectDojo."
                    },
                    "scanner_confidence": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Confidence level of vulnerability which is supplied by the scanner."
                    },
                    "unique_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "description": "Vulnerability technical id from the source tool. Allows to track unique vulnerabilities.",
                        "maxLength": 500
                    },
                    "vuln_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "title": "Vulnerability ID from tool",
                        "description": "Non-unique technical id from the source tool associated with the vulnerability type.",
                        "maxLength": 500
                    },
                    "sast_source_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_sink_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Sink object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_source_line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "SAST Source Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "sast_source_file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source file path of the attack vector.",
                        "maxLength": 4000
                    },
                    "nb_occurences": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of occurences",
                        "description": "Number of occurences in the source tool when several vulnerabilites were found and aggregated by the scanner."
                    },
                    "publish_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "Date when this vulnerability was made publicly available."
                    },
                    "service": {
                        "type": "string",
                        "nullable": true,
                        "description": "A service is a self-contained piece of functionality within a Product. This is an optional field which is used in deduplication of findings when set.",
                        "maxLength": 200
                    },
                    "planned_remediation_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "The date the flaw is expected to be remediated."
                    },
                    "duplicate_finding": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Link to the original finding if this finding is a duplicate."
                    },
                    "review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a review for this finding."
                    },
                    "defect_review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a defect review for this flaw."
                    },
                    "mitigated_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Documents who has marked this flaw as fixed."
                    },
                    "last_reviewed_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Provides the person who last reviewed the flaw."
                    },
                    "sonarqube_issue": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The SonarQube issue associated with this finding."
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true,
                        "description": "The hosts within the product that are susceptible to this flaw. + The status of the endpoint associated with this flaw (Vulnerable, Mitigated, ...)."
                    },
                    "reviewers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Documents who reviewed the flaw."
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true,
                        "description": "Files(s) related to the flaw."
                    }
                },
                "required": [
                    "active",
                    "created",
                    "description",
                    "duplicate_finding",
                    "endpoints",
                    "files",
                    "found_by",
                    "hash_code",
                    "id",
                    "last_reviewed",
                    "last_reviewed_by",
                    "last_status_update",
                    "mitigated",
                    "mitigated_by",
                    "notes",
                    "numerical_severity",
                    "param",
                    "payload",
                    "scanner_confidence",
                    "severity",
                    "test",
                    "title",
                    "verified"
                ]
            },
            "FindingCreateRequest": {
                "type": "object",
                "properties": {
                    "test": {
                        "type": "integer"
                    },
                    "thread_id": {
                        "type": "integer",
                        "default": 0
                    },
                    "found_by": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "push_to_jira": {
                        "type": "boolean",
                        "default": false
                    },
                    "vulnerability_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityIdRequest"
                        }
                    },
                    "reporter": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A short description of the flaw.",
                        "maxLength": 511
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the flaw was discovered."
                    },
                    "sla_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "(readonly)The date used as start date for SLA calculation. Set by expiring risk acceptances. Empty by default, causing a fallback to 'date'."
                    },
                    "cwe": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The CWE number associated with this flaw."
                    },
                    "cvssv3": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "title": "CVSS v3",
                        "description": "Common Vulnerability Scoring System version 3 (CVSSv3) score associated with this flaw.",
                        "pattern": "^AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]",
                        "maxLength": 117
                    },
                    "cvssv3_score": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Numerical CVSSv3 score for the vulnerability. If the vector is given, the score is updated while saving the finding"
                    },
                    "severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The severity level of this flaw (Critical, High, Medium, Low, Informational).",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Longer more descriptive information about the flaw."
                    },
                    "mitigation": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing how to best fix the flaw."
                    },
                    "impact": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the impact this flaw has on systems, products, enterprise, etc."
                    },
                    "steps_to_reproduce": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the steps that must be followed in order to reproduce the flaw / bug."
                    },
                    "severity_justification": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing why a certain severity was associated with this flaw."
                    },
                    "references": {
                        "type": "string",
                        "nullable": true,
                        "description": "The external documentation available for this flaw."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is active or not."
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been manually verified by the tester."
                    },
                    "false_p": {
                        "type": "boolean",
                        "title": "False Positive",
                        "description": "Denotes if this flaw has been deemed a false positive by the tester."
                    },
                    "duplicate": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is a duplicate of other flaws reported."
                    },
                    "out_of_scope": {
                        "type": "boolean",
                        "description": "Denotes if this flaw falls outside the scope of the test and/or engagement."
                    },
                    "risk_accepted": {
                        "type": "boolean",
                        "description": "Denotes if this finding has been marked as an accepted risk."
                    },
                    "under_review": {
                        "type": "boolean",
                        "description": "Denotes is this flaw is currently being reviewed."
                    },
                    "under_defect_review": {
                        "type": "boolean",
                        "description": "Denotes if this finding is under defect review."
                    },
                    "is_mitigated": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been fixed."
                    },
                    "numerical_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The numerical representation of the severity (S0, S1, S2, S3, S4).",
                        "maxLength": 4
                    },
                    "line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Identified file(s) containing the flaw.",
                        "maxLength": 4000
                    },
                    "component_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the affected component (library name, part of a system, ...).",
                        "maxLength": 200
                    },
                    "component_version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Version of the affected component.",
                        "maxLength": 100
                    },
                    "static_finding": {
                        "type": "boolean",
                        "title": "Static finding (SAST)",
                        "description": "Flaw has been detected from a Static Application Security Testing tool (SAST)."
                    },
                    "dynamic_finding": {
                        "type": "boolean",
                        "title": "Dynamic finding (DAST)",
                        "description": "Flaw has been detected from a Dynamic Application Security Testing tool (DAST)."
                    },
                    "unique_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "description": "Vulnerability technical id from the source tool. Allows to track unique vulnerabilities.",
                        "maxLength": 500
                    },
                    "vuln_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "title": "Vulnerability ID from tool",
                        "description": "Non-unique technical id from the source tool associated with the vulnerability type.",
                        "maxLength": 500
                    },
                    "sast_source_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_sink_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Sink object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_source_line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "SAST Source Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "sast_source_file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source file path of the attack vector.",
                        "maxLength": 4000
                    },
                    "nb_occurences": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of occurences",
                        "description": "Number of occurences in the source tool when several vulnerabilites were found and aggregated by the scanner."
                    },
                    "publish_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "Date when this vulnerability was made publicly available."
                    },
                    "service": {
                        "type": "string",
                        "nullable": true,
                        "description": "A service is a self-contained piece of functionality within a Product. This is an optional field which is used in deduplication of findings when set.",
                        "maxLength": 200
                    },
                    "planned_remediation_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "The date the flaw is expected to be remediated."
                    },
                    "review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a review for this finding."
                    },
                    "defect_review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a defect review for this flaw."
                    },
                    "sonarqube_issue": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The SonarQube issue associated with this finding."
                    },
                    "reviewers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Documents who reviewed the flaw."
                    }
                },
                "required": [
                    "active",
                    "description",
                    "found_by",
                    "numerical_severity",
                    "severity",
                    "test",
                    "title",
                    "verified"
                ]
            },
            "FindingEngagement": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 300
                    },
                    "product": {
                        "$ref": "#/components/schemas/FindingProduct"
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch of the product the engagement tested.",
                        "maxLength": 150
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID of the product the engagement tested.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash from repo",
                        "maxLength": 150
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Version of the product the engagement tested.",
                        "maxLength": 100
                    }
                },
                "required": [
                    "id"
                ]
            },
            "FindingEnvironment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "FindingGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "test": {
                        "type": "integer"
                    },
                    "jira_issue": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JIRAIssue"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "jira_issue",
                    "name",
                    "test"
                ]
            },
            "FindingGroupRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "test": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "test"
                ]
            },
            "FindingMeta": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "name",
                    "value"
                ]
            },
            "FindingMetaRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 300
                    }
                },
                "required": [
                    "name",
                    "value"
                ]
            },
            "FindingProdType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "FindingProduct": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "prod_type": {
                        "$ref": "#/components/schemas/FindingProdType"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "FindingRelatedFields": {
                "type": "object",
                "properties": {
                    "test": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FindingTest"
                            }
                        ],
                        "readOnly": true
                    },
                    "jira": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JIRAIssue"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "jira",
                    "test"
                ]
            },
            "FindingRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "push_to_jira": {
                        "type": "boolean",
                        "default": false
                    },
                    "vulnerability_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityIdRequest"
                        }
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A short description of the flaw.",
                        "maxLength": 511
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the flaw was discovered."
                    },
                    "sla_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "(readonly)The date used as start date for SLA calculation. Set by expiring risk acceptances. Empty by default, causing a fallback to 'date'."
                    },
                    "cwe": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The CWE number associated with this flaw."
                    },
                    "cvssv3": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "title": "CVSS v3",
                        "description": "Common Vulnerability Scoring System version 3 (CVSSv3) score associated with this flaw.",
                        "pattern": "^AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]",
                        "maxLength": 117
                    },
                    "cvssv3_score": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Numerical CVSSv3 score for the vulnerability. If the vector is given, the score is updated while saving the finding"
                    },
                    "severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The severity level of this flaw (Critical, High, Medium, Low, Informational).",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Longer more descriptive information about the flaw."
                    },
                    "mitigation": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing how to best fix the flaw."
                    },
                    "impact": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the impact this flaw has on systems, products, enterprise, etc."
                    },
                    "steps_to_reproduce": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the steps that must be followed in order to reproduce the flaw / bug."
                    },
                    "severity_justification": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing why a certain severity was associated with this flaw."
                    },
                    "references": {
                        "type": "string",
                        "nullable": true,
                        "description": "The external documentation available for this flaw."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is active or not."
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been manually verified by the tester."
                    },
                    "false_p": {
                        "type": "boolean",
                        "title": "False Positive",
                        "description": "Denotes if this flaw has been deemed a false positive by the tester."
                    },
                    "duplicate": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is a duplicate of other flaws reported."
                    },
                    "out_of_scope": {
                        "type": "boolean",
                        "description": "Denotes if this flaw falls outside the scope of the test and/or engagement."
                    },
                    "risk_accepted": {
                        "type": "boolean",
                        "description": "Denotes if this finding has been marked as an accepted risk."
                    },
                    "under_review": {
                        "type": "boolean",
                        "description": "Denotes is this flaw is currently being reviewed."
                    },
                    "under_defect_review": {
                        "type": "boolean",
                        "description": "Denotes if this finding is under defect review."
                    },
                    "is_mitigated": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been fixed."
                    },
                    "numerical_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The numerical representation of the severity (S0, S1, S2, S3, S4).",
                        "maxLength": 4
                    },
                    "line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Identified file(s) containing the flaw.",
                        "maxLength": 4000
                    },
                    "component_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the affected component (library name, part of a system, ...).",
                        "maxLength": 200
                    },
                    "component_version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Version of the affected component.",
                        "maxLength": 100
                    },
                    "static_finding": {
                        "type": "boolean",
                        "title": "Static finding (SAST)",
                        "description": "Flaw has been detected from a Static Application Security Testing tool (SAST)."
                    },
                    "dynamic_finding": {
                        "type": "boolean",
                        "title": "Dynamic finding (DAST)",
                        "description": "Flaw has been detected from a Dynamic Application Security Testing tool (DAST)."
                    },
                    "unique_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "description": "Vulnerability technical id from the source tool. Allows to track unique vulnerabilities.",
                        "maxLength": 500
                    },
                    "vuln_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "title": "Vulnerability ID from tool",
                        "description": "Non-unique technical id from the source tool associated with the vulnerability type.",
                        "maxLength": 500
                    },
                    "sast_source_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_sink_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Sink object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_source_line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "SAST Source Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "sast_source_file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source file path of the attack vector.",
                        "maxLength": 4000
                    },
                    "nb_occurences": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of occurences",
                        "description": "Number of occurences in the source tool when several vulnerabilites were found and aggregated by the scanner."
                    },
                    "publish_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "Date when this vulnerability was made publicly available."
                    },
                    "service": {
                        "type": "string",
                        "nullable": true,
                        "description": "A service is a self-contained piece of functionality within a Product. This is an optional field which is used in deduplication of findings when set.",
                        "maxLength": 200
                    },
                    "planned_remediation_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "The date the flaw is expected to be remediated."
                    },
                    "review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a review for this finding."
                    },
                    "defect_review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a defect review for this flaw."
                    },
                    "sonarqube_issue": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The SonarQube issue associated with this finding."
                    },
                    "reviewers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Documents who reviewed the flaw."
                    }
                },
                "required": [
                    "description",
                    "numerical_severity",
                    "severity",
                    "title"
                ]
            },
            "FindingTemplate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vulnerability_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityIdTemplate"
                        }
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "cwe": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "cvssv3": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]",
                        "maxLength": 117
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "mitigation": {
                        "type": "string",
                        "nullable": true
                    },
                    "impact": {
                        "type": "string",
                        "nullable": true
                    },
                    "references": {
                        "type": "string",
                        "nullable": true
                    },
                    "last_used": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "numerical_severity": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "template_match": {
                        "type": "boolean",
                        "title": "Template Match Enabled",
                        "description": "Enables this template for matching remediation advice. Match will be applied to all active, verified findings by CWE."
                    },
                    "template_match_title": {
                        "type": "boolean",
                        "title": "Match Template by Title and CWE",
                        "description": "Matches by title text (contains search) and CWE."
                    }
                },
                "required": [
                    "id",
                    "last_used",
                    "numerical_severity",
                    "title"
                ]
            },
            "FindingTemplateRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "vulnerability_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityIdTemplateRequest"
                        }
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1000
                    },
                    "cwe": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "cvssv3": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "pattern": "^AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]",
                        "maxLength": 117
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "mitigation": {
                        "type": "string",
                        "nullable": true
                    },
                    "impact": {
                        "type": "string",
                        "nullable": true
                    },
                    "references": {
                        "type": "string",
                        "nullable": true
                    },
                    "template_match": {
                        "type": "boolean",
                        "title": "Template Match Enabled",
                        "description": "Enables this template for matching remediation advice. Match will be applied to all active, verified findings by CWE."
                    },
                    "template_match_title": {
                        "type": "boolean",
                        "title": "Match Template by Title and CWE",
                        "description": "Matches by title text (contains search) and CWE."
                    }
                },
                "required": [
                    "title"
                ]
            },
            "FindingTest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "test_type": {
                        "$ref": "#/components/schemas/FindingTestType"
                    },
                    "engagement": {
                        "$ref": "#/components/schemas/FindingEngagement"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/FindingEnvironment"
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    }
                },
                "required": [
                    "id"
                ]
            },
            "FindingTestType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "FindingToFiles": {
                "type": "object",
                "properties": {
                    "finding_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    }
                },
                "required": [
                    "files",
                    "finding_id"
                ]
            },
            "FindingToNotes": {
                "type": "object",
                "properties": {
                    "finding_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Note"
                        }
                    }
                },
                "required": [
                    "finding_id",
                    "notes"
                ]
            },
            "GlobalRole": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "group": {
                        "type": "integer",
                        "nullable": true
                    },
                    "role": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Global role",
                        "description": "The global role will be applied to all product types and products."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "GlobalRoleRequest": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "group": {
                        "type": "integer",
                        "nullable": true
                    },
                    "role": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Global role",
                        "description": "The global role will be applied to all product types and products."
                    }
                }
            },
            "ImportLanguages": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "integer"
                    },
                    "file": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "file",
                    "product"
                ]
            },
            "ImportLanguagesRequest": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "integer"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "required": [
                    "file",
                    "product"
                ]
            },
            "ImportScan": {
                "type": "object",
                "properties": {
                    "scan_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Scan completion date will be used on all findings."
                    },
                    "minimum_severity": {
                        "enum": [
                            "Info",
                            "Low",
                            "Medium",
                            "High",
                            "Critical"
                        ],
                        "type": "string",
                        "default": "Info",
                        "description": "Minimum severity level to be imported"
                    },
                    "active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if these findings are currently active."
                    },
                    "verified": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if these findings have been verified."
                    },
                    "scan_type": {
                        "enum": [
                            "Acunetix Scan",
                            "Acunetix360 Scan",
                            "Anchore Engine Scan",
                            "Anchore Enterprise Policy Check",
                            "Anchore Grype",
                            "AnchoreCTL Policies Report",
                            "AnchoreCTL Vuln Report",
                            "AppSpider Scan",
                            "Aqua Scan",
                            "Arachni Scan",
                            "AuditJS Scan",
                            "AWS Prowler Scan",
                            "AWS Scout2 Scan",
                            "AWS Security Hub Scan",
                            "Azure Security Center Recommendations Scan",
                            "Bandit Scan",
                            "BlackDuck API",
                            "Blackduck Component Risk",
                            "Blackduck Hub Scan",
                            "Brakeman Scan",
                            "Bugcrowd API Import",
                            "BugCrowd Scan",
                            "Bundler-Audit Scan",
                            "Burp Enterprise Scan",
                            "Burp GraphQL API",
                            "Burp REST API",
                            "Burp Scan",
                            "CargoAudit Scan",
                            "Checkmarx OSA",
                            "Checkmarx Scan",
                            "Checkmarx Scan detailed",
                            "Checkov Scan",
                            "Clair Klar Scan",
                            "Clair Scan",
                            "Cloudsploit Scan",
                            "Cobalt.io API Import",
                            "Cobalt.io Scan",
                            "Contrast Scan",
                            "Coverity API",
                            "Crashtest Security JSON File",
                            "Crashtest Security XML File",
                            "CredScan Scan",
                            "CycloneDX Scan",
                            "DawnScanner Scan",
                            "Dependency Check Scan",
                            "Dependency Track Finding Packaging Format (FPF) Export",
                            "Detect-secrets Scan",
                            "docker-bench-security Scan",
                            "Dockle Scan",
                            "DrHeader JSON Importer",
                            "DSOP Scan",
                            "Edgescan Scan",
                            "ESLint Scan",
                            "Fortify Scan",
                            "Generic Findings Import",
                            "Ggshield Scan",
                            "Github Vulnerability Scan",
                            "GitLab API Fuzzing Report Scan",
                            "GitLab Container Scan",
                            "GitLab DAST Report",
                            "GitLab Dependency Scanning Report",
                            "GitLab SAST Report",
                            "GitLab Secret Detection Report",
                            "Gitleaks Scan",
                            "Gosec Scanner",
                            "HackerOne Cases",
                            "Hadolint Dockerfile check",
                            "Harbor Vulnerability Scan",
                            "Horusec Scan",
                            "HuskyCI Report",
                            "Hydra Scan",
                            "IBM AppScan DAST",
                            "Immuniweb Scan",
                            "IntSights Report",
                            "JFrog Xray API Summary Artifact Scan",
                            "JFrog Xray Scan",
                            "JFrog Xray Unified Scan",
                            "KICS Scan",
                            "Kiuwan Scan",
                            "kube-bench Scan",
                            "Meterian Scan",
                            "Microfocus Webinspect Scan",
                            "MobSF Scan",
                            "Mobsfscan Scan",
                            "Mozilla Observatory Scan",
                            "Nessus Scan",
                            "Nessus WAS Scan",
                            "Netsparker Scan",
                            "NeuVector (compliance)",
                            "NeuVector (REST)",
                            "Nexpose Scan",
                            "Nikto Scan",
                            "Nmap Scan",
                            "Node Security Platform Scan",
                            "NPM Audit Scan",
                            "Nuclei Scan",
                            "Openscap Vulnerability Scan",
                            "OpenVAS CSV",
                            "ORT evaluated model Importer",
                            "OssIndex Devaudit SCA Scan Importer",
                            "Outpost24 Scan",
                            "PHP Security Audit v2",
                            "PHP Symfony Security Check",
                            "pip-audit Scan",
                            "PMD Scan",
                            "PWN SAST",
                            "Qualys Infrastructure Scan (WebGUI XML)",
                            "Qualys Scan",
                            "Qualys Webapp Scan",
                            "Retire.js Scan",
                            "Risk Recon API Importer",
                            "Rubocop Scan",
                            "Rusty Hog Scan",
                            "SARIF",
                            "Scantist Scan",
                            "Scout Suite Scan",
                            "Semgrep JSON Report",
                            "SKF Scan",
                            "Snyk Scan",
                            "Solar Appscreener Scan",
                            "SonarQube API Import",
                            "SonarQube Scan",
                            "SonarQube Scan detailed",
                            "Sonatype Application Scan",
                            "SpotBugs Scan",
                            "SSL Labs Scan",
                            "Sslscan",
                            "Sslyze Scan",
                            "SSLyze Scan (JSON)",
                            "StackHawk HawkScan",
                            "Terrascan Scan",
                            "Testssl Scan",
                            "TFSec Scan",
                            "Trivy Scan",
                            "Trufflehog Scan",
                            "Trufflehog3 Scan",
                            "Trustwave Fusion API Scan",
                            "Trustwave Scan (CSV)",
                            "Twistlock Image Scan",
                            "VCG Scan",
                            "Veracode Scan",
                            "Veracode SourceClear Scan",
                            "Vulners",
                            "Wapiti Scan",
                            "WFuzz JSON report",
                            "Whispers Scan",
                            "WhiteHat Sentinel",
                            "Whitesource Scan",
                            "Wpscan",
                            "Xanitizer Scan",
                            "Yarn Audit Scan",
                            "ZAP Scan"
                        ],
                        "type": "string"
                    },
                    "endpoint_to_add": {
                        "type": "integer",
                        "description": "The IP address, host name or full URL. It must be valid"
                    },
                    "file": {
                        "type": "string",
                        "format": "uri"
                    },
                    "product_type_name": {
                        "type": "string"
                    },
                    "product_name": {
                        "type": "string"
                    },
                    "engagement_name": {
                        "type": "string"
                    },
                    "engagement_end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "End Date for Engagement. Default is current time + 365 days. Required format year-month-day"
                    },
                    "source_code_management_uri": {
                        "type": "string",
                        "format": "uri",
                        "description": "Resource link to source code",
                        "maxLength": 600
                    },
                    "engagement": {
                        "type": "integer"
                    },
                    "test_title": {
                        "type": "string"
                    },
                    "auto_create_context": {
                        "type": "boolean"
                    },
                    "deduplication_on_engagement": {
                        "type": "boolean"
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Add tags that help describe this scan."
                    },
                    "close_old_findings": {
                        "type": "boolean",
                        "default": false,
                        "description": "Select if old findings no longer present in the report get closed as mitigated when importing. If service has been set, only the findings for this service will be closed."
                    },
                    "close_old_findings_product_scope": {
                        "type": "boolean",
                        "default": false,
                        "description": "Select if close_old_findings applies to all findings of the same type in the product. By default, it is false meaning that only old findings of the same type in the engagement are in scope."
                    },
                    "push_to_jira": {
                        "type": "boolean",
                        "default": false
                    },
                    "environment": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version that was scanned."
                    },
                    "build_id": {
                        "type": "string",
                        "description": "ID of the build that was scanned."
                    },
                    "branch_tag": {
                        "type": "string",
                        "description": "Branch or Tag that was scanned."
                    },
                    "commit_hash": {
                        "type": "string",
                        "description": "Commit that was scanned."
                    },
                    "api_scan_configuration": {
                        "type": "integer",
                        "nullable": true
                    },
                    "service": {
                        "type": "string",
                        "description": "A service is a self-contained piece of functionality within a Product. This is an optional field which is used in deduplication and closing of old findings when set. This affects the whole engagement/product depending on your deduplication scope."
                    },
                    "group_by": {
                        "enum": [
                            "component_name",
                            "component_name+component_version",
                            "file_path"
                        ],
                        "type": "string",
                        "description": "Choose an option to automatically group new findings by the chosen option."
                    },
                    "create_finding_groups_for_all_findings": {
                        "type": "boolean",
                        "default": true,
                        "description": "If set to false, finding groups will only be created when there is more than one grouped finding"
                    },
                    "test": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "test_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "engagement_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product_type_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "statistics": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ImportStatistics"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "engagement_id",
                    "product_id",
                    "product_type_id",
                    "scan_type",
                    "statistics",
                    "test",
                    "test_id"
                ]
            },
            "ImportScanRequest": {
                "type": "object",
                "properties": {
                    "scan_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Scan completion date will be used on all findings."
                    },
                    "minimum_severity": {
                        "enum": [
                            "Info",
                            "Low",
                            "Medium",
                            "High",
                            "Critical"
                        ],
                        "type": "string",
                        "default": "Info",
                        "description": "Minimum severity level to be imported"
                    },
                    "active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if these findings are currently active."
                    },
                    "verified": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if these findings have been verified."
                    },
                    "scan_type": {
                        "enum": [
                            "Acunetix Scan",
                            "Acunetix360 Scan",
                            "Anchore Engine Scan",
                            "Anchore Enterprise Policy Check",
                            "Anchore Grype",
                            "AnchoreCTL Policies Report",
                            "AnchoreCTL Vuln Report",
                            "AppSpider Scan",
                            "Aqua Scan",
                            "Arachni Scan",
                            "AuditJS Scan",
                            "AWS Prowler Scan",
                            "AWS Scout2 Scan",
                            "AWS Security Hub Scan",
                            "Azure Security Center Recommendations Scan",
                            "Bandit Scan",
                            "BlackDuck API",
                            "Blackduck Component Risk",
                            "Blackduck Hub Scan",
                            "Brakeman Scan",
                            "Bugcrowd API Import",
                            "BugCrowd Scan",
                            "Bundler-Audit Scan",
                            "Burp Enterprise Scan",
                            "Burp GraphQL API",
                            "Burp REST API",
                            "Burp Scan",
                            "CargoAudit Scan",
                            "Checkmarx OSA",
                            "Checkmarx Scan",
                            "Checkmarx Scan detailed",
                            "Checkov Scan",
                            "Clair Klar Scan",
                            "Clair Scan",
                            "Cloudsploit Scan",
                            "Cobalt.io API Import",
                            "Cobalt.io Scan",
                            "Contrast Scan",
                            "Coverity API",
                            "Crashtest Security JSON File",
                            "Crashtest Security XML File",
                            "CredScan Scan",
                            "CycloneDX Scan",
                            "DawnScanner Scan",
                            "Dependency Check Scan",
                            "Dependency Track Finding Packaging Format (FPF) Export",
                            "Detect-secrets Scan",
                            "docker-bench-security Scan",
                            "Dockle Scan",
                            "DrHeader JSON Importer",
                            "DSOP Scan",
                            "Edgescan Scan",
                            "ESLint Scan",
                            "Fortify Scan",
                            "Generic Findings Import",
                            "Ggshield Scan",
                            "Github Vulnerability Scan",
                            "GitLab API Fuzzing Report Scan",
                            "GitLab Container Scan",
                            "GitLab DAST Report",
                            "GitLab Dependency Scanning Report",
                            "GitLab SAST Report",
                            "GitLab Secret Detection Report",
                            "Gitleaks Scan",
                            "Gosec Scanner",
                            "HackerOne Cases",
                            "Hadolint Dockerfile check",
                            "Harbor Vulnerability Scan",
                            "Horusec Scan",
                            "HuskyCI Report",
                            "Hydra Scan",
                            "IBM AppScan DAST",
                            "Immuniweb Scan",
                            "IntSights Report",
                            "JFrog Xray API Summary Artifact Scan",
                            "JFrog Xray Scan",
                            "JFrog Xray Unified Scan",
                            "KICS Scan",
                            "Kiuwan Scan",
                            "kube-bench Scan",
                            "Meterian Scan",
                            "Microfocus Webinspect Scan",
                            "MobSF Scan",
                            "Mobsfscan Scan",
                            "Mozilla Observatory Scan",
                            "Nessus Scan",
                            "Nessus WAS Scan",
                            "Netsparker Scan",
                            "NeuVector (compliance)",
                            "NeuVector (REST)",
                            "Nexpose Scan",
                            "Nikto Scan",
                            "Nmap Scan",
                            "Node Security Platform Scan",
                            "NPM Audit Scan",
                            "Nuclei Scan",
                            "Openscap Vulnerability Scan",
                            "OpenVAS CSV",
                            "ORT evaluated model Importer",
                            "OssIndex Devaudit SCA Scan Importer",
                            "Outpost24 Scan",
                            "PHP Security Audit v2",
                            "PHP Symfony Security Check",
                            "pip-audit Scan",
                            "PMD Scan",
                            "PWN SAST",
                            "Qualys Infrastructure Scan (WebGUI XML)",
                            "Qualys Scan",
                            "Qualys Webapp Scan",
                            "Retire.js Scan",
                            "Risk Recon API Importer",
                            "Rubocop Scan",
                            "Rusty Hog Scan",
                            "SARIF",
                            "Scantist Scan",
                            "Scout Suite Scan",
                            "Semgrep JSON Report",
                            "SKF Scan",
                            "Snyk Scan",
                            "Solar Appscreener Scan",
                            "SonarQube API Import",
                            "SonarQube Scan",
                            "SonarQube Scan detailed",
                            "Sonatype Application Scan",
                            "SpotBugs Scan",
                            "SSL Labs Scan",
                            "Sslscan",
                            "Sslyze Scan",
                            "SSLyze Scan (JSON)",
                            "StackHawk HawkScan",
                            "Terrascan Scan",
                            "Testssl Scan",
                            "TFSec Scan",
                            "Trivy Scan",
                            "Trufflehog Scan",
                            "Trufflehog3 Scan",
                            "Trustwave Fusion API Scan",
                            "Trustwave Scan (CSV)",
                            "Twistlock Image Scan",
                            "VCG Scan",
                            "Veracode Scan",
                            "Veracode SourceClear Scan",
                            "Vulners",
                            "Wapiti Scan",
                            "WFuzz JSON report",
                            "Whispers Scan",
                            "WhiteHat Sentinel",
                            "Whitesource Scan",
                            "Wpscan",
                            "Xanitizer Scan",
                            "Yarn Audit Scan",
                            "ZAP Scan"
                        ],
                        "type": "string"
                    },
                    "endpoint_to_add": {
                        "type": "integer",
                        "description": "The IP address, host name or full URL. It must be valid"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary"
                    },
                    "product_type_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "product_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "engagement_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "engagement_end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "End Date for Engagement. Default is current time + 365 days. Required format year-month-day"
                    },
                    "source_code_management_uri": {
                        "type": "string",
                        "format": "uri",
                        "minLength": 1,
                        "description": "Resource link to source code",
                        "maxLength": 600
                    },
                    "engagement": {
                        "type": "integer"
                    },
                    "test_title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "auto_create_context": {
                        "type": "boolean"
                    },
                    "deduplication_on_engagement": {
                        "type": "boolean"
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Add tags that help describe this scan."
                    },
                    "close_old_findings": {
                        "type": "boolean",
                        "default": false,
                        "description": "Select if old findings no longer present in the report get closed as mitigated when importing. If service has been set, only the findings for this service will be closed."
                    },
                    "close_old_findings_product_scope": {
                        "type": "boolean",
                        "default": false,
                        "description": "Select if close_old_findings applies to all findings of the same type in the product. By default, it is false meaning that only old findings of the same type in the engagement are in scope."
                    },
                    "push_to_jira": {
                        "type": "boolean",
                        "default": false
                    },
                    "environment": {
                        "type": "string",
                        "minLength": 1
                    },
                    "version": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Version that was scanned."
                    },
                    "build_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "ID of the build that was scanned."
                    },
                    "branch_tag": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Branch or Tag that was scanned."
                    },
                    "commit_hash": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Commit that was scanned."
                    },
                    "api_scan_configuration": {
                        "type": "integer",
                        "nullable": true
                    },
                    "service": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A service is a self-contained piece of functionality within a Product. This is an optional field which is used in deduplication and closing of old findings when set. This affects the whole engagement/product depending on your deduplication scope."
                    },
                    "group_by": {
                        "enum": [
                            "component_name",
                            "component_name+component_version",
                            "file_path"
                        ],
                        "type": "string",
                        "description": "Choose an option to automatically group new findings by the chosen option."
                    },
                    "create_finding_groups_for_all_findings": {
                        "type": "boolean",
                        "default": true,
                        "description": "If set to false, finding groups will only be created when there is more than one grouped finding"
                    }
                },
                "required": [
                    "scan_type"
                ]
            },
            "ImportStatistics": {
                "type": "object",
                "properties": {
                    "before": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SeverityStatusStatistics"
                            }
                        ],
                        "description": "Finding statistics as stored in Defect Dojo before the import"
                    },
                    "delta": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DeltaStatistics"
                            }
                        ],
                        "description": "Finding statistics of modifications made by the reimport. Only available when TRACK_IMPORT_HISTORY hass not disabled."
                    },
                    "after": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SeverityStatusStatistics"
                            }
                        ],
                        "description": "Finding statistics as stored in Defect Dojo after the import"
                    }
                },
                "required": [
                    "after"
                ]
            },
            "ImportStatisticsRequest": {
                "type": "object",
                "properties": {
                    "before": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SeverityStatusStatisticsRequest"
                            }
                        ],
                        "description": "Finding statistics as stored in Defect Dojo before the import"
                    },
                    "delta": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DeltaStatisticsRequest"
                            }
                        ],
                        "description": "Finding statistics of modifications made by the reimport. Only available when TRACK_IMPORT_HISTORY hass not disabled."
                    },
                    "after": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SeverityStatusStatisticsRequest"
                            }
                        ],
                        "description": "Finding statistics as stored in Defect Dojo after the import"
                    }
                },
                "required": [
                    "after"
                ]
            },
            "JIRAInstance": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "configuration_name": {
                        "type": "string",
                        "description": "Enter a name to give to this configuration",
                        "maxLength": 2000
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "title": "JIRA URL",
                        "description": "For more information how to configure Jira, read the DefectDojo documentation.",
                        "maxLength": 2000
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 2000
                    },
                    "default_issue_type": {
                        "enum": [
                            "Task",
                            "Story",
                            "Epic",
                            "Spike",
                            "Bug",
                            "Security"
                        ],
                        "type": "string",
                        "description": "You can define extra issue types in settings.py"
                    },
                    "issue_template_dir": {
                        "type": "string",
                        "nullable": true,
                        "description": "Choose the folder containing the Django templates used to render the JIRA issue description. These are stored in dojo/templates/issue-trackers. Leave empty to use the default jira_full templates.",
                        "maxLength": 255
                    },
                    "epic_name_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "To obtain the 'Epic name id' visit https://<YOUR JIRA URL>/rest/api/2/field and search for Epic Name. Copy the number out of cf[number] and paste it here."
                    },
                    "open_status_key": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Reopen Transition ID",
                        "description": "Transition ID to Re-Open JIRA issues, visit https://<YOUR JIRA URL>/rest/api/latest/issue/<ANY VALID ISSUE KEY>/transitions?expand=transitions.fields to find the ID for your JIRA instance"
                    },
                    "close_status_key": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Close Transition ID",
                        "description": "Transition ID to Close JIRA issues, visit https://<YOUR JIRA URL>/rest/api/latest/issue/<ANY VALID ISSUE KEY>/transitions?expand=transitions.fields to find the ID for your JIRA instance"
                    },
                    "info_mapping_severity": {
                        "type": "string",
                        "description": "Maps to the 'Priority' field in Jira. For example: Info",
                        "maxLength": 200
                    },
                    "low_mapping_severity": {
                        "type": "string",
                        "description": "Maps to the 'Priority' field in Jira. For example: Low",
                        "maxLength": 200
                    },
                    "medium_mapping_severity": {
                        "type": "string",
                        "description": "Maps to the 'Priority' field in Jira. For example: Medium",
                        "maxLength": 200
                    },
                    "high_mapping_severity": {
                        "type": "string",
                        "description": "Maps to the 'Priority' field in Jira. For example: High",
                        "maxLength": 200
                    },
                    "critical_mapping_severity": {
                        "type": "string",
                        "description": "Maps to the 'Priority' field in Jira. For example: Critical",
                        "maxLength": 200
                    },
                    "finding_text": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional text that will be added to the finding in Jira. For example including how the finding was created or who to contact for more information."
                    },
                    "accepted_mapping_resolution": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA resolution names (comma-separated values) that maps to an Accepted Finding",
                        "maxLength": 300
                    },
                    "false_positive_mapping_resolution": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA resolution names (comma-separated values) that maps to a False Positive Finding",
                        "maxLength": 300
                    },
                    "global_jira_sla_notification": {
                        "type": "boolean",
                        "title": "Globally send SLA notifications as comment?",
                        "description": "This setting can be overidden at the Product level"
                    }
                },
                "required": [
                    "close_status_key",
                    "critical_mapping_severity",
                    "epic_name_id",
                    "high_mapping_severity",
                    "id",
                    "info_mapping_severity",
                    "low_mapping_severity",
                    "medium_mapping_severity",
                    "open_status_key",
                    "url",
                    "username"
                ]
            },
            "JIRAInstanceRequest": {
                "type": "object",
                "properties": {
                    "configuration_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Enter a name to give to this configuration",
                        "maxLength": 2000
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "minLength": 1,
                        "title": "JIRA URL",
                        "description": "For more information how to configure Jira, read the DefectDojo documentation.",
                        "maxLength": 2000
                    },
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2000
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "maxLength": 2000
                    },
                    "default_issue_type": {
                        "enum": [
                            "Task",
                            "Story",
                            "Epic",
                            "Spike",
                            "Bug",
                            "Security"
                        ],
                        "type": "string",
                        "description": "You can define extra issue types in settings.py"
                    },
                    "issue_template_dir": {
                        "type": "string",
                        "nullable": true,
                        "description": "Choose the folder containing the Django templates used to render the JIRA issue description. These are stored in dojo/templates/issue-trackers. Leave empty to use the default jira_full templates.",
                        "maxLength": 255
                    },
                    "epic_name_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "To obtain the 'Epic name id' visit https://<YOUR JIRA URL>/rest/api/2/field and search for Epic Name. Copy the number out of cf[number] and paste it here."
                    },
                    "open_status_key": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Reopen Transition ID",
                        "description": "Transition ID to Re-Open JIRA issues, visit https://<YOUR JIRA URL>/rest/api/latest/issue/<ANY VALID ISSUE KEY>/transitions?expand=transitions.fields to find the ID for your JIRA instance"
                    },
                    "close_status_key": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Close Transition ID",
                        "description": "Transition ID to Close JIRA issues, visit https://<YOUR JIRA URL>/rest/api/latest/issue/<ANY VALID ISSUE KEY>/transitions?expand=transitions.fields to find the ID for your JIRA instance"
                    },
                    "info_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: Info",
                        "maxLength": 200
                    },
                    "low_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: Low",
                        "maxLength": 200
                    },
                    "medium_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: Medium",
                        "maxLength": 200
                    },
                    "high_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: High",
                        "maxLength": 200
                    },
                    "critical_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: Critical",
                        "maxLength": 200
                    },
                    "finding_text": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional text that will be added to the finding in Jira. For example including how the finding was created or who to contact for more information."
                    },
                    "accepted_mapping_resolution": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA resolution names (comma-separated values) that maps to an Accepted Finding",
                        "maxLength": 300
                    },
                    "false_positive_mapping_resolution": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA resolution names (comma-separated values) that maps to a False Positive Finding",
                        "maxLength": 300
                    },
                    "global_jira_sla_notification": {
                        "type": "boolean",
                        "title": "Globally send SLA notifications as comment?",
                        "description": "This setting can be overidden at the Product level"
                    }
                },
                "required": [
                    "close_status_key",
                    "critical_mapping_severity",
                    "epic_name_id",
                    "high_mapping_severity",
                    "info_mapping_severity",
                    "low_mapping_severity",
                    "medium_mapping_severity",
                    "open_status_key",
                    "password",
                    "url",
                    "username"
                ]
            },
            "JIRAIssue": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "jira_id": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "jira_key": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "jira_creation": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date a Jira issue was created from this finding."
                    },
                    "jira_change": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Jira last update",
                        "description": "The date the linked Jira issue was last modified."
                    },
                    "jira_project": {
                        "type": "integer",
                        "nullable": true
                    },
                    "finding": {
                        "type": "integer",
                        "nullable": true
                    },
                    "engagement": {
                        "type": "integer",
                        "nullable": true
                    },
                    "finding_group": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "jira_id",
                    "jira_key",
                    "url"
                ]
            },
            "JIRAIssueRequest": {
                "type": "object",
                "properties": {
                    "jira_id": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "jira_key": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "jira_creation": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date a Jira issue was created from this finding."
                    },
                    "jira_change": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Jira last update",
                        "description": "The date the linked Jira issue was last modified."
                    },
                    "jira_project": {
                        "type": "integer",
                        "nullable": true
                    },
                    "finding": {
                        "type": "integer",
                        "nullable": true
                    },
                    "engagement": {
                        "type": "integer",
                        "nullable": true
                    },
                    "finding_group": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "jira_id",
                    "jira_key"
                ]
            },
            "JIRAProject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "project_key": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "issue_template_dir": {
                        "type": "string",
                        "nullable": true,
                        "description": "Choose the folder containing the Django templates used to render the JIRA issue description. These are stored in dojo/templates/issue-trackers. Leave empty to use the default jira_full templates.",
                        "maxLength": 255
                    },
                    "component": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "custom_fields": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "description": "JIRA custom field JSON mapping of Id to value, e.g. {\"customfield_10122\": [{\"name\": \"8.0.1\"}]}"
                    },
                    "default_assignee": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA default assignee (name). If left blank then it defaults to whatever is configured in JIRA.",
                        "maxLength": 200
                    },
                    "jira_labels": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA issue labels space seperated",
                        "maxLength": 200
                    },
                    "add_vulnerability_id_to_jira_label": {
                        "type": "boolean",
                        "title": "Add vulnerability Id as a JIRA label"
                    },
                    "push_all_issues": {
                        "type": "boolean",
                        "description": "Automatically maintain parity with JIRA. Always create and update JIRA tickets for findings in this Product."
                    },
                    "enable_engagement_epic_mapping": {
                        "type": "boolean"
                    },
                    "push_notes": {
                        "type": "boolean"
                    },
                    "product_jira_sla_notification": {
                        "type": "boolean",
                        "title": "Send SLA notifications as comment?"
                    },
                    "risk_acceptance_expiration_notification": {
                        "type": "boolean",
                        "title": "Send Risk Acceptance expiration notifications as comment?"
                    },
                    "jira_instance": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "engagement": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "id"
                ]
            },
            "JIRAProjectRequest": {
                "type": "object",
                "properties": {
                    "project_key": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "issue_template_dir": {
                        "type": "string",
                        "nullable": true,
                        "description": "Choose the folder containing the Django templates used to render the JIRA issue description. These are stored in dojo/templates/issue-trackers. Leave empty to use the default jira_full templates.",
                        "maxLength": 255
                    },
                    "component": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "custom_fields": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "description": "JIRA custom field JSON mapping of Id to value, e.g. {\"customfield_10122\": [{\"name\": \"8.0.1\"}]}"
                    },
                    "default_assignee": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA default assignee (name). If left blank then it defaults to whatever is configured in JIRA.",
                        "maxLength": 200
                    },
                    "jira_labels": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA issue labels space seperated",
                        "maxLength": 200
                    },
                    "add_vulnerability_id_to_jira_label": {
                        "type": "boolean",
                        "title": "Add vulnerability Id as a JIRA label"
                    },
                    "push_all_issues": {
                        "type": "boolean",
                        "description": "Automatically maintain parity with JIRA. Always create and update JIRA tickets for findings in this Product."
                    },
                    "enable_engagement_epic_mapping": {
                        "type": "boolean"
                    },
                    "push_notes": {
                        "type": "boolean"
                    },
                    "product_jira_sla_notification": {
                        "type": "boolean",
                        "title": "Send SLA notifications as comment?"
                    },
                    "risk_acceptance_expiration_notification": {
                        "type": "boolean",
                        "title": "Send Risk Acceptance expiration notifications as comment?"
                    },
                    "jira_instance": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "engagement": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "Language": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "files": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of files"
                    },
                    "blank": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of blank lines"
                    },
                    "comment": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of comment lines"
                    },
                    "code": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of code lines"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "language": {
                        "type": "integer"
                    },
                    "product": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "language": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/LanguageType"
                                }
                            },
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "created",
                    "id",
                    "language",
                    "product"
                ]
            },
            "LanguageRequest": {
                "type": "object",
                "properties": {
                    "files": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of files"
                    },
                    "blank": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of blank lines"
                    },
                    "comment": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of comment lines"
                    },
                    "code": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of code lines"
                    },
                    "language": {
                        "type": "integer"
                    },
                    "product": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "language",
                    "product"
                ]
            },
            "LanguageType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "language": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "color": {
                        "type": "string",
                        "nullable": true,
                        "title": "HTML color",
                        "maxLength": 7
                    }
                },
                "required": [
                    "id",
                    "language"
                ]
            },
            "LanguageTypeRequest": {
                "type": "object",
                "properties": {
                    "language": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "color": {
                        "type": "string",
                        "nullable": true,
                        "title": "HTML color",
                        "maxLength": 7
                    }
                },
                "required": [
                    "language"
                ]
            },
            "Meta": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "endpoint": {
                        "type": "integer",
                        "nullable": true
                    },
                    "finding": {
                        "type": "integer",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "endpoint": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            },
                            "finding": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Finding"
                                }
                            },
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "value"
                ]
            },
            "MetaRequest": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "endpoint": {
                        "type": "integer",
                        "nullable": true
                    },
                    "finding": {
                        "type": "integer",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 300
                    }
                },
                "required": [
                    "name",
                    "value"
                ]
            },
            "NetworkLocations": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "description": "Location of network testing: Examples: VPN, Internet or Internal.",
                        "maxLength": 500
                    }
                },
                "required": [
                    "id",
                    "location"
                ]
            },
            "NetworkLocationsRequest": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Location of network testing: Examples: VPN, Internet or Internal.",
                        "maxLength": 500
                    }
                },
                "required": [
                    "location"
                ]
            },
            "Note": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserStub"
                            }
                        ],
                        "readOnly": true
                    },
                    "editor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserStub"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NoteHistory"
                        },
                        "readOnly": true
                    },
                    "entry": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "edited": {
                        "type": "boolean"
                    },
                    "edit_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "note_type": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "author",
                    "date",
                    "edit_time",
                    "editor",
                    "entry",
                    "history",
                    "id"
                ]
            },
            "NoteHistory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "current_editor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserStub"
                            }
                        ],
                        "readOnly": true
                    },
                    "data": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "note_type": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "current_editor",
                    "data",
                    "id",
                    "time"
                ]
            },
            "NoteHistoryRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "minLength": 1
                    },
                    "note_type": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "data"
                ]
            },
            "NoteRequest": {
                "type": "object",
                "properties": {
                    "entry": {
                        "type": "string",
                        "minLength": 1
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "edited": {
                        "type": "boolean"
                    },
                    "note_type": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "entry"
                ]
            },
            "NoteType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "is_single": {
                        "type": "boolean"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "is_mandatory": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "description",
                    "id",
                    "name"
                ]
            },
            "NoteTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "is_single": {
                        "type": "boolean"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "is_mandatory": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "description",
                    "name"
                ]
            },
            "Notifications": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product_type_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "product_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "engagement_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "test_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "scan_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "jira_update": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "upcoming_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "stale_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "auto_close_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "close_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "user_mentioned": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "code_review": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "review_requested": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "other": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "sla_breach": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "risk_acceptance_expiration": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "template": {
                        "type": "boolean",
                        "default": false
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "id"
                ]
            },
            "NotificationsRequest": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product_type_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "product_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "engagement_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "test_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "scan_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "jira_update": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "upcoming_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "stale_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "auto_close_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "close_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "user_mentioned": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "code_review": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "review_requested": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "other": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "sla_breach": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "risk_acceptance_expiration": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "template": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "PaginatedAppAnalysisList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppAnalysis"
                        }
                    }
                }
            },
            "PaginatedConfigurationPermissionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigurationPermission"
                        }
                    }
                }
            },
            "PaginatedDeletePreviewList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeletePreview"
                        }
                    }
                }
            },
            "PaginatedDevelopmentEnvironmentList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DevelopmentEnvironment"
                        }
                    }
                }
            },
            "PaginatedDojoGroupList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DojoGroup"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "product_groups": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "product_type_groups": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            },
                            "users": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedDojoGroupMemberList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DojoGroupMember"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "group": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedEndpointList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Endpoint"
                        }
                    }
                }
            },
            "PaginatedEndpointStatusList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EndpointStatus"
                        }
                    }
                }
            },
            "PaginatedEngagementList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Engagement"
                        }
                    }
                }
            },
            "PaginatedEngagementPresetsList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EngagementPresets"
                        }
                    }
                }
            },
            "PaginatedFindingList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Finding"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "defect_review_requested_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "duplicate_finding": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Finding"
                                }
                            },
                            "endpoint_set": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            },
                            "endpoints": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            },
                            "files": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/File"
                                }
                            },
                            "finding_group_set": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/FindingGroup"
                                }
                            },
                            "found_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TestType"
                                }
                            },
                            "last_reviewed_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "mitigated_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "notes": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Note"
                                }
                            },
                            "reporter": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "review_requested_by": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "reviewers": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "risk_acceptance_set": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/RiskAcceptance"
                                }
                            },
                            "sonarqube_issue": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/SonarqubeIssue"
                                }
                            },
                            "test": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Test"
                                }
                            },
                            "test_import_set": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/TestImport"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedFindingTemplateList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FindingTemplate"
                        }
                    }
                }
            },
            "PaginatedGlobalRoleList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GlobalRole"
                        }
                    }
                }
            },
            "PaginatedJIRAInstanceList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JIRAInstance"
                        }
                    }
                }
            },
            "PaginatedJIRAIssueList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JIRAIssue"
                        }
                    }
                }
            },
            "PaginatedJIRAProjectList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JIRAProject"
                        }
                    }
                }
            },
            "PaginatedLanguageList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Language"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "language": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/LanguageType"
                                }
                            },
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedLanguageTypeList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LanguageType"
                        }
                    }
                }
            },
            "PaginatedMetaList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Meta"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "endpoint": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Endpoint"
                                }
                            },
                            "finding": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Finding"
                                }
                            },
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedNetworkLocationsList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkLocations"
                        }
                    }
                }
            },
            "PaginatedNoteList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Note"
                        }
                    }
                }
            },
            "PaginatedNoteTypeList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NoteType"
                        }
                    }
                }
            },
            "PaginatedNotificationsList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Notifications"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedProductAPIScanConfigurationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductAPIScanConfiguration"
                        }
                    }
                }
            },
            "PaginatedProductGroupList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductGroup"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "group": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedProductList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "authorization_groups": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "members": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "prod_type": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            },
                            "product_manager": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "regulations": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Regulation"
                                }
                            },
                            "sla_configuration": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/SLAConfiguration"
                                }
                            },
                            "team_manager": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "technical_contact": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedProductMemberList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductMember"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedProductTypeGroupList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductTypeGroup"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "group": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "product_type": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedProductTypeList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductType"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "authorization_groups": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "members": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedProductTypeMemberList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductTypeMember"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "product_type": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedRegulationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Regulation"
                        }
                    }
                }
            },
            "PaginatedRiskAcceptanceList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RiskAcceptance"
                        }
                    }
                }
            },
            "PaginatedRoleList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    }
                }
            },
            "PaginatedSLAConfigurationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SLAConfiguration"
                        }
                    }
                }
            },
            "PaginatedSonarqubeIssueList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SonarqubeIssue"
                        }
                    }
                }
            },
            "PaginatedSonarqubeIssueTransitionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SonarqubeIssueTransition"
                        }
                    }
                }
            },
            "PaginatedStubFindingList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StubFinding"
                        }
                    }
                }
            },
            "PaginatedSystemSettingsList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SystemSettings"
                        }
                    }
                }
            },
            "PaginatedTestImportList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TestImport"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "findings_affected": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Finding"
                                }
                            },
                            "test": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Test"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedTestList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Test"
                        }
                    }
                }
            },
            "PaginatedTestTypeList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TestType"
                        }
                    }
                }
            },
            "PaginatedToolConfigurationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ToolConfiguration"
                        }
                    }
                }
            },
            "PaginatedToolProductSettingsList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ToolProductSettings"
                        }
                    }
                }
            },
            "PaginatedToolTypeList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ToolType"
                        }
                    }
                }
            },
            "PaginatedUserContactInfoList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserContactInfo"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                }
            },
            "PaginatedUserList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                }
            },
            "PatchedAppAnalysisRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "confidence": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Confidence level"
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "title": "Version Number",
                        "maxLength": 200
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "website": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 400
                    },
                    "website_found": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 400
                    },
                    "product": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    }
                }
            },
            "PatchedDevelopmentEnvironmentRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    }
                }
            },
            "PatchedDojoGroupMemberRequest": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer",
                        "title": "Group role",
                        "description": "This role determines the permissions of the user to manage the group."
                    }
                }
            },
            "PatchedDojoGroupRequest": {
                "type": "object",
                "properties": {
                    "configuration_permissions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 4000
                    },
                    "social_provider": {
                        "enum": [
                            "AzureAD",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true,
                        "title": "Social Authentication Provider",
                        "description": "Group imported from a social provider."
                    }
                }
            },
            "PatchedEndpointRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "protocol": {
                        "type": "string",
                        "nullable": true,
                        "description": "The communication protocol/scheme such as 'http', 'ftp', 'dns', etc.",
                        "maxLength": 20
                    },
                    "userinfo": {
                        "type": "string",
                        "nullable": true,
                        "description": "User info as 'alice', 'bob', etc.",
                        "maxLength": 500
                    },
                    "host": {
                        "type": "string",
                        "nullable": true,
                        "description": "The host name or IP address. It must not include the port number. For example '127.0.0.1', 'localhost', 'yourdomain.com'.",
                        "maxLength": 500
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The network port associated with the endpoint."
                    },
                    "path": {
                        "type": "string",
                        "nullable": true,
                        "description": "The location of the resource, it must not start with a '/'. For example endpoint/420/edit",
                        "maxLength": 500
                    },
                    "query": {
                        "type": "string",
                        "nullable": true,
                        "description": "The query string, the question mark should be omitted.For example 'group=4&team=8'",
                        "maxLength": 1000
                    },
                    "fragment": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fragment identifier which follows the hash mark. The hash mark should be omitted. For example 'section-13', 'paragraph-2'.",
                        "maxLength": 500
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedEndpointStatusRequest": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "mitigated": {
                        "type": "boolean"
                    },
                    "false_positive": {
                        "type": "boolean"
                    },
                    "out_of_scope": {
                        "type": "boolean"
                    },
                    "risk_accepted": {
                        "type": "boolean"
                    },
                    "mitigated_by": {
                        "type": "integer",
                        "nullable": true
                    },
                    "endpoint": {
                        "type": "integer"
                    },
                    "finding": {
                        "type": "integer"
                    }
                }
            },
            "PatchedEngagementPresetsRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Brief description of preset.",
                        "maxLength": 500
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true,
                        "description": "Description of what needs to be tested or setting up environment for testing",
                        "maxLength": 2000
                    },
                    "scope": {
                        "type": "string",
                        "description": "Scope of Engagement testing, IP's/Resources/URL's)",
                        "maxLength": 800
                    },
                    "product": {
                        "type": "integer"
                    },
                    "test_type": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "network_locations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "PatchedEngagementRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 300
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Version of the product the engagement tested.",
                        "maxLength": 100
                    },
                    "first_contacted": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "target_start": {
                        "type": "string",
                        "format": "date"
                    },
                    "target_end": {
                        "type": "string",
                        "format": "date"
                    },
                    "reason": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "tracker": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Link to epic or ticket system with changes to version.",
                        "maxLength": 200
                    },
                    "test_strategy": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "threat_model": {
                        "type": "boolean"
                    },
                    "api_test": {
                        "type": "boolean"
                    },
                    "pen_test": {
                        "type": "boolean"
                    },
                    "check_list": {
                        "type": "boolean"
                    },
                    "status": {
                        "enum": [
                            "Not Started",
                            "Blocked",
                            "Cancelled",
                            "Completed",
                            "In Progress",
                            "On Hold",
                            "Waiting for Resource",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "engagement_type": {
                        "enum": [
                            "Interactive",
                            "CI/CD",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID of the product the engagement tested.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash from repo",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch of the product the engagement tested.",
                        "maxLength": 150
                    },
                    "source_code_management_uri": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Repo",
                        "description": "Resource link to source code",
                        "maxLength": 600
                    },
                    "deduplication_on_engagement": {
                        "type": "boolean",
                        "title": "Deduplication within this engagement only",
                        "description": "If enabled deduplication will only mark a finding in this engagement as duplicate of another finding if both findings are in this engagement. If disabled, deduplication is on the product level."
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "requester": {
                        "type": "integer",
                        "nullable": true
                    },
                    "preset": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Settings and notes for performing this engagement."
                    },
                    "report_type": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product": {
                        "type": "integer"
                    },
                    "build_server": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Build server responsible for CI/CD test"
                    },
                    "source_code_management_server": {
                        "type": "integer",
                        "nullable": true,
                        "title": "SCM Server",
                        "description": "Source code server for CI/CD test"
                    },
                    "orchestration_engine": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Orchestration service responsible for CI/CD test"
                    }
                }
            },
            "PatchedFindingNoteRequest": {
                "type": "object",
                "properties": {
                    "note_id": {
                        "type": "integer"
                    }
                }
            },
            "PatchedFindingRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "push_to_jira": {
                        "type": "boolean",
                        "default": false
                    },
                    "vulnerability_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityIdRequest"
                        }
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A short description of the flaw.",
                        "maxLength": 511
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date the flaw was discovered."
                    },
                    "sla_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "(readonly)The date used as start date for SLA calculation. Set by expiring risk acceptances. Empty by default, causing a fallback to 'date'."
                    },
                    "cwe": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The CWE number associated with this flaw."
                    },
                    "cvssv3": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "title": "CVSS v3",
                        "description": "Common Vulnerability Scoring System version 3 (CVSSv3) score associated with this flaw.",
                        "pattern": "^AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]",
                        "maxLength": 117
                    },
                    "cvssv3_score": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Numerical CVSSv3 score for the vulnerability. If the vector is given, the score is updated while saving the finding"
                    },
                    "severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The severity level of this flaw (Critical, High, Medium, Low, Informational).",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Longer more descriptive information about the flaw."
                    },
                    "mitigation": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing how to best fix the flaw."
                    },
                    "impact": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the impact this flaw has on systems, products, enterprise, etc."
                    },
                    "steps_to_reproduce": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing the steps that must be followed in order to reproduce the flaw / bug."
                    },
                    "severity_justification": {
                        "type": "string",
                        "nullable": true,
                        "description": "Text describing why a certain severity was associated with this flaw."
                    },
                    "references": {
                        "type": "string",
                        "nullable": true,
                        "description": "The external documentation available for this flaw."
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is active or not."
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been manually verified by the tester."
                    },
                    "false_p": {
                        "type": "boolean",
                        "title": "False Positive",
                        "description": "Denotes if this flaw has been deemed a false positive by the tester."
                    },
                    "duplicate": {
                        "type": "boolean",
                        "description": "Denotes if this flaw is a duplicate of other flaws reported."
                    },
                    "out_of_scope": {
                        "type": "boolean",
                        "description": "Denotes if this flaw falls outside the scope of the test and/or engagement."
                    },
                    "risk_accepted": {
                        "type": "boolean",
                        "description": "Denotes if this finding has been marked as an accepted risk."
                    },
                    "under_review": {
                        "type": "boolean",
                        "description": "Denotes is this flaw is currently being reviewed."
                    },
                    "under_defect_review": {
                        "type": "boolean",
                        "description": "Denotes if this finding is under defect review."
                    },
                    "is_mitigated": {
                        "type": "boolean",
                        "description": "Denotes if this flaw has been fixed."
                    },
                    "numerical_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The numerical representation of the severity (S0, S1, S2, S3, S4).",
                        "maxLength": 4
                    },
                    "line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Identified file(s) containing the flaw.",
                        "maxLength": 4000
                    },
                    "component_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the affected component (library name, part of a system, ...).",
                        "maxLength": 200
                    },
                    "component_version": {
                        "type": "string",
                        "nullable": true,
                        "description": "Version of the affected component.",
                        "maxLength": 100
                    },
                    "static_finding": {
                        "type": "boolean",
                        "title": "Static finding (SAST)",
                        "description": "Flaw has been detected from a Static Application Security Testing tool (SAST)."
                    },
                    "dynamic_finding": {
                        "type": "boolean",
                        "title": "Dynamic finding (DAST)",
                        "description": "Flaw has been detected from a Dynamic Application Security Testing tool (DAST)."
                    },
                    "unique_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "description": "Vulnerability technical id from the source tool. Allows to track unique vulnerabilities.",
                        "maxLength": 500
                    },
                    "vuln_id_from_tool": {
                        "type": "string",
                        "nullable": true,
                        "title": "Vulnerability ID from tool",
                        "description": "Non-unique technical id from the source tool associated with the vulnerability type.",
                        "maxLength": 500
                    },
                    "sast_source_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_sink_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "Sink object (variable, function...) of the attack vector.",
                        "maxLength": 500
                    },
                    "sast_source_line": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "SAST Source Line number",
                        "description": "Source line number of the attack vector."
                    },
                    "sast_source_file_path": {
                        "type": "string",
                        "nullable": true,
                        "description": "Source file path of the attack vector.",
                        "maxLength": 4000
                    },
                    "nb_occurences": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of occurences",
                        "description": "Number of occurences in the source tool when several vulnerabilites were found and aggregated by the scanner."
                    },
                    "publish_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "Date when this vulnerability was made publicly available."
                    },
                    "service": {
                        "type": "string",
                        "nullable": true,
                        "description": "A service is a self-contained piece of functionality within a Product. This is an optional field which is used in deduplication of findings when set.",
                        "maxLength": 200
                    },
                    "planned_remediation_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "description": "The date the flaw is expected to be remediated."
                    },
                    "review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a review for this finding."
                    },
                    "defect_review_requested_by": {
                        "type": "integer",
                        "nullable": true,
                        "description": "Documents who requested a defect review for this flaw."
                    },
                    "sonarqube_issue": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The SonarQube issue associated with this finding."
                    },
                    "reviewers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Documents who reviewed the flaw."
                    }
                }
            },
            "PatchedFindingTemplateRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "vulnerability_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VulnerabilityIdTemplateRequest"
                        }
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1000
                    },
                    "cwe": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "cvssv3": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "pattern": "^AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]",
                        "maxLength": 117
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "mitigation": {
                        "type": "string",
                        "nullable": true
                    },
                    "impact": {
                        "type": "string",
                        "nullable": true
                    },
                    "references": {
                        "type": "string",
                        "nullable": true
                    },
                    "template_match": {
                        "type": "boolean",
                        "title": "Template Match Enabled",
                        "description": "Enables this template for matching remediation advice. Match will be applied to all active, verified findings by CWE."
                    },
                    "template_match_title": {
                        "type": "boolean",
                        "title": "Match Template by Title and CWE",
                        "description": "Matches by title text (contains search) and CWE."
                    }
                }
            },
            "PatchedGlobalRoleRequest": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "group": {
                        "type": "integer",
                        "nullable": true
                    },
                    "role": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Global role",
                        "description": "The global role will be applied to all product types and products."
                    }
                }
            },
            "PatchedJIRAInstanceRequest": {
                "type": "object",
                "properties": {
                    "configuration_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Enter a name to give to this configuration",
                        "maxLength": 2000
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "minLength": 1,
                        "title": "JIRA URL",
                        "description": "For more information how to configure Jira, read the DefectDojo documentation.",
                        "maxLength": 2000
                    },
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2000
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "maxLength": 2000
                    },
                    "default_issue_type": {
                        "enum": [
                            "Task",
                            "Story",
                            "Epic",
                            "Spike",
                            "Bug",
                            "Security"
                        ],
                        "type": "string",
                        "description": "You can define extra issue types in settings.py"
                    },
                    "issue_template_dir": {
                        "type": "string",
                        "nullable": true,
                        "description": "Choose the folder containing the Django templates used to render the JIRA issue description. These are stored in dojo/templates/issue-trackers. Leave empty to use the default jira_full templates.",
                        "maxLength": 255
                    },
                    "epic_name_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "To obtain the 'Epic name id' visit https://<YOUR JIRA URL>/rest/api/2/field and search for Epic Name. Copy the number out of cf[number] and paste it here."
                    },
                    "open_status_key": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Reopen Transition ID",
                        "description": "Transition ID to Re-Open JIRA issues, visit https://<YOUR JIRA URL>/rest/api/latest/issue/<ANY VALID ISSUE KEY>/transitions?expand=transitions.fields to find the ID for your JIRA instance"
                    },
                    "close_status_key": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Close Transition ID",
                        "description": "Transition ID to Close JIRA issues, visit https://<YOUR JIRA URL>/rest/api/latest/issue/<ANY VALID ISSUE KEY>/transitions?expand=transitions.fields to find the ID for your JIRA instance"
                    },
                    "info_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: Info",
                        "maxLength": 200
                    },
                    "low_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: Low",
                        "maxLength": 200
                    },
                    "medium_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: Medium",
                        "maxLength": 200
                    },
                    "high_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: High",
                        "maxLength": 200
                    },
                    "critical_mapping_severity": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Maps to the 'Priority' field in Jira. For example: Critical",
                        "maxLength": 200
                    },
                    "finding_text": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional text that will be added to the finding in Jira. For example including how the finding was created or who to contact for more information."
                    },
                    "accepted_mapping_resolution": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA resolution names (comma-separated values) that maps to an Accepted Finding",
                        "maxLength": 300
                    },
                    "false_positive_mapping_resolution": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA resolution names (comma-separated values) that maps to a False Positive Finding",
                        "maxLength": 300
                    },
                    "global_jira_sla_notification": {
                        "type": "boolean",
                        "title": "Globally send SLA notifications as comment?",
                        "description": "This setting can be overidden at the Product level"
                    }
                }
            },
            "PatchedJIRAIssueRequest": {
                "type": "object",
                "properties": {
                    "jira_id": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "jira_key": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "jira_creation": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date a Jira issue was created from this finding."
                    },
                    "jira_change": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Jira last update",
                        "description": "The date the linked Jira issue was last modified."
                    },
                    "jira_project": {
                        "type": "integer",
                        "nullable": true
                    },
                    "finding": {
                        "type": "integer",
                        "nullable": true
                    },
                    "engagement": {
                        "type": "integer",
                        "nullable": true
                    },
                    "finding_group": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedJIRAProjectRequest": {
                "type": "object",
                "properties": {
                    "project_key": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "issue_template_dir": {
                        "type": "string",
                        "nullable": true,
                        "description": "Choose the folder containing the Django templates used to render the JIRA issue description. These are stored in dojo/templates/issue-trackers. Leave empty to use the default jira_full templates.",
                        "maxLength": 255
                    },
                    "component": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "custom_fields": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "description": "JIRA custom field JSON mapping of Id to value, e.g. {\"customfield_10122\": [{\"name\": \"8.0.1\"}]}"
                    },
                    "default_assignee": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA default assignee (name). If left blank then it defaults to whatever is configured in JIRA.",
                        "maxLength": 200
                    },
                    "jira_labels": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA issue labels space seperated",
                        "maxLength": 200
                    },
                    "add_vulnerability_id_to_jira_label": {
                        "type": "boolean",
                        "title": "Add vulnerability Id as a JIRA label"
                    },
                    "push_all_issues": {
                        "type": "boolean",
                        "description": "Automatically maintain parity with JIRA. Always create and update JIRA tickets for findings in this Product."
                    },
                    "enable_engagement_epic_mapping": {
                        "type": "boolean"
                    },
                    "push_notes": {
                        "type": "boolean"
                    },
                    "product_jira_sla_notification": {
                        "type": "boolean",
                        "title": "Send SLA notifications as comment?"
                    },
                    "risk_acceptance_expiration_notification": {
                        "type": "boolean",
                        "title": "Send Risk Acceptance expiration notifications as comment?"
                    },
                    "jira_instance": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "engagement": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedLanguageRequest": {
                "type": "object",
                "properties": {
                    "files": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of files"
                    },
                    "blank": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of blank lines"
                    },
                    "comment": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of comment lines"
                    },
                    "code": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Number of code lines"
                    },
                    "language": {
                        "type": "integer"
                    },
                    "product": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedLanguageTypeRequest": {
                "type": "object",
                "properties": {
                    "language": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "color": {
                        "type": "string",
                        "nullable": true,
                        "title": "HTML color",
                        "maxLength": 7
                    }
                }
            },
            "PatchedMetaRequest": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "endpoint": {
                        "type": "integer",
                        "nullable": true
                    },
                    "finding": {
                        "type": "integer",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 300
                    }
                }
            },
            "PatchedNetworkLocationsRequest": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Location of network testing: Examples: VPN, Internet or Internal.",
                        "maxLength": 500
                    }
                }
            },
            "PatchedNoteRequest": {
                "type": "object",
                "properties": {
                    "entry": {
                        "type": "string",
                        "minLength": 1
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "edited": {
                        "type": "boolean"
                    },
                    "note_type": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedNoteTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "is_single": {
                        "type": "boolean"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "is_mandatory": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedNotificationsRequest": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "integer",
                        "nullable": true
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product_type_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "product_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "engagement_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "test_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "scan_added": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "jira_update": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "upcoming_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "stale_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "auto_close_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "close_engagement": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "user_mentioned": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "code_review": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "review_requested": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "other": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "sla_breach": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "risk_acceptance_expiration": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "slack",
                                "msteams",
                                "mail",
                                "alert"
                            ],
                            "type": "string"
                        },
                        "default": [
                            "alert"
                        ]
                    },
                    "template": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "PatchedProductAPIScanConfigurationRequest": {
                "type": "object",
                "properties": {
                    "service_key_1": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "service_key_2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "service_key_3": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "product": {
                        "type": "integer"
                    },
                    "tool_configuration": {
                        "type": "integer"
                    }
                }
            },
            "PatchedProductRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4000
                    },
                    "prod_numeric_grade": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "business_criticality": {
                        "enum": [
                            "very high",
                            "high",
                            "medium",
                            "low",
                            "very low",
                            "none",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "enum": [
                            "web service",
                            "desktop",
                            "iot",
                            "mobile",
                            "web",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "lifecycle": {
                        "enum": [
                            "construction",
                            "production",
                            "retirement",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "origin": {
                        "enum": [
                            "third party library",
                            "purchased",
                            "contractor",
                            "internal",
                            "open source",
                            "outsourced",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "user_records": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true,
                        "description": "Estimate the number of user records within the application."
                    },
                    "revenue": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,13}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Estimate the application's revenue."
                    },
                    "external_audience": {
                        "type": "boolean",
                        "description": "Specify if the application is used by people outside the organization."
                    },
                    "internet_accessible": {
                        "type": "boolean",
                        "description": "Specify if the application is accessible from the public internet."
                    },
                    "enable_simple_risk_acceptance": {
                        "type": "boolean",
                        "description": "Allows simple risk acceptance by checking/unchecking a checkbox."
                    },
                    "enable_full_risk_acceptance": {
                        "type": "boolean",
                        "description": "Allows full risk acceptance using a risk acceptance form, expiration date, uploaded proof, etc."
                    },
                    "product_manager": {
                        "type": "integer",
                        "nullable": true
                    },
                    "technical_contact": {
                        "type": "integer",
                        "nullable": true
                    },
                    "team_manager": {
                        "type": "integer",
                        "nullable": true
                    },
                    "prod_type": {
                        "type": "integer"
                    },
                    "sla_configuration": {
                        "type": "integer"
                    },
                    "regulations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "PatchedProductTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 4000
                    },
                    "critical_product": {
                        "type": "boolean"
                    },
                    "key_product": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedRegulationRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the regulation.",
                        "maxLength": 128
                    },
                    "acronym": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A shortened representation of the name.",
                        "maxLength": 20
                    },
                    "category": {
                        "enum": [
                            "privacy",
                            "finance",
                            "education",
                            "medical",
                            "corporate",
                            "other"
                        ],
                        "type": "string",
                        "description": "The subject of the regulation."
                    },
                    "jurisdiction": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The territory over which the regulation applies.",
                        "maxLength": 64
                    },
                    "description": {
                        "type": "string",
                        "description": "Information about the regulation's purpose."
                    },
                    "reference": {
                        "type": "string",
                        "format": "uri",
                        "description": "An external URL for more information.",
                        "maxLength": 200
                    }
                }
            },
            "PatchedSLAConfigurationRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Custom SLA Name",
                        "description": "A unique name for the set of SLAs.",
                        "maxLength": 128
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 512
                    },
                    "critical": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Critical Finding SLA Days",
                        "description": "number of days to remediate a critical finding."
                    },
                    "high": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "High Finding SLA Days",
                        "description": "number of days to remediate a high finding."
                    },
                    "medium": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Medium Finding SLA Days",
                        "description": "number of days to remediate a medium finding."
                    },
                    "low": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Low Finding SLA Days",
                        "description": "number of days to remediate a low finding."
                    }
                }
            },
            "PatchedSonarqubeIssueRequest": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "description": "SonarQube issue key",
                        "maxLength": 30
                    },
                    "status": {
                        "type": "string",
                        "minLength": 1,
                        "description": "SonarQube issue status",
                        "maxLength": 20
                    },
                    "type": {
                        "type": "string",
                        "minLength": 1,
                        "description": "SonarQube issue type",
                        "maxLength": 20
                    }
                }
            },
            "PatchedSonarqubeIssueTransitionRequest": {
                "type": "object",
                "properties": {
                    "finding_status": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "sonarqube_status": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "transitions": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "sonarqube_issue": {
                        "type": "integer"
                    }
                }
            },
            "PatchedStubFindingRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1000
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PatchedSystemSettingsRequest": {
                "type": "object",
                "properties": {
                    "enable_auditlog": {
                        "type": "boolean",
                        "title": "Enable audit logging",
                        "description": "With this setting turned on, Dojo maintains an audit log of changes made to entities (Findings, Tests, Engagements, Procuts, ...)If you run big import you may want to disable this because the way django-auditlog currently works, there's a big performance hit. Especially during (re-)imports."
                    },
                    "enable_deduplication": {
                        "type": "boolean",
                        "title": "Deduplicate findings",
                        "description": "With this setting turned on, Dojo deduplicates findings by comparing endpoints, cwe fields, and titles. If two findings share a URL and have the same CWE or title, Dojo marks the less recent finding as a duplicate. When deduplication is enabled, a list of deduplicated findings is added to the engagement view."
                    },
                    "delete_duplicates": {
                        "type": "boolean",
                        "description": "Requires next setting: maximum number of duplicates to retain."
                    },
                    "max_dupes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Max Duplicates",
                        "description": "When enabled, if a single issue reaches the maximum number of duplicates, the oldest will be deleted. Duplicate will not be deleted when left empty. A value of 0 will remove all duplicates."
                    },
                    "email_from": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "enable_jira": {
                        "type": "boolean",
                        "title": "Enable JIRA integration"
                    },
                    "enable_jira_web_hook": {
                        "type": "boolean",
                        "description": "Please note: It is strongly recommended to use a secret below and / or IP whitelist the JIRA server using a proxy such as Nginx."
                    },
                    "disable_jira_webhook_secret": {
                        "type": "boolean",
                        "title": "Disable web hook secret",
                        "description": "Allows incoming requests without a secret (discouraged legacy behaviour)"
                    },
                    "jira_webhook_secret": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "title": "JIRA Webhook URL",
                        "description": "Secret needed in URL for incoming JIRA Webhook",
                        "maxLength": 64
                    },
                    "jira_minimum_severity": {
                        "enum": [
                            "Critical",
                            "High",
                            "Medium",
                            "Low",
                            "Info",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "jira_labels": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA issue labels space seperated",
                        "maxLength": 200
                    },
                    "add_vulnerability_id_to_jira_label": {
                        "type": "boolean",
                        "title": "Add vulnerability Id as a JIRA label"
                    },
                    "enable_github": {
                        "type": "boolean",
                        "title": "Enable GITHUB integration"
                    },
                    "enable_slack_notifications": {
                        "type": "boolean"
                    },
                    "slack_channel": {
                        "type": "string",
                        "description": "Optional. Needed if you want to send global notifications.",
                        "maxLength": 100
                    },
                    "slack_token": {
                        "type": "string",
                        "description": "Token required for interacting with Slack. Get one at https://api.slack.com/tokens",
                        "maxLength": 100
                    },
                    "slack_username": {
                        "type": "string",
                        "description": "Optional. Will take your bot name otherwise.",
                        "maxLength": 100
                    },
                    "enable_msteams_notifications": {
                        "type": "boolean",
                        "title": "Enable Microsoft Teams notifications"
                    },
                    "msteams_url": {
                        "type": "string",
                        "description": "The full URL of the incoming webhook",
                        "maxLength": 400
                    },
                    "enable_mail_notifications": {
                        "type": "boolean"
                    },
                    "mail_notifications_to": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "false_positive_history": {
                        "type": "boolean",
                        "description": "DefectDojo will automatically mark the finding as a false positive if the finding has been previously marked as a false positive. Not needed when using deduplication, advised to not combine these two."
                    },
                    "url_prefix": {
                        "type": "string",
                        "description": "URL prefix if DefectDojo is installed in it's own virtual subdirectory.",
                        "maxLength": 300
                    },
                    "team_name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "time_zone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Asmera",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Timbuktu",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Anguilla",
                            "America/Antigua",
                            "America/Araguaina",
                            "America/Argentina/Buenos_Aires",
                            "America/Argentina/Catamarca",
                            "America/Argentina/ComodRivadavia",
                            "America/Argentina/Cordoba",
                            "America/Argentina/Jujuy",
                            "America/Argentina/La_Rioja",
                            "America/Argentina/Mendoza",
                            "America/Argentina/Rio_Gallegos",
                            "America/Argentina/Salta",
                            "America/Argentina/San_Juan",
                            "America/Argentina/San_Luis",
                            "America/Argentina/Tucuman",
                            "America/Argentina/Ushuaia",
                            "America/Aruba",
                            "America/Asuncion",
                            "America/Atikokan",
                            "America/Atka",
                            "America/Bahia",
                            "America/Bahia_Banderas",
                            "America/Barbados",
                            "America/Belem",
                            "America/Belize",
                            "America/Blanc-Sablon",
                            "America/Boa_Vista",
                            "America/Bogota",
                            "America/Boise",
                            "America/Buenos_Aires",
                            "America/Cambridge_Bay",
                            "America/Campo_Grande",
                            "America/Cancun",
                            "America/Caracas",
                            "America/Catamarca",
                            "America/Cayenne",
                            "America/Cayman",
                            "America/Chicago",
                            "America/Chihuahua",
                            "America/Coral_Harbour",
                            "America/Cordoba",
                            "America/Costa_Rica",
                            "America/Creston",
                            "America/Cuiaba",
                            "America/Curacao",
                            "America/Danmarkshavn",
                            "America/Dawson",
                            "America/Dawson_Creek",
                            "America/Denver",
                            "America/Detroit",
                            "America/Dominica",
                            "America/Edmonton",
                            "America/Eirunepe",
                            "America/El_Salvador",
                            "America/Ensenada",
                            "America/Fort_Nelson",
                            "America/Fort_Wayne",
                            "America/Fortaleza",
                            "America/Glace_Bay",
                            "America/Godthab",
                            "America/Goose_Bay",
                            "America/Grand_Turk",
                            "America/Grenada",
                            "America/Guadeloupe",
                            "America/Guatemala",
                            "America/Guayaquil",
                            "America/Guyana",
                            "America/Halifax",
                            "America/Havana",
                            "America/Hermosillo",
                            "America/Indiana/Indianapolis",
                            "America/Indiana/Knox",
                            "America/Indiana/Marengo",
                            "America/Indiana/Petersburg",
                            "America/Indiana/Tell_City",
                            "America/Indiana/Vevay",
                            "America/Indiana/Vincennes",
                            "America/Indiana/Winamac",
                            "America/Indianapolis",
                            "America/Inuvik",
                            "America/Iqaluit",
                            "America/Jamaica",
                            "America/Jujuy",
                            "America/Juneau",
                            "America/Kentucky/Louisville",
                            "America/Kentucky/Monticello",
                            "America/Knox_IN",
                            "America/Kralendijk",
                            "America/La_Paz",
                            "America/Lima",
                            "America/Los_Angeles",
                            "America/Louisville",
                            "America/Lower_Princes",
                            "America/Maceio",
                            "America/Managua",
                            "America/Manaus",
                            "America/Marigot",
                            "America/Martinique",
                            "America/Matamoros",
                            "America/Mazatlan",
                            "America/Mendoza",
                            "America/Menominee",
                            "America/Merida",
                            "America/Metlakatla",
                            "America/Mexico_City",
                            "America/Miquelon",
                            "America/Moncton",
                            "America/Monterrey",
                            "America/Montevideo",
                            "America/Montreal",
                            "America/Montserrat",
                            "America/Nassau",
                            "America/New_York",
                            "America/Nipigon",
                            "America/Nome",
                            "America/Noronha",
                            "America/North_Dakota/Beulah",
                            "America/North_Dakota/Center",
                            "America/North_Dakota/New_Salem",
                            "America/Nuuk",
                            "America/Ojinaga",
                            "America/Panama",
                            "America/Pangnirtung",
                            "America/Paramaribo",
                            "America/Phoenix",
                            "America/Port-au-Prince",
                            "America/Port_of_Spain",
                            "America/Porto_Acre",
                            "America/Porto_Velho",
                            "America/Puerto_Rico",
                            "America/Punta_Arenas",
                            "America/Rainy_River",
                            "America/Rankin_Inlet",
                            "America/Recife",
                            "America/Regina",
                            "America/Resolute",
                            "America/Rio_Branco",
                            "America/Rosario",
                            "America/Santa_Isabel",
                            "America/Santarem",
                            "America/Santiago",
                            "America/Santo_Domingo",
                            "America/Sao_Paulo",
                            "America/Scoresbysund",
                            "America/Shiprock",
                            "America/Sitka",
                            "America/St_Barthelemy",
                            "America/St_Johns",
                            "America/St_Kitts",
                            "America/St_Lucia",
                            "America/St_Thomas",
                            "America/St_Vincent",
                            "America/Swift_Current",
                            "America/Tegucigalpa",
                            "America/Thule",
                            "America/Thunder_Bay",
                            "America/Tijuana",
                            "America/Toronto",
                            "America/Tortola",
                            "America/Vancouver",
                            "America/Virgin",
                            "America/Whitehorse",
                            "America/Winnipeg",
                            "America/Yakutat",
                            "America/Yellowknife",
                            "Antarctica/Casey",
                            "Antarctica/Davis",
                            "Antarctica/DumontDUrville",
                            "Antarctica/Macquarie",
                            "Antarctica/Mawson",
                            "Antarctica/McMurdo",
                            "Antarctica/Palmer",
                            "Antarctica/Rothera",
                            "Antarctica/South_Pole",
                            "Antarctica/Syowa",
                            "Antarctica/Troll",
                            "Antarctica/Vostok",
                            "Arctic/Longyearbyen",
                            "Asia/Aden",
                            "Asia/Almaty",
                            "Asia/Amman",
                            "Asia/Anadyr",
                            "Asia/Aqtau",
                            "Asia/Aqtobe",
                            "Asia/Ashgabat",
                            "Asia/Ashkhabad",
                            "Asia/Atyrau",
                            "Asia/Baghdad",
                            "Asia/Bahrain",
                            "Asia/Baku",
                            "Asia/Bangkok",
                            "Asia/Barnaul",
                            "Asia/Beirut",
                            "Asia/Bishkek",
                            "Asia/Brunei",
                            "Asia/Calcutta",
                            "Asia/Chita",
                            "Asia/Choibalsan",
                            "Asia/Chongqing",
                            "Asia/Chungking",
                            "Asia/Colombo",
                            "Asia/Dacca",
                            "Asia/Damascus",
                            "Asia/Dhaka",
                            "Asia/Dili",
                            "Asia/Dubai",
                            "Asia/Dushanbe",
                            "Asia/Famagusta",
                            "Asia/Gaza",
                            "Asia/Harbin",
                            "Asia/Hebron",
                            "Asia/Ho_Chi_Minh",
                            "Asia/Hong_Kong",
                            "Asia/Hovd",
                            "Asia/Irkutsk",
                            "Asia/Istanbul",
                            "Asia/Jakarta",
                            "Asia/Jayapura",
                            "Asia/Jerusalem",
                            "Asia/Kabul",
                            "Asia/Kamchatka",
                            "Asia/Karachi",
                            "Asia/Kashgar",
                            "Asia/Kathmandu",
                            "Asia/Katmandu",
                            "Asia/Khandyga",
                            "Asia/Kolkata",
                            "Asia/Krasnoyarsk",
                            "Asia/Kuala_Lumpur",
                            "Asia/Kuching",
                            "Asia/Kuwait",
                            "Asia/Macao",
                            "Asia/Macau",
                            "Asia/Magadan",
                            "Asia/Makassar",
                            "Asia/Manila",
                            "Asia/Muscat",
                            "Asia/Nicosia",
                            "Asia/Novokuznetsk",
                            "Asia/Novosibirsk",
                            "Asia/Omsk",
                            "Asia/Oral",
                            "Asia/Phnom_Penh",
                            "Asia/Pontianak",
                            "Asia/Pyongyang",
                            "Asia/Qatar",
                            "Asia/Qostanay",
                            "Asia/Qyzylorda",
                            "Asia/Rangoon",
                            "Asia/Riyadh",
                            "Asia/Saigon",
                            "Asia/Sakhalin",
                            "Asia/Samarkand",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Srednekolymsk",
                            "Asia/Taipei",
                            "Asia/Tashkent",
                            "Asia/Tbilisi",
                            "Asia/Tehran",
                            "Asia/Tel_Aviv",
                            "Asia/Thimbu",
                            "Asia/Thimphu",
                            "Asia/Tokyo",
                            "Asia/Tomsk",
                            "Asia/Ujung_Pandang",
                            "Asia/Ulaanbaatar",
                            "Asia/Ulan_Bator",
                            "Asia/Urumqi",
                            "Asia/Ust-Nera",
                            "Asia/Vientiane",
                            "Asia/Vladivostok",
                            "Asia/Yakutsk",
                            "Asia/Yangon",
                            "Asia/Yekaterinburg",
                            "Asia/Yerevan",
                            "Atlantic/Azores",
                            "Atlantic/Bermuda",
                            "Atlantic/Canary",
                            "Atlantic/Cape_Verde",
                            "Atlantic/Faeroe",
                            "Atlantic/Faroe",
                            "Atlantic/Jan_Mayen",
                            "Atlantic/Madeira",
                            "Atlantic/Reykjavik",
                            "Atlantic/South_Georgia",
                            "Atlantic/St_Helena",
                            "Atlantic/Stanley",
                            "Australia/ACT",
                            "Australia/Adelaide",
                            "Australia/Brisbane",
                            "Australia/Broken_Hill",
                            "Australia/Canberra",
                            "Australia/Currie",
                            "Australia/Darwin",
                            "Australia/Eucla",
                            "Australia/Hobart",
                            "Australia/LHI",
                            "Australia/Lindeman",
                            "Australia/Lord_Howe",
                            "Australia/Melbourne",
                            "Australia/NSW",
                            "Australia/North",
                            "Australia/Perth",
                            "Australia/Queensland",
                            "Australia/South",
                            "Australia/Sydney",
                            "Australia/Tasmania",
                            "Australia/Victoria",
                            "Australia/West",
                            "Australia/Yancowinna",
                            "Brazil/Acre",
                            "Brazil/DeNoronha",
                            "Brazil/East",
                            "Brazil/West",
                            "CET",
                            "CST6CDT",
                            "Canada/Atlantic",
                            "Canada/Central",
                            "Canada/Eastern",
                            "Canada/Mountain",
                            "Canada/Newfoundland",
                            "Canada/Pacific",
                            "Canada/Saskatchewan",
                            "Canada/Yukon",
                            "Chile/Continental",
                            "Chile/EasterIsland",
                            "Cuba",
                            "EET",
                            "EST",
                            "EST5EDT",
                            "Egypt",
                            "Eire",
                            "Etc/GMT",
                            "Etc/GMT+0",
                            "Etc/GMT+1",
                            "Etc/GMT+10",
                            "Etc/GMT+11",
                            "Etc/GMT+12",
                            "Etc/GMT+2",
                            "Etc/GMT+3",
                            "Etc/GMT+4",
                            "Etc/GMT+5",
                            "Etc/GMT+6",
                            "Etc/GMT+7",
                            "Etc/GMT+8",
                            "Etc/GMT+9",
                            "Etc/GMT-0",
                            "Etc/GMT-1",
                            "Etc/GMT-10",
                            "Etc/GMT-11",
                            "Etc/GMT-12",
                            "Etc/GMT-13",
                            "Etc/GMT-14",
                            "Etc/GMT-2",
                            "Etc/GMT-3",
                            "Etc/GMT-4",
                            "Etc/GMT-5",
                            "Etc/GMT-6",
                            "Etc/GMT-7",
                            "Etc/GMT-8",
                            "Etc/GMT-9",
                            "Etc/GMT0",
                            "Etc/Greenwich",
                            "Etc/UCT",
                            "Etc/UTC",
                            "Etc/Universal",
                            "Etc/Zulu",
                            "Europe/Amsterdam",
                            "Europe/Andorra",
                            "Europe/Astrakhan",
                            "Europe/Athens",
                            "Europe/Belfast",
                            "Europe/Belgrade",
                            "Europe/Berlin",
                            "Europe/Bratislava",
                            "Europe/Brussels",
                            "Europe/Bucharest",
                            "Europe/Budapest",
                            "Europe/Busingen",
                            "Europe/Chisinau",
                            "Europe/Copenhagen",
                            "Europe/Dublin",
                            "Europe/Gibraltar",
                            "Europe/Guernsey",
                            "Europe/Helsinki",
                            "Europe/Isle_of_Man",
                            "Europe/Istanbul",
                            "Europe/Jersey",
                            "Europe/Kaliningrad",
                            "Europe/Kiev",
                            "Europe/Kirov",
                            "Europe/Kyiv",
                            "Europe/Lisbon",
                            "Europe/Ljubljana",
                            "Europe/London",
                            "Europe/Luxembourg",
                            "Europe/Madrid",
                            "Europe/Malta",
                            "Europe/Mariehamn",
                            "Europe/Minsk",
                            "Europe/Monaco",
                            "Europe/Moscow",
                            "Europe/Nicosia",
                            "Europe/Oslo",
                            "Europe/Paris",
                            "Europe/Podgorica",
                            "Europe/Prague",
                            "Europe/Riga",
                            "Europe/Rome",
                            "Europe/Samara",
                            "Europe/San_Marino",
                            "Europe/Sarajevo",
                            "Europe/Saratov",
                            "Europe/Simferopol",
                            "Europe/Skopje",
                            "Europe/Sofia",
                            "Europe/Stockholm",
                            "Europe/Tallinn",
                            "Europe/Tirane",
                            "Europe/Tiraspol",
                            "Europe/Ulyanovsk",
                            "Europe/Uzhgorod",
                            "Europe/Vaduz",
                            "Europe/Vatican",
                            "Europe/Vienna",
                            "Europe/Vilnius",
                            "Europe/Volgograd",
                            "Europe/Warsaw",
                            "Europe/Zagreb",
                            "Europe/Zaporozhye",
                            "Europe/Zurich",
                            "GB",
                            "GB-Eire",
                            "GMT",
                            "GMT+0",
                            "GMT-0",
                            "GMT0",
                            "Greenwich",
                            "HST",
                            "Hongkong",
                            "Iceland",
                            "Indian/Antananarivo",
                            "Indian/Chagos",
                            "Indian/Christmas",
                            "Indian/Cocos",
                            "Indian/Comoro",
                            "Indian/Kerguelen",
                            "Indian/Mahe",
                            "Indian/Maldives",
                            "Indian/Mauritius",
                            "Indian/Mayotte",
                            "Indian/Reunion",
                            "Iran",
                            "Israel",
                            "Jamaica",
                            "Japan",
                            "Kwajalein",
                            "Libya",
                            "MET",
                            "MST",
                            "MST7MDT",
                            "Mexico/BajaNorte",
                            "Mexico/BajaSur",
                            "Mexico/General",
                            "NZ",
                            "NZ-CHAT",
                            "Navajo",
                            "PRC",
                            "PST8PDT",
                            "Pacific/Apia",
                            "Pacific/Auckland",
                            "Pacific/Bougainville",
                            "Pacific/Chatham",
                            "Pacific/Chuuk",
                            "Pacific/Easter",
                            "Pacific/Efate",
                            "Pacific/Enderbury",
                            "Pacific/Fakaofo",
                            "Pacific/Fiji",
                            "Pacific/Funafuti",
                            "Pacific/Galapagos",
                            "Pacific/Gambier",
                            "Pacific/Guadalcanal",
                            "Pacific/Guam",
                            "Pacific/Honolulu",
                            "Pacific/Johnston",
                            "Pacific/Kanton",
                            "Pacific/Kiritimati",
                            "Pacific/Kosrae",
                            "Pacific/Kwajalein",
                            "Pacific/Majuro",
                            "Pacific/Marquesas",
                            "Pacific/Midway",
                            "Pacific/Nauru",
                            "Pacific/Niue",
                            "Pacific/Norfolk",
                            "Pacific/Noumea",
                            "Pacific/Pago_Pago",
                            "Pacific/Palau",
                            "Pacific/Pitcairn",
                            "Pacific/Pohnpei",
                            "Pacific/Ponape",
                            "Pacific/Port_Moresby",
                            "Pacific/Rarotonga",
                            "Pacific/Saipan",
                            "Pacific/Samoa",
                            "Pacific/Tahiti",
                            "Pacific/Tarawa",
                            "Pacific/Tongatapu",
                            "Pacific/Truk",
                            "Pacific/Wake",
                            "Pacific/Wallis",
                            "Pacific/Yap",
                            "Poland",
                            "Portugal",
                            "ROC",
                            "ROK",
                            "Singapore",
                            "Turkey",
                            "UCT",
                            "US/Alaska",
                            "US/Aleutian",
                            "US/Arizona",
                            "US/Central",
                            "US/East-Indiana",
                            "US/Eastern",
                            "US/Hawaii",
                            "US/Indiana-Starke",
                            "US/Michigan",
                            "US/Mountain",
                            "US/Pacific",
                            "US/Samoa",
                            "UTC",
                            "Universal",
                            "W-SU",
                            "WET",
                            "Zulu"
                        ],
                        "type": "string"
                    },
                    "enable_product_grade": {
                        "type": "boolean",
                        "title": "Enable Product Grading",
                        "description": "Displays a grade letter next to a product to show the overall health."
                    },
                    "product_grade": {
                        "type": "string",
                        "maxLength": 800
                    },
                    "product_grade_a": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade A",
                        "description": "Percentage score for an 'A' >="
                    },
                    "product_grade_b": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade B",
                        "description": "Percentage score for a 'B' >="
                    },
                    "product_grade_c": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade C",
                        "description": "Percentage score for a 'C' >="
                    },
                    "product_grade_d": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade D",
                        "description": "Percentage score for a 'D' >="
                    },
                    "product_grade_f": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade F",
                        "description": "Percentage score for an 'F' <="
                    },
                    "enable_benchmark": {
                        "type": "boolean",
                        "title": "Enable Benchmarks",
                        "description": "Enables Benchmarks such as the OWASP ASVS (Application Security Verification Standard)"
                    },
                    "enable_template_match": {
                        "type": "boolean",
                        "title": "Enable Remediation Advice",
                        "description": "Enables global remediation advice and matching on CWE and Title. The text will be replaced for mitigation, impact and references on a finding. Useful for providing consistent impact and remediation advice regardless of the scanner."
                    },
                    "engagement_auto_close": {
                        "type": "boolean",
                        "title": "Enable Engagement Auto-Close",
                        "description": "Closes an engagement after 3 days (default) past due date including last update."
                    },
                    "engagement_auto_close_days": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Closes an engagement after the specified number of days past due date including last update."
                    },
                    "enable_finding_sla": {
                        "type": "boolean",
                        "title": "Enable Finding SLA's",
                        "description": "Enables Finding SLA's for time to remediate."
                    },
                    "enable_notify_sla_active": {
                        "type": "boolean",
                        "title": "Enable Notifiy SLA's Breach for active Findings",
                        "description": "Enables Notify when time to remediate according to Finding SLA's is breached for active Findings."
                    },
                    "enable_notify_sla_active_verified": {
                        "type": "boolean",
                        "title": "Enable Notifiy SLA's Breach for active, verified Findings",
                        "description": "Enables Notify when time to remediate according to Finding SLA's is breached for active, verified Findings."
                    },
                    "enable_notify_sla_jira_only": {
                        "type": "boolean",
                        "title": "Enable Notifiy SLA's Breach for Findings linked to JIRA",
                        "description": "Enables Notify when time to remediate according to Finding SLA's is breached for Findings that are linked to JIRA issues."
                    },
                    "allow_anonymous_survey_repsonse": {
                        "type": "boolean",
                        "title": "Allow Anonymous Survey Responses",
                        "description": "Enable anyone with a link to the survey to answer a survey"
                    },
                    "credentials": {
                        "type": "string",
                        "maxLength": 3000
                    },
                    "disclaimer": {
                        "type": "string",
                        "title": "Custom Disclaimer",
                        "description": "Include this custom disclaimer on all notifications and generated reports",
                        "maxLength": 3000
                    },
                    "column_widths": {
                        "type": "string",
                        "maxLength": 1500
                    },
                    "drive_folder_ID": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "email_address": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 100
                    },
                    "risk_acceptance_form_default_days": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "Default expiry period for risk acceptance form."
                    },
                    "risk_acceptance_notify_before_expiration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Risk acceptance expiration heads up days",
                        "description": "Notify X days before risk acceptance expires. Leave empty to disable."
                    },
                    "enable_credentials": {
                        "type": "boolean",
                        "description": "With this setting turned off, credentials will be disabled in the user interface."
                    },
                    "enable_questionnaires": {
                        "type": "boolean",
                        "description": "With this setting turned off, questionnaires will be disabled in the user interface."
                    },
                    "enable_checklists": {
                        "type": "boolean",
                        "description": "With this setting turned off, checklists will be disabled in the user interface."
                    },
                    "enable_endpoint_metadata_import": {
                        "type": "boolean",
                        "description": "With this setting turned off, endpoint metadata import will be disabled in the user interface."
                    },
                    "enable_google_sheets": {
                        "type": "boolean",
                        "title": "Enable Google Sheets Integration",
                        "description": "With this setting turned off, the Google sheets integration will be disabled in the user interface."
                    },
                    "enable_rules_framework": {
                        "type": "boolean",
                        "description": "With this setting turned off, the rules framwork will be disabled in the user interface."
                    },
                    "enable_user_profile_editable": {
                        "type": "boolean",
                        "title": "Enable user profile for writing",
                        "description": "When turned on users can edit their profiles"
                    },
                    "enable_product_tracking_files": {
                        "type": "boolean",
                        "description": "With this setting turned off, the product tracking files will be disabled in the user interface."
                    },
                    "enable_finding_groups": {
                        "type": "boolean",
                        "description": "With this setting turned off, the Finding Groups will be disabled."
                    },
                    "enable_calendar": {
                        "type": "boolean",
                        "description": "With this setting turned off, the Calendar will be disabled in the user interface."
                    },
                    "default_group_email_pattern": {
                        "type": "string",
                        "description": "New users will only be assigned to the default group, when their email address matches this regex pattern. This is optional condition.",
                        "maxLength": 200
                    },
                    "minimum_password_length": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Requires user to set passwords greater than minimum length."
                    },
                    "maximum_password_length": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Requires user to set passwords less than maximum length."
                    },
                    "number_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one digit",
                        "description": "Requires user passwords to contain at least one digit (0-9)."
                    },
                    "special_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one special character",
                        "description": "Requires user passwords to contain at least one special character (()[]{}|\\`~!@#$%^&*_-+=;:'\",<>./?)."
                    },
                    "lowercase_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one lowercase letter",
                        "description": "Requires user passwords to contain at least one lowercase letter (a-z)."
                    },
                    "uppercase_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one uppercase letter",
                        "description": "Requires user passwords to contain at least one uppercase letter (A-Z)."
                    },
                    "default_group": {
                        "type": "integer",
                        "nullable": true,
                        "description": "New users will be assigned to this group."
                    },
                    "default_group_role": {
                        "type": "integer",
                        "nullable": true,
                        "description": "New users will be assigned to their default group with this role."
                    }
                }
            },
            "PatchedTagRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            },
            "PatchedTestImportRequest": {
                "type": "object",
                "properties": {
                    "import_settings": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch that was tested, a reimport may update this field.",
                        "maxLength": 150
                    }
                }
            },
            "PatchedTestRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "scan_type": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "target_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "target_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "percent_complete": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "test_type": {
                        "type": "integer"
                    },
                    "environment": {
                        "type": "integer",
                        "nullable": true
                    },
                    "api_scan_configuration": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedTestTypeRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "static_tool": {
                        "type": "boolean"
                    },
                    "dynamic_tool": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedToolConfigurationRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "authentication_type": {
                        "enum": [
                            "API",
                            "Password",
                            "SSH",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "extras": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional definitions that will be consumed by scanner",
                        "maxLength": 255
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "maxLength": 600
                    },
                    "auth_title": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title for SSH/API Key",
                        "maxLength": 200
                    },
                    "ssh": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "maxLength": 6000
                    },
                    "api_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "maxLength": 600
                    },
                    "tool_type": {
                        "type": "integer"
                    }
                }
            },
            "PatchedToolProductSettingsRequest": {
                "type": "object",
                "properties": {
                    "setting_url": {
                        "type": "string",
                        "minLength": 1
                    },
                    "product": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "tool_project_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "tool_configuration": {
                        "type": "integer"
                    }
                }
            },
            "PatchedToolTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    }
                }
            },
            "PatchedUserContactInfoRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 150
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                        "pattern": "^\\+?1?\\d{9,15}$",
                        "maxLength": 15
                    },
                    "cell_number": {
                        "type": "string",
                        "description": "Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                        "pattern": "^\\+?1?\\d{9,15}$",
                        "maxLength": 15
                    },
                    "twitter_username": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 150
                    },
                    "github_username": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 150
                    },
                    "slack_username": {
                        "type": "string",
                        "nullable": true,
                        "title": "Slack Email Address",
                        "description": "Email address associated with your slack account",
                        "maxLength": 150
                    },
                    "slack_user_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 25
                    },
                    "block_execution": {
                        "type": "boolean",
                        "description": "Instead of async deduping a finding the findings will be deduped synchronously and will 'block' the user until completion."
                    },
                    "force_password_reset": {
                        "type": "boolean",
                        "description": "Forces this user to reset their password on next login."
                    },
                    "user": {
                        "type": "integer"
                    }
                }
            },
            "PatchedUserRequest": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    },
                    "configuration_permissions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    }
                }
            },
            "Product": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "findings_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "findings_list": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "product_meta": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductMeta"
                        },
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 4000
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "prod_numeric_grade": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "business_criticality": {
                        "enum": [
                            "very high",
                            "high",
                            "medium",
                            "low",
                            "very low",
                            "none",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "enum": [
                            "web service",
                            "desktop",
                            "iot",
                            "mobile",
                            "web",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "lifecycle": {
                        "enum": [
                            "construction",
                            "production",
                            "retirement",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "origin": {
                        "enum": [
                            "third party library",
                            "purchased",
                            "contractor",
                            "internal",
                            "open source",
                            "outsourced",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "user_records": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true,
                        "description": "Estimate the number of user records within the application."
                    },
                    "revenue": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,13}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Estimate the application's revenue."
                    },
                    "external_audience": {
                        "type": "boolean",
                        "description": "Specify if the application is used by people outside the organization."
                    },
                    "internet_accessible": {
                        "type": "boolean",
                        "description": "Specify if the application is accessible from the public internet."
                    },
                    "enable_simple_risk_acceptance": {
                        "type": "boolean",
                        "description": "Allows simple risk acceptance by checking/unchecking a checkbox."
                    },
                    "enable_full_risk_acceptance": {
                        "type": "boolean",
                        "description": "Allows full risk acceptance using a risk acceptance form, expiration date, uploaded proof, etc."
                    },
                    "product_manager": {
                        "type": "integer",
                        "nullable": true
                    },
                    "technical_contact": {
                        "type": "integer",
                        "nullable": true
                    },
                    "team_manager": {
                        "type": "integer",
                        "nullable": true
                    },
                    "prod_type": {
                        "type": "integer"
                    },
                    "sla_configuration": {
                        "type": "integer"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "authorization_groups": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "regulations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "authorization_groups": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "members": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "prod_type": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            },
                            "product_manager": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "regulations": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Regulation"
                                }
                            },
                            "sla_configuration": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/SLAConfiguration"
                                }
                            },
                            "team_manager": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            },
                            "technical_contact": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "authorization_groups",
                    "created",
                    "description",
                    "findings_count",
                    "findings_list",
                    "id",
                    "members",
                    "name",
                    "prod_type",
                    "product_meta"
                ]
            },
            "ProductAPIScanConfiguration": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "service_key_1": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "service_key_2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "service_key_3": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "product": {
                        "type": "integer"
                    },
                    "tool_configuration": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "product",
                    "tool_configuration"
                ]
            },
            "ProductAPIScanConfigurationRequest": {
                "type": "object",
                "properties": {
                    "service_key_1": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "service_key_2": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "service_key_3": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "product": {
                        "type": "integer"
                    },
                    "tool_configuration": {
                        "type": "integer"
                    }
                },
                "required": [
                    "product",
                    "tool_configuration"
                ]
            },
            "ProductGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product": {
                        "type": "integer"
                    },
                    "group": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer"
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "group": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "group",
                    "id",
                    "product",
                    "role"
                ]
            },
            "ProductGroupRequest": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "integer"
                    },
                    "group": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer"
                    }
                },
                "required": [
                    "group",
                    "product",
                    "role"
                ]
            },
            "ProductMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer"
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "product": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "product",
                    "role",
                    "user"
                ]
            },
            "ProductMemberRequest": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer"
                    }
                },
                "required": [
                    "product",
                    "role",
                    "user"
                ]
            },
            "ProductMeta": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "name",
                    "value"
                ]
            },
            "ProductMetaRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 300
                    }
                },
                "required": [
                    "name",
                    "value"
                ]
            },
            "ProductRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4000
                    },
                    "prod_numeric_grade": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "business_criticality": {
                        "enum": [
                            "very high",
                            "high",
                            "medium",
                            "low",
                            "very low",
                            "none",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "platform": {
                        "enum": [
                            "web service",
                            "desktop",
                            "iot",
                            "mobile",
                            "web",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "lifecycle": {
                        "enum": [
                            "construction",
                            "production",
                            "retirement",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "origin": {
                        "enum": [
                            "third party library",
                            "purchased",
                            "contractor",
                            "internal",
                            "open source",
                            "outsourced",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "user_records": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true,
                        "description": "Estimate the number of user records within the application."
                    },
                    "revenue": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,13}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "description": "Estimate the application's revenue."
                    },
                    "external_audience": {
                        "type": "boolean",
                        "description": "Specify if the application is used by people outside the organization."
                    },
                    "internet_accessible": {
                        "type": "boolean",
                        "description": "Specify if the application is accessible from the public internet."
                    },
                    "enable_simple_risk_acceptance": {
                        "type": "boolean",
                        "description": "Allows simple risk acceptance by checking/unchecking a checkbox."
                    },
                    "enable_full_risk_acceptance": {
                        "type": "boolean",
                        "description": "Allows full risk acceptance using a risk acceptance form, expiration date, uploaded proof, etc."
                    },
                    "product_manager": {
                        "type": "integer",
                        "nullable": true
                    },
                    "technical_contact": {
                        "type": "integer",
                        "nullable": true
                    },
                    "team_manager": {
                        "type": "integer",
                        "nullable": true
                    },
                    "prod_type": {
                        "type": "integer"
                    },
                    "sla_configuration": {
                        "type": "integer"
                    },
                    "regulations": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "description",
                    "name",
                    "prod_type"
                ]
            },
            "ProductType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 4000
                    },
                    "critical_product": {
                        "type": "boolean"
                    },
                    "key_product": {
                        "type": "boolean"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "authorization_groups": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "authorization_groups": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "members": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "authorization_groups",
                    "created",
                    "id",
                    "members",
                    "name",
                    "updated"
                ]
            },
            "ProductTypeGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product_type": {
                        "type": "integer"
                    },
                    "group": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer"
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "group": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/DojoGroup"
                                }
                            },
                            "product_type": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "group",
                    "id",
                    "product_type",
                    "role"
                ]
            },
            "ProductTypeGroupRequest": {
                "type": "object",
                "properties": {
                    "product_type": {
                        "type": "integer"
                    },
                    "group": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer"
                    }
                },
                "required": [
                    "group",
                    "product_type",
                    "role"
                ]
            },
            "ProductTypeMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product_type": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer"
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "product_type": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            },
                            "role": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            },
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "product_type",
                    "role",
                    "user"
                ]
            },
            "ProductTypeMemberRequest": {
                "type": "object",
                "properties": {
                    "product_type": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "role": {
                        "type": "integer"
                    }
                },
                "required": [
                    "product_type",
                    "role",
                    "user"
                ]
            },
            "ProductTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 4000
                    },
                    "critical_product": {
                        "type": "boolean"
                    },
                    "key_product": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ReImportScan": {
                "type": "object",
                "properties": {
                    "scan_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Scan completion date will be used on all findings."
                    },
                    "minimum_severity": {
                        "enum": [
                            "Info",
                            "Low",
                            "Medium",
                            "High",
                            "Critical"
                        ],
                        "type": "string",
                        "default": "Info",
                        "description": "Minimum severity level to be imported"
                    },
                    "active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if these findings are currently active."
                    },
                    "verified": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if these findings have been verified."
                    },
                    "do_not_reactivate": {
                        "type": "boolean",
                        "default": false,
                        "description": "Select if the import should ignore active findings from the report, useful for triage-less scanners. Will keep existing findings closed, without reactivating them. For more information check the docs."
                    },
                    "scan_type": {
                        "enum": [
                            "Acunetix Scan",
                            "Acunetix360 Scan",
                            "Anchore Engine Scan",
                            "Anchore Enterprise Policy Check",
                            "Anchore Grype",
                            "AnchoreCTL Policies Report",
                            "AnchoreCTL Vuln Report",
                            "AppSpider Scan",
                            "Aqua Scan",
                            "Arachni Scan",
                            "AuditJS Scan",
                            "AWS Prowler Scan",
                            "AWS Scout2 Scan",
                            "AWS Security Hub Scan",
                            "Azure Security Center Recommendations Scan",
                            "Bandit Scan",
                            "BlackDuck API",
                            "Blackduck Component Risk",
                            "Blackduck Hub Scan",
                            "Brakeman Scan",
                            "Bugcrowd API Import",
                            "BugCrowd Scan",
                            "Bundler-Audit Scan",
                            "Burp Enterprise Scan",
                            "Burp GraphQL API",
                            "Burp REST API",
                            "Burp Scan",
                            "CargoAudit Scan",
                            "Checkmarx OSA",
                            "Checkmarx Scan",
                            "Checkmarx Scan detailed",
                            "Checkov Scan",
                            "Clair Klar Scan",
                            "Clair Scan",
                            "Cloudsploit Scan",
                            "Cobalt.io API Import",
                            "Cobalt.io Scan",
                            "Contrast Scan",
                            "Coverity API",
                            "Crashtest Security JSON File",
                            "Crashtest Security XML File",
                            "CredScan Scan",
                            "CycloneDX Scan",
                            "DawnScanner Scan",
                            "Dependency Check Scan",
                            "Dependency Track Finding Packaging Format (FPF) Export",
                            "Detect-secrets Scan",
                            "docker-bench-security Scan",
                            "Dockle Scan",
                            "DrHeader JSON Importer",
                            "DSOP Scan",
                            "Edgescan Scan",
                            "ESLint Scan",
                            "Fortify Scan",
                            "Generic Findings Import",
                            "Ggshield Scan",
                            "Github Vulnerability Scan",
                            "GitLab API Fuzzing Report Scan",
                            "GitLab Container Scan",
                            "GitLab DAST Report",
                            "GitLab Dependency Scanning Report",
                            "GitLab SAST Report",
                            "GitLab Secret Detection Report",
                            "Gitleaks Scan",
                            "Gosec Scanner",
                            "HackerOne Cases",
                            "Hadolint Dockerfile check",
                            "Harbor Vulnerability Scan",
                            "Horusec Scan",
                            "HuskyCI Report",
                            "Hydra Scan",
                            "IBM AppScan DAST",
                            "Immuniweb Scan",
                            "IntSights Report",
                            "JFrog Xray API Summary Artifact Scan",
                            "JFrog Xray Scan",
                            "JFrog Xray Unified Scan",
                            "KICS Scan",
                            "Kiuwan Scan",
                            "kube-bench Scan",
                            "Meterian Scan",
                            "Microfocus Webinspect Scan",
                            "MobSF Scan",
                            "Mobsfscan Scan",
                            "Mozilla Observatory Scan",
                            "Nessus Scan",
                            "Nessus WAS Scan",
                            "Netsparker Scan",
                            "NeuVector (compliance)",
                            "NeuVector (REST)",
                            "Nexpose Scan",
                            "Nikto Scan",
                            "Nmap Scan",
                            "Node Security Platform Scan",
                            "NPM Audit Scan",
                            "Nuclei Scan",
                            "Openscap Vulnerability Scan",
                            "OpenVAS CSV",
                            "ORT evaluated model Importer",
                            "OssIndex Devaudit SCA Scan Importer",
                            "Outpost24 Scan",
                            "PHP Security Audit v2",
                            "PHP Symfony Security Check",
                            "pip-audit Scan",
                            "PMD Scan",
                            "PWN SAST",
                            "Qualys Infrastructure Scan (WebGUI XML)",
                            "Qualys Scan",
                            "Qualys Webapp Scan",
                            "Retire.js Scan",
                            "Risk Recon API Importer",
                            "Rubocop Scan",
                            "Rusty Hog Scan",
                            "SARIF",
                            "Scantist Scan",
                            "Scout Suite Scan",
                            "Semgrep JSON Report",
                            "SKF Scan",
                            "Snyk Scan",
                            "Solar Appscreener Scan",
                            "SonarQube API Import",
                            "SonarQube Scan",
                            "SonarQube Scan detailed",
                            "Sonatype Application Scan",
                            "SpotBugs Scan",
                            "SSL Labs Scan",
                            "Sslscan",
                            "Sslyze Scan",
                            "SSLyze Scan (JSON)",
                            "StackHawk HawkScan",
                            "Terrascan Scan",
                            "Testssl Scan",
                            "TFSec Scan",
                            "Trivy Scan",
                            "Trufflehog Scan",
                            "Trufflehog3 Scan",
                            "Trustwave Fusion API Scan",
                            "Trustwave Scan (CSV)",
                            "Twistlock Image Scan",
                            "VCG Scan",
                            "Veracode Scan",
                            "Veracode SourceClear Scan",
                            "Vulners",
                            "Wapiti Scan",
                            "WFuzz JSON report",
                            "Whispers Scan",
                            "WhiteHat Sentinel",
                            "Whitesource Scan",
                            "Wpscan",
                            "Xanitizer Scan",
                            "Yarn Audit Scan",
                            "ZAP Scan"
                        ],
                        "type": "string"
                    },
                    "endpoint_to_add": {
                        "type": "integer"
                    },
                    "file": {
                        "type": "string",
                        "format": "uri"
                    },
                    "product_type_name": {
                        "type": "string"
                    },
                    "product_name": {
                        "type": "string"
                    },
                    "engagement_name": {
                        "type": "string"
                    },
                    "engagement_end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "End Date for Engagement. Default is current time + 365 days. Required format year-month-day"
                    },
                    "source_code_management_uri": {
                        "type": "string",
                        "format": "uri",
                        "description": "Resource link to source code",
                        "maxLength": 600
                    },
                    "test": {
                        "type": "integer"
                    },
                    "test_title": {
                        "type": "string"
                    },
                    "auto_create_context": {
                        "type": "boolean"
                    },
                    "deduplication_on_engagement": {
                        "type": "boolean"
                    },
                    "push_to_jira": {
                        "type": "boolean",
                        "default": false
                    },
                    "close_old_findings": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if old findings no longer present in the report get closed as mitigated when importing."
                    },
                    "close_old_findings_product_scope": {
                        "type": "boolean",
                        "default": false,
                        "description": "Select if close_old_findings applies to all findings of the same type in the product. By default, it is false meaning that only old findings of the same type in the engagement are in scope. Note that this only applies on the first call to reimport-scan."
                    },
                    "version": {
                        "type": "string",
                        "description": "Version that will be set on existing Test object. Leave empty to leave existing value in place."
                    },
                    "build_id": {
                        "type": "string",
                        "description": "ID of the build that was scanned."
                    },
                    "branch_tag": {
                        "type": "string",
                        "description": "Branch or Tag that was scanned."
                    },
                    "commit_hash": {
                        "type": "string",
                        "description": "Commit that was scanned."
                    },
                    "api_scan_configuration": {
                        "type": "integer",
                        "nullable": true
                    },
                    "service": {
                        "type": "string",
                        "description": "A service is a self-contained piece of functionality within a Product. This is an optional field which is used in deduplication and closing of old findings when set. This affects the whole engagement/product depending on your deduplication scope."
                    },
                    "environment": {
                        "type": "string"
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Modify existing tags that help describe this scan."
                    },
                    "group_by": {
                        "enum": [
                            "component_name",
                            "component_name+component_version",
                            "file_path"
                        ],
                        "type": "string",
                        "description": "Choose an option to automatically group new findings by the chosen option."
                    },
                    "create_finding_groups_for_all_findings": {
                        "type": "boolean",
                        "default": true,
                        "description": "If set to false, finding groups will only be created when there is more than one grouped finding"
                    },
                    "test_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "engagement_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "product_type_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "statistics": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ImportStatistics"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "engagement_id",
                    "product_id",
                    "product_type_id",
                    "scan_type",
                    "statistics",
                    "test_id"
                ]
            },
            "ReImportScanRequest": {
                "type": "object",
                "properties": {
                    "scan_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Scan completion date will be used on all findings."
                    },
                    "minimum_severity": {
                        "enum": [
                            "Info",
                            "Low",
                            "Medium",
                            "High",
                            "Critical"
                        ],
                        "type": "string",
                        "default": "Info",
                        "description": "Minimum severity level to be imported"
                    },
                    "active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if these findings are currently active."
                    },
                    "verified": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if these findings have been verified."
                    },
                    "do_not_reactivate": {
                        "type": "boolean",
                        "default": false,
                        "description": "Select if the import should ignore active findings from the report, useful for triage-less scanners. Will keep existing findings closed, without reactivating them. For more information check the docs."
                    },
                    "scan_type": {
                        "enum": [
                            "Acunetix Scan",
                            "Acunetix360 Scan",
                            "Anchore Engine Scan",
                            "Anchore Enterprise Policy Check",
                            "Anchore Grype",
                            "AnchoreCTL Policies Report",
                            "AnchoreCTL Vuln Report",
                            "AppSpider Scan",
                            "Aqua Scan",
                            "Arachni Scan",
                            "AuditJS Scan",
                            "AWS Prowler Scan",
                            "AWS Scout2 Scan",
                            "AWS Security Hub Scan",
                            "Azure Security Center Recommendations Scan",
                            "Bandit Scan",
                            "BlackDuck API",
                            "Blackduck Component Risk",
                            "Blackduck Hub Scan",
                            "Brakeman Scan",
                            "Bugcrowd API Import",
                            "BugCrowd Scan",
                            "Bundler-Audit Scan",
                            "Burp Enterprise Scan",
                            "Burp GraphQL API",
                            "Burp REST API",
                            "Burp Scan",
                            "CargoAudit Scan",
                            "Checkmarx OSA",
                            "Checkmarx Scan",
                            "Checkmarx Scan detailed",
                            "Checkov Scan",
                            "Clair Klar Scan",
                            "Clair Scan",
                            "Cloudsploit Scan",
                            "Cobalt.io API Import",
                            "Cobalt.io Scan",
                            "Contrast Scan",
                            "Coverity API",
                            "Crashtest Security JSON File",
                            "Crashtest Security XML File",
                            "CredScan Scan",
                            "CycloneDX Scan",
                            "DawnScanner Scan",
                            "Dependency Check Scan",
                            "Dependency Track Finding Packaging Format (FPF) Export",
                            "Detect-secrets Scan",
                            "docker-bench-security Scan",
                            "Dockle Scan",
                            "DrHeader JSON Importer",
                            "DSOP Scan",
                            "Edgescan Scan",
                            "ESLint Scan",
                            "Fortify Scan",
                            "Generic Findings Import",
                            "Ggshield Scan",
                            "Github Vulnerability Scan",
                            "GitLab API Fuzzing Report Scan",
                            "GitLab Container Scan",
                            "GitLab DAST Report",
                            "GitLab Dependency Scanning Report",
                            "GitLab SAST Report",
                            "GitLab Secret Detection Report",
                            "Gitleaks Scan",
                            "Gosec Scanner",
                            "HackerOne Cases",
                            "Hadolint Dockerfile check",
                            "Harbor Vulnerability Scan",
                            "Horusec Scan",
                            "HuskyCI Report",
                            "Hydra Scan",
                            "IBM AppScan DAST",
                            "Immuniweb Scan",
                            "IntSights Report",
                            "JFrog Xray API Summary Artifact Scan",
                            "JFrog Xray Scan",
                            "JFrog Xray Unified Scan",
                            "KICS Scan",
                            "Kiuwan Scan",
                            "kube-bench Scan",
                            "Meterian Scan",
                            "Microfocus Webinspect Scan",
                            "MobSF Scan",
                            "Mobsfscan Scan",
                            "Mozilla Observatory Scan",
                            "Nessus Scan",
                            "Nessus WAS Scan",
                            "Netsparker Scan",
                            "NeuVector (compliance)",
                            "NeuVector (REST)",
                            "Nexpose Scan",
                            "Nikto Scan",
                            "Nmap Scan",
                            "Node Security Platform Scan",
                            "NPM Audit Scan",
                            "Nuclei Scan",
                            "Openscap Vulnerability Scan",
                            "OpenVAS CSV",
                            "ORT evaluated model Importer",
                            "OssIndex Devaudit SCA Scan Importer",
                            "Outpost24 Scan",
                            "PHP Security Audit v2",
                            "PHP Symfony Security Check",
                            "pip-audit Scan",
                            "PMD Scan",
                            "PWN SAST",
                            "Qualys Infrastructure Scan (WebGUI XML)",
                            "Qualys Scan",
                            "Qualys Webapp Scan",
                            "Retire.js Scan",
                            "Risk Recon API Importer",
                            "Rubocop Scan",
                            "Rusty Hog Scan",
                            "SARIF",
                            "Scantist Scan",
                            "Scout Suite Scan",
                            "Semgrep JSON Report",
                            "SKF Scan",
                            "Snyk Scan",
                            "Solar Appscreener Scan",
                            "SonarQube API Import",
                            "SonarQube Scan",
                            "SonarQube Scan detailed",
                            "Sonatype Application Scan",
                            "SpotBugs Scan",
                            "SSL Labs Scan",
                            "Sslscan",
                            "Sslyze Scan",
                            "SSLyze Scan (JSON)",
                            "StackHawk HawkScan",
                            "Terrascan Scan",
                            "Testssl Scan",
                            "TFSec Scan",
                            "Trivy Scan",
                            "Trufflehog Scan",
                            "Trufflehog3 Scan",
                            "Trustwave Fusion API Scan",
                            "Trustwave Scan (CSV)",
                            "Twistlock Image Scan",
                            "VCG Scan",
                            "Veracode Scan",
                            "Veracode SourceClear Scan",
                            "Vulners",
                            "Wapiti Scan",
                            "WFuzz JSON report",
                            "Whispers Scan",
                            "WhiteHat Sentinel",
                            "Whitesource Scan",
                            "Wpscan",
                            "Xanitizer Scan",
                            "Yarn Audit Scan",
                            "ZAP Scan"
                        ],
                        "type": "string"
                    },
                    "endpoint_to_add": {
                        "type": "integer"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary"
                    },
                    "product_type_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "product_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "engagement_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "engagement_end_date": {
                        "type": "string",
                        "format": "date",
                        "description": "End Date for Engagement. Default is current time + 365 days. Required format year-month-day"
                    },
                    "source_code_management_uri": {
                        "type": "string",
                        "format": "uri",
                        "minLength": 1,
                        "description": "Resource link to source code",
                        "maxLength": 600
                    },
                    "test": {
                        "type": "integer"
                    },
                    "test_title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "auto_create_context": {
                        "type": "boolean"
                    },
                    "deduplication_on_engagement": {
                        "type": "boolean"
                    },
                    "push_to_jira": {
                        "type": "boolean",
                        "default": false
                    },
                    "close_old_findings": {
                        "type": "boolean",
                        "default": true,
                        "description": "Select if old findings no longer present in the report get closed as mitigated when importing."
                    },
                    "close_old_findings_product_scope": {
                        "type": "boolean",
                        "default": false,
                        "description": "Select if close_old_findings applies to all findings of the same type in the product. By default, it is false meaning that only old findings of the same type in the engagement are in scope. Note that this only applies on the first call to reimport-scan."
                    },
                    "version": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Version that will be set on existing Test object. Leave empty to leave existing value in place."
                    },
                    "build_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "ID of the build that was scanned."
                    },
                    "branch_tag": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Branch or Tag that was scanned."
                    },
                    "commit_hash": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Commit that was scanned."
                    },
                    "api_scan_configuration": {
                        "type": "integer",
                        "nullable": true
                    },
                    "service": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A service is a self-contained piece of functionality within a Product. This is an optional field which is used in deduplication and closing of old findings when set. This affects the whole engagement/product depending on your deduplication scope."
                    },
                    "environment": {
                        "type": "string",
                        "minLength": 1
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Modify existing tags that help describe this scan."
                    },
                    "group_by": {
                        "enum": [
                            "component_name",
                            "component_name+component_version",
                            "file_path"
                        ],
                        "type": "string",
                        "description": "Choose an option to automatically group new findings by the chosen option."
                    },
                    "create_finding_groups_for_all_findings": {
                        "type": "boolean",
                        "default": true,
                        "description": "If set to false, finding groups will only be created when there is more than one grouped finding"
                    }
                },
                "required": [
                    "scan_type"
                ]
            },
            "Regulation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the regulation.",
                        "maxLength": 128
                    },
                    "acronym": {
                        "type": "string",
                        "description": "A shortened representation of the name.",
                        "maxLength": 20
                    },
                    "category": {
                        "enum": [
                            "privacy",
                            "finance",
                            "education",
                            "medical",
                            "corporate",
                            "other"
                        ],
                        "type": "string",
                        "description": "The subject of the regulation."
                    },
                    "jurisdiction": {
                        "type": "string",
                        "description": "The territory over which the regulation applies.",
                        "maxLength": 64
                    },
                    "description": {
                        "type": "string",
                        "description": "Information about the regulation's purpose."
                    },
                    "reference": {
                        "type": "string",
                        "format": "uri",
                        "description": "An external URL for more information.",
                        "maxLength": 200
                    }
                },
                "required": [
                    "acronym",
                    "category",
                    "id",
                    "jurisdiction",
                    "name"
                ]
            },
            "RegulationRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the regulation.",
                        "maxLength": 128
                    },
                    "acronym": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A shortened representation of the name.",
                        "maxLength": 20
                    },
                    "category": {
                        "enum": [
                            "privacy",
                            "finance",
                            "education",
                            "medical",
                            "corporate",
                            "other"
                        ],
                        "type": "string",
                        "description": "The subject of the regulation."
                    },
                    "jurisdiction": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The territory over which the regulation applies.",
                        "maxLength": 64
                    },
                    "description": {
                        "type": "string",
                        "description": "Information about the regulation's purpose."
                    },
                    "reference": {
                        "type": "string",
                        "format": "uri",
                        "description": "An external URL for more information.",
                        "maxLength": 200
                    }
                },
                "required": [
                    "acronym",
                    "category",
                    "jurisdiction",
                    "name"
                ]
            },
            "ReportGenerate": {
                "type": "object",
                "properties": {
                    "executive_summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExecutiveSummary"
                            }
                        ],
                        "nullable": true
                    },
                    "product_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProductType"
                            }
                        ],
                        "readOnly": true
                    },
                    "product": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Product"
                            }
                        ],
                        "readOnly": true
                    },
                    "engagement": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Engagement"
                            }
                        ],
                        "readOnly": true
                    },
                    "report_name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "report_info": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "test": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Test"
                            }
                        ],
                        "readOnly": true
                    },
                    "endpoint": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Endpoint"
                            }
                        ],
                        "readOnly": true
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Endpoint"
                        },
                        "readOnly": true
                    },
                    "findings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Finding"
                        },
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserStub"
                            }
                        ],
                        "readOnly": true
                    },
                    "team_name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "host": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "finding_notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FindingToNotes"
                        },
                        "nullable": true
                    }
                },
                "required": [
                    "endpoint",
                    "endpoints",
                    "engagement",
                    "executive_summary",
                    "findings",
                    "host",
                    "product",
                    "product_type",
                    "report_info",
                    "report_name",
                    "team_name",
                    "test",
                    "title",
                    "user",
                    "user_id"
                ]
            },
            "ReportGenerateOptionRequest": {
                "type": "object",
                "properties": {
                    "include_finding_notes": {
                        "type": "boolean",
                        "default": false
                    },
                    "include_finding_images": {
                        "type": "boolean",
                        "default": false
                    },
                    "include_executive_summary": {
                        "type": "boolean",
                        "default": false
                    },
                    "include_table_of_contents": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "RiskAcceptance": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Descriptive name which in the future may also be used to group risk acceptances together across engagements and products",
                        "maxLength": 300
                    },
                    "recommendation": {
                        "enum": [
                            "A",
                            "V",
                            "M",
                            "F",
                            "T"
                        ],
                        "type": "string",
                        "title": "Security Recommendation",
                        "description": "Recommendation from the security team."
                    },
                    "recommendation_details": {
                        "type": "string",
                        "nullable": true,
                        "title": "Security Recommendation Details",
                        "description": "Explanation of security recommendation"
                    },
                    "decision": {
                        "enum": [
                            "A",
                            "V",
                            "M",
                            "F",
                            "T"
                        ],
                        "type": "string",
                        "description": "Risk treatment decision by risk owner"
                    },
                    "decision_details": {
                        "type": "string",
                        "nullable": true,
                        "description": "If a compensating control exists to mitigate the finding or reduce risk, then list the compensating control(s)."
                    },
                    "accepted_by": {
                        "type": "string",
                        "nullable": true,
                        "description": "The person that accepts the risk, can be outside of DefectDojo.",
                        "maxLength": 200
                    },
                    "path": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Proof"
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the risk acceptance expires, the findings will be reactivated (unless disabled below)."
                    },
                    "expiration_date_warned": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "(readonly) Date at which notice about the risk acceptance expiration was sent."
                    },
                    "expiration_date_handled": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "(readonly) When the risk acceptance expiration was handled (manually or by the daily job)."
                    },
                    "reactivate_expired": {
                        "type": "boolean",
                        "title": "Reactivate findings on expiration",
                        "description": "Reactivate findings when risk acceptance expires?"
                    },
                    "restart_sla_expired": {
                        "type": "boolean",
                        "title": "Restart SLA on expiration",
                        "description": "When enabled, the SLA for findings is restarted when the risk acceptance expires."
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "owner": {
                        "type": "integer",
                        "description": "User in DefectDojo owning this acceptance. Only the owner and staff users can edit the risk acceptance."
                    },
                    "accepted_findings": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "accepted_findings",
                    "created",
                    "id",
                    "name",
                    "notes",
                    "owner",
                    "updated"
                ]
            },
            "RiskAcceptanceRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Descriptive name which in the future may also be used to group risk acceptances together across engagements and products",
                        "maxLength": 300
                    },
                    "recommendation": {
                        "enum": [
                            "A",
                            "V",
                            "M",
                            "F",
                            "T"
                        ],
                        "type": "string",
                        "title": "Security Recommendation",
                        "description": "Recommendation from the security team."
                    },
                    "recommendation_details": {
                        "type": "string",
                        "nullable": true,
                        "title": "Security Recommendation Details",
                        "description": "Explanation of security recommendation"
                    },
                    "decision": {
                        "enum": [
                            "A",
                            "V",
                            "M",
                            "F",
                            "T"
                        ],
                        "type": "string",
                        "description": "Risk treatment decision by risk owner"
                    },
                    "decision_details": {
                        "type": "string",
                        "nullable": true,
                        "description": "If a compensating control exists to mitigate the finding or reduce risk, then list the compensating control(s)."
                    },
                    "accepted_by": {
                        "type": "string",
                        "nullable": true,
                        "description": "The person that accepts the risk, can be outside of DefectDojo.",
                        "maxLength": 200
                    },
                    "path": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true,
                        "title": "Proof"
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the risk acceptance expires, the findings will be reactivated (unless disabled below)."
                    },
                    "expiration_date_warned": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "(readonly) Date at which notice about the risk acceptance expiration was sent."
                    },
                    "expiration_date_handled": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "(readonly) When the risk acceptance expiration was handled (manually or by the daily job)."
                    },
                    "reactivate_expired": {
                        "type": "boolean",
                        "title": "Reactivate findings on expiration",
                        "description": "Reactivate findings when risk acceptance expires?"
                    },
                    "restart_sla_expired": {
                        "type": "boolean",
                        "title": "Restart SLA on expiration",
                        "description": "When enabled, the SLA for findings is restarted when the risk acceptance expires."
                    },
                    "owner": {
                        "type": "integer",
                        "description": "User in DefectDojo owning this acceptance. Only the owner and staff users can edit the risk acceptance."
                    },
                    "accepted_findings": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "accepted_findings",
                    "name",
                    "owner"
                ]
            },
            "Role": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "is_owner": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "SLAConfiguration": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Custom SLA Name",
                        "description": "A unique name for the set of SLAs.",
                        "maxLength": 128
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 512
                    },
                    "critical": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Critical Finding SLA Days",
                        "description": "number of days to remediate a critical finding."
                    },
                    "high": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "High Finding SLA Days",
                        "description": "number of days to remediate a high finding."
                    },
                    "medium": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Medium Finding SLA Days",
                        "description": "number of days to remediate a medium finding."
                    },
                    "low": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Low Finding SLA Days",
                        "description": "number of days to remediate a low finding."
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "SLAConfigurationRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Custom SLA Name",
                        "description": "A unique name for the set of SLAs.",
                        "maxLength": 128
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 512
                    },
                    "critical": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Critical Finding SLA Days",
                        "description": "number of days to remediate a critical finding."
                    },
                    "high": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "High Finding SLA Days",
                        "description": "number of days to remediate a high finding."
                    },
                    "medium": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Medium Finding SLA Days",
                        "description": "number of days to remediate a medium finding."
                    },
                    "low": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Low Finding SLA Days",
                        "description": "number of days to remediate a low finding."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "SeverityStatusStatistics": {
                "type": "object",
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/StatusStatistics"
                    },
                    "low": {
                        "$ref": "#/components/schemas/StatusStatistics"
                    },
                    "medium": {
                        "$ref": "#/components/schemas/StatusStatistics"
                    },
                    "high": {
                        "$ref": "#/components/schemas/StatusStatistics"
                    },
                    "critical": {
                        "$ref": "#/components/schemas/StatusStatistics"
                    },
                    "total": {
                        "$ref": "#/components/schemas/StatusStatistics"
                    }
                },
                "required": [
                    "critical",
                    "high",
                    "info",
                    "low",
                    "medium",
                    "total"
                ]
            },
            "SeverityStatusStatisticsRequest": {
                "type": "object",
                "properties": {
                    "info": {
                        "$ref": "#/components/schemas/StatusStatisticsRequest"
                    },
                    "low": {
                        "$ref": "#/components/schemas/StatusStatisticsRequest"
                    },
                    "medium": {
                        "$ref": "#/components/schemas/StatusStatisticsRequest"
                    },
                    "high": {
                        "$ref": "#/components/schemas/StatusStatisticsRequest"
                    },
                    "critical": {
                        "$ref": "#/components/schemas/StatusStatisticsRequest"
                    },
                    "total": {
                        "$ref": "#/components/schemas/StatusStatisticsRequest"
                    }
                },
                "required": [
                    "critical",
                    "high",
                    "info",
                    "low",
                    "medium",
                    "total"
                ]
            },
            "SonarqubeIssue": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "key": {
                        "type": "string",
                        "description": "SonarQube issue key",
                        "maxLength": 30
                    },
                    "status": {
                        "type": "string",
                        "description": "SonarQube issue status",
                        "maxLength": 20
                    },
                    "type": {
                        "type": "string",
                        "description": "SonarQube issue type",
                        "maxLength": 20
                    }
                },
                "required": [
                    "id",
                    "key",
                    "status",
                    "type"
                ]
            },
            "SonarqubeIssueRequest": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "description": "SonarQube issue key",
                        "maxLength": 30
                    },
                    "status": {
                        "type": "string",
                        "minLength": 1,
                        "description": "SonarQube issue status",
                        "maxLength": 20
                    },
                    "type": {
                        "type": "string",
                        "minLength": 1,
                        "description": "SonarQube issue type",
                        "maxLength": 20
                    }
                },
                "required": [
                    "key",
                    "status",
                    "type"
                ]
            },
            "SonarqubeIssueTransition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "finding_status": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "sonarqube_status": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "transitions": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "sonarqube_issue": {
                        "type": "integer"
                    }
                },
                "required": [
                    "created",
                    "finding_status",
                    "id",
                    "sonarqube_issue",
                    "sonarqube_status",
                    "transitions"
                ]
            },
            "SonarqubeIssueTransitionRequest": {
                "type": "object",
                "properties": {
                    "finding_status": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "sonarqube_status": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "transitions": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "sonarqube_issue": {
                        "type": "integer"
                    }
                },
                "required": [
                    "finding_status",
                    "sonarqube_issue",
                    "sonarqube_status",
                    "transitions"
                ]
            },
            "StatusStatistics": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "integer"
                    },
                    "verified": {
                        "type": "integer"
                    },
                    "duplicate": {
                        "type": "integer"
                    },
                    "false_p": {
                        "type": "integer"
                    },
                    "out_of_scope": {
                        "type": "integer"
                    },
                    "is_mitigated": {
                        "type": "integer"
                    },
                    "risk_accepted": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "required": [
                    "active",
                    "duplicate",
                    "false_p",
                    "is_mitigated",
                    "out_of_scope",
                    "risk_accepted",
                    "total",
                    "verified"
                ]
            },
            "StatusStatisticsRequest": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "integer"
                    },
                    "verified": {
                        "type": "integer"
                    },
                    "duplicate": {
                        "type": "integer"
                    },
                    "false_p": {
                        "type": "integer"
                    },
                    "out_of_scope": {
                        "type": "integer"
                    },
                    "is_mitigated": {
                        "type": "integer"
                    },
                    "risk_accepted": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "required": [
                    "active",
                    "duplicate",
                    "false_p",
                    "is_mitigated",
                    "out_of_scope",
                    "risk_accepted",
                    "total",
                    "verified"
                ]
            },
            "StubFinding": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "test": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "reporter": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "reporter",
                    "test",
                    "title"
                ]
            },
            "StubFindingCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "test": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "reporter": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "reporter",
                    "test",
                    "title"
                ]
            },
            "StubFindingCreateRequest": {
                "type": "object",
                "properties": {
                    "test": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1000
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "test",
                    "title"
                ]
            },
            "StubFindingRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1000
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "severity": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "title"
                ]
            },
            "SystemSettings": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "enable_auditlog": {
                        "type": "boolean",
                        "title": "Enable audit logging",
                        "description": "With this setting turned on, Dojo maintains an audit log of changes made to entities (Findings, Tests, Engagements, Procuts, ...)If you run big import you may want to disable this because the way django-auditlog currently works, there's a big performance hit. Especially during (re-)imports."
                    },
                    "enable_deduplication": {
                        "type": "boolean",
                        "title": "Deduplicate findings",
                        "description": "With this setting turned on, Dojo deduplicates findings by comparing endpoints, cwe fields, and titles. If two findings share a URL and have the same CWE or title, Dojo marks the less recent finding as a duplicate. When deduplication is enabled, a list of deduplicated findings is added to the engagement view."
                    },
                    "delete_duplicates": {
                        "type": "boolean",
                        "description": "Requires next setting: maximum number of duplicates to retain."
                    },
                    "max_dupes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Max Duplicates",
                        "description": "When enabled, if a single issue reaches the maximum number of duplicates, the oldest will be deleted. Duplicate will not be deleted when left empty. A value of 0 will remove all duplicates."
                    },
                    "email_from": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "enable_jira": {
                        "type": "boolean",
                        "title": "Enable JIRA integration"
                    },
                    "enable_jira_web_hook": {
                        "type": "boolean",
                        "description": "Please note: It is strongly recommended to use a secret below and / or IP whitelist the JIRA server using a proxy such as Nginx."
                    },
                    "disable_jira_webhook_secret": {
                        "type": "boolean",
                        "title": "Disable web hook secret",
                        "description": "Allows incoming requests without a secret (discouraged legacy behaviour)"
                    },
                    "jira_webhook_secret": {
                        "type": "string",
                        "nullable": true,
                        "title": "JIRA Webhook URL",
                        "description": "Secret needed in URL for incoming JIRA Webhook",
                        "maxLength": 64
                    },
                    "jira_minimum_severity": {
                        "enum": [
                            "Critical",
                            "High",
                            "Medium",
                            "Low",
                            "Info",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "jira_labels": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA issue labels space seperated",
                        "maxLength": 200
                    },
                    "add_vulnerability_id_to_jira_label": {
                        "type": "boolean",
                        "title": "Add vulnerability Id as a JIRA label"
                    },
                    "enable_github": {
                        "type": "boolean",
                        "title": "Enable GITHUB integration"
                    },
                    "enable_slack_notifications": {
                        "type": "boolean"
                    },
                    "slack_channel": {
                        "type": "string",
                        "description": "Optional. Needed if you want to send global notifications.",
                        "maxLength": 100
                    },
                    "slack_token": {
                        "type": "string",
                        "description": "Token required for interacting with Slack. Get one at https://api.slack.com/tokens",
                        "maxLength": 100
                    },
                    "slack_username": {
                        "type": "string",
                        "description": "Optional. Will take your bot name otherwise.",
                        "maxLength": 100
                    },
                    "enable_msteams_notifications": {
                        "type": "boolean",
                        "title": "Enable Microsoft Teams notifications"
                    },
                    "msteams_url": {
                        "type": "string",
                        "description": "The full URL of the incoming webhook",
                        "maxLength": 400
                    },
                    "enable_mail_notifications": {
                        "type": "boolean"
                    },
                    "mail_notifications_to": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "false_positive_history": {
                        "type": "boolean",
                        "description": "DefectDojo will automatically mark the finding as a false positive if the finding has been previously marked as a false positive. Not needed when using deduplication, advised to not combine these two."
                    },
                    "url_prefix": {
                        "type": "string",
                        "description": "URL prefix if DefectDojo is installed in it's own virtual subdirectory.",
                        "maxLength": 300
                    },
                    "team_name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "time_zone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Asmera",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Timbuktu",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Anguilla",
                            "America/Antigua",
                            "America/Araguaina",
                            "America/Argentina/Buenos_Aires",
                            "America/Argentina/Catamarca",
                            "America/Argentina/ComodRivadavia",
                            "America/Argentina/Cordoba",
                            "America/Argentina/Jujuy",
                            "America/Argentina/La_Rioja",
                            "America/Argentina/Mendoza",
                            "America/Argentina/Rio_Gallegos",
                            "America/Argentina/Salta",
                            "America/Argentina/San_Juan",
                            "America/Argentina/San_Luis",
                            "America/Argentina/Tucuman",
                            "America/Argentina/Ushuaia",
                            "America/Aruba",
                            "America/Asuncion",
                            "America/Atikokan",
                            "America/Atka",
                            "America/Bahia",
                            "America/Bahia_Banderas",
                            "America/Barbados",
                            "America/Belem",
                            "America/Belize",
                            "America/Blanc-Sablon",
                            "America/Boa_Vista",
                            "America/Bogota",
                            "America/Boise",
                            "America/Buenos_Aires",
                            "America/Cambridge_Bay",
                            "America/Campo_Grande",
                            "America/Cancun",
                            "America/Caracas",
                            "America/Catamarca",
                            "America/Cayenne",
                            "America/Cayman",
                            "America/Chicago",
                            "America/Chihuahua",
                            "America/Coral_Harbour",
                            "America/Cordoba",
                            "America/Costa_Rica",
                            "America/Creston",
                            "America/Cuiaba",
                            "America/Curacao",
                            "America/Danmarkshavn",
                            "America/Dawson",
                            "America/Dawson_Creek",
                            "America/Denver",
                            "America/Detroit",
                            "America/Dominica",
                            "America/Edmonton",
                            "America/Eirunepe",
                            "America/El_Salvador",
                            "America/Ensenada",
                            "America/Fort_Nelson",
                            "America/Fort_Wayne",
                            "America/Fortaleza",
                            "America/Glace_Bay",
                            "America/Godthab",
                            "America/Goose_Bay",
                            "America/Grand_Turk",
                            "America/Grenada",
                            "America/Guadeloupe",
                            "America/Guatemala",
                            "America/Guayaquil",
                            "America/Guyana",
                            "America/Halifax",
                            "America/Havana",
                            "America/Hermosillo",
                            "America/Indiana/Indianapolis",
                            "America/Indiana/Knox",
                            "America/Indiana/Marengo",
                            "America/Indiana/Petersburg",
                            "America/Indiana/Tell_City",
                            "America/Indiana/Vevay",
                            "America/Indiana/Vincennes",
                            "America/Indiana/Winamac",
                            "America/Indianapolis",
                            "America/Inuvik",
                            "America/Iqaluit",
                            "America/Jamaica",
                            "America/Jujuy",
                            "America/Juneau",
                            "America/Kentucky/Louisville",
                            "America/Kentucky/Monticello",
                            "America/Knox_IN",
                            "America/Kralendijk",
                            "America/La_Paz",
                            "America/Lima",
                            "America/Los_Angeles",
                            "America/Louisville",
                            "America/Lower_Princes",
                            "America/Maceio",
                            "America/Managua",
                            "America/Manaus",
                            "America/Marigot",
                            "America/Martinique",
                            "America/Matamoros",
                            "America/Mazatlan",
                            "America/Mendoza",
                            "America/Menominee",
                            "America/Merida",
                            "America/Metlakatla",
                            "America/Mexico_City",
                            "America/Miquelon",
                            "America/Moncton",
                            "America/Monterrey",
                            "America/Montevideo",
                            "America/Montreal",
                            "America/Montserrat",
                            "America/Nassau",
                            "America/New_York",
                            "America/Nipigon",
                            "America/Nome",
                            "America/Noronha",
                            "America/North_Dakota/Beulah",
                            "America/North_Dakota/Center",
                            "America/North_Dakota/New_Salem",
                            "America/Nuuk",
                            "America/Ojinaga",
                            "America/Panama",
                            "America/Pangnirtung",
                            "America/Paramaribo",
                            "America/Phoenix",
                            "America/Port-au-Prince",
                            "America/Port_of_Spain",
                            "America/Porto_Acre",
                            "America/Porto_Velho",
                            "America/Puerto_Rico",
                            "America/Punta_Arenas",
                            "America/Rainy_River",
                            "America/Rankin_Inlet",
                            "America/Recife",
                            "America/Regina",
                            "America/Resolute",
                            "America/Rio_Branco",
                            "America/Rosario",
                            "America/Santa_Isabel",
                            "America/Santarem",
                            "America/Santiago",
                            "America/Santo_Domingo",
                            "America/Sao_Paulo",
                            "America/Scoresbysund",
                            "America/Shiprock",
                            "America/Sitka",
                            "America/St_Barthelemy",
                            "America/St_Johns",
                            "America/St_Kitts",
                            "America/St_Lucia",
                            "America/St_Thomas",
                            "America/St_Vincent",
                            "America/Swift_Current",
                            "America/Tegucigalpa",
                            "America/Thule",
                            "America/Thunder_Bay",
                            "America/Tijuana",
                            "America/Toronto",
                            "America/Tortola",
                            "America/Vancouver",
                            "America/Virgin",
                            "America/Whitehorse",
                            "America/Winnipeg",
                            "America/Yakutat",
                            "America/Yellowknife",
                            "Antarctica/Casey",
                            "Antarctica/Davis",
                            "Antarctica/DumontDUrville",
                            "Antarctica/Macquarie",
                            "Antarctica/Mawson",
                            "Antarctica/McMurdo",
                            "Antarctica/Palmer",
                            "Antarctica/Rothera",
                            "Antarctica/South_Pole",
                            "Antarctica/Syowa",
                            "Antarctica/Troll",
                            "Antarctica/Vostok",
                            "Arctic/Longyearbyen",
                            "Asia/Aden",
                            "Asia/Almaty",
                            "Asia/Amman",
                            "Asia/Anadyr",
                            "Asia/Aqtau",
                            "Asia/Aqtobe",
                            "Asia/Ashgabat",
                            "Asia/Ashkhabad",
                            "Asia/Atyrau",
                            "Asia/Baghdad",
                            "Asia/Bahrain",
                            "Asia/Baku",
                            "Asia/Bangkok",
                            "Asia/Barnaul",
                            "Asia/Beirut",
                            "Asia/Bishkek",
                            "Asia/Brunei",
                            "Asia/Calcutta",
                            "Asia/Chita",
                            "Asia/Choibalsan",
                            "Asia/Chongqing",
                            "Asia/Chungking",
                            "Asia/Colombo",
                            "Asia/Dacca",
                            "Asia/Damascus",
                            "Asia/Dhaka",
                            "Asia/Dili",
                            "Asia/Dubai",
                            "Asia/Dushanbe",
                            "Asia/Famagusta",
                            "Asia/Gaza",
                            "Asia/Harbin",
                            "Asia/Hebron",
                            "Asia/Ho_Chi_Minh",
                            "Asia/Hong_Kong",
                            "Asia/Hovd",
                            "Asia/Irkutsk",
                            "Asia/Istanbul",
                            "Asia/Jakarta",
                            "Asia/Jayapura",
                            "Asia/Jerusalem",
                            "Asia/Kabul",
                            "Asia/Kamchatka",
                            "Asia/Karachi",
                            "Asia/Kashgar",
                            "Asia/Kathmandu",
                            "Asia/Katmandu",
                            "Asia/Khandyga",
                            "Asia/Kolkata",
                            "Asia/Krasnoyarsk",
                            "Asia/Kuala_Lumpur",
                            "Asia/Kuching",
                            "Asia/Kuwait",
                            "Asia/Macao",
                            "Asia/Macau",
                            "Asia/Magadan",
                            "Asia/Makassar",
                            "Asia/Manila",
                            "Asia/Muscat",
                            "Asia/Nicosia",
                            "Asia/Novokuznetsk",
                            "Asia/Novosibirsk",
                            "Asia/Omsk",
                            "Asia/Oral",
                            "Asia/Phnom_Penh",
                            "Asia/Pontianak",
                            "Asia/Pyongyang",
                            "Asia/Qatar",
                            "Asia/Qostanay",
                            "Asia/Qyzylorda",
                            "Asia/Rangoon",
                            "Asia/Riyadh",
                            "Asia/Saigon",
                            "Asia/Sakhalin",
                            "Asia/Samarkand",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Srednekolymsk",
                            "Asia/Taipei",
                            "Asia/Tashkent",
                            "Asia/Tbilisi",
                            "Asia/Tehran",
                            "Asia/Tel_Aviv",
                            "Asia/Thimbu",
                            "Asia/Thimphu",
                            "Asia/Tokyo",
                            "Asia/Tomsk",
                            "Asia/Ujung_Pandang",
                            "Asia/Ulaanbaatar",
                            "Asia/Ulan_Bator",
                            "Asia/Urumqi",
                            "Asia/Ust-Nera",
                            "Asia/Vientiane",
                            "Asia/Vladivostok",
                            "Asia/Yakutsk",
                            "Asia/Yangon",
                            "Asia/Yekaterinburg",
                            "Asia/Yerevan",
                            "Atlantic/Azores",
                            "Atlantic/Bermuda",
                            "Atlantic/Canary",
                            "Atlantic/Cape_Verde",
                            "Atlantic/Faeroe",
                            "Atlantic/Faroe",
                            "Atlantic/Jan_Mayen",
                            "Atlantic/Madeira",
                            "Atlantic/Reykjavik",
                            "Atlantic/South_Georgia",
                            "Atlantic/St_Helena",
                            "Atlantic/Stanley",
                            "Australia/ACT",
                            "Australia/Adelaide",
                            "Australia/Brisbane",
                            "Australia/Broken_Hill",
                            "Australia/Canberra",
                            "Australia/Currie",
                            "Australia/Darwin",
                            "Australia/Eucla",
                            "Australia/Hobart",
                            "Australia/LHI",
                            "Australia/Lindeman",
                            "Australia/Lord_Howe",
                            "Australia/Melbourne",
                            "Australia/NSW",
                            "Australia/North",
                            "Australia/Perth",
                            "Australia/Queensland",
                            "Australia/South",
                            "Australia/Sydney",
                            "Australia/Tasmania",
                            "Australia/Victoria",
                            "Australia/West",
                            "Australia/Yancowinna",
                            "Brazil/Acre",
                            "Brazil/DeNoronha",
                            "Brazil/East",
                            "Brazil/West",
                            "CET",
                            "CST6CDT",
                            "Canada/Atlantic",
                            "Canada/Central",
                            "Canada/Eastern",
                            "Canada/Mountain",
                            "Canada/Newfoundland",
                            "Canada/Pacific",
                            "Canada/Saskatchewan",
                            "Canada/Yukon",
                            "Chile/Continental",
                            "Chile/EasterIsland",
                            "Cuba",
                            "EET",
                            "EST",
                            "EST5EDT",
                            "Egypt",
                            "Eire",
                            "Etc/GMT",
                            "Etc/GMT+0",
                            "Etc/GMT+1",
                            "Etc/GMT+10",
                            "Etc/GMT+11",
                            "Etc/GMT+12",
                            "Etc/GMT+2",
                            "Etc/GMT+3",
                            "Etc/GMT+4",
                            "Etc/GMT+5",
                            "Etc/GMT+6",
                            "Etc/GMT+7",
                            "Etc/GMT+8",
                            "Etc/GMT+9",
                            "Etc/GMT-0",
                            "Etc/GMT-1",
                            "Etc/GMT-10",
                            "Etc/GMT-11",
                            "Etc/GMT-12",
                            "Etc/GMT-13",
                            "Etc/GMT-14",
                            "Etc/GMT-2",
                            "Etc/GMT-3",
                            "Etc/GMT-4",
                            "Etc/GMT-5",
                            "Etc/GMT-6",
                            "Etc/GMT-7",
                            "Etc/GMT-8",
                            "Etc/GMT-9",
                            "Etc/GMT0",
                            "Etc/Greenwich",
                            "Etc/UCT",
                            "Etc/UTC",
                            "Etc/Universal",
                            "Etc/Zulu",
                            "Europe/Amsterdam",
                            "Europe/Andorra",
                            "Europe/Astrakhan",
                            "Europe/Athens",
                            "Europe/Belfast",
                            "Europe/Belgrade",
                            "Europe/Berlin",
                            "Europe/Bratislava",
                            "Europe/Brussels",
                            "Europe/Bucharest",
                            "Europe/Budapest",
                            "Europe/Busingen",
                            "Europe/Chisinau",
                            "Europe/Copenhagen",
                            "Europe/Dublin",
                            "Europe/Gibraltar",
                            "Europe/Guernsey",
                            "Europe/Helsinki",
                            "Europe/Isle_of_Man",
                            "Europe/Istanbul",
                            "Europe/Jersey",
                            "Europe/Kaliningrad",
                            "Europe/Kiev",
                            "Europe/Kirov",
                            "Europe/Kyiv",
                            "Europe/Lisbon",
                            "Europe/Ljubljana",
                            "Europe/London",
                            "Europe/Luxembourg",
                            "Europe/Madrid",
                            "Europe/Malta",
                            "Europe/Mariehamn",
                            "Europe/Minsk",
                            "Europe/Monaco",
                            "Europe/Moscow",
                            "Europe/Nicosia",
                            "Europe/Oslo",
                            "Europe/Paris",
                            "Europe/Podgorica",
                            "Europe/Prague",
                            "Europe/Riga",
                            "Europe/Rome",
                            "Europe/Samara",
                            "Europe/San_Marino",
                            "Europe/Sarajevo",
                            "Europe/Saratov",
                            "Europe/Simferopol",
                            "Europe/Skopje",
                            "Europe/Sofia",
                            "Europe/Stockholm",
                            "Europe/Tallinn",
                            "Europe/Tirane",
                            "Europe/Tiraspol",
                            "Europe/Ulyanovsk",
                            "Europe/Uzhgorod",
                            "Europe/Vaduz",
                            "Europe/Vatican",
                            "Europe/Vienna",
                            "Europe/Vilnius",
                            "Europe/Volgograd",
                            "Europe/Warsaw",
                            "Europe/Zagreb",
                            "Europe/Zaporozhye",
                            "Europe/Zurich",
                            "GB",
                            "GB-Eire",
                            "GMT",
                            "GMT+0",
                            "GMT-0",
                            "GMT0",
                            "Greenwich",
                            "HST",
                            "Hongkong",
                            "Iceland",
                            "Indian/Antananarivo",
                            "Indian/Chagos",
                            "Indian/Christmas",
                            "Indian/Cocos",
                            "Indian/Comoro",
                            "Indian/Kerguelen",
                            "Indian/Mahe",
                            "Indian/Maldives",
                            "Indian/Mauritius",
                            "Indian/Mayotte",
                            "Indian/Reunion",
                            "Iran",
                            "Israel",
                            "Jamaica",
                            "Japan",
                            "Kwajalein",
                            "Libya",
                            "MET",
                            "MST",
                            "MST7MDT",
                            "Mexico/BajaNorte",
                            "Mexico/BajaSur",
                            "Mexico/General",
                            "NZ",
                            "NZ-CHAT",
                            "Navajo",
                            "PRC",
                            "PST8PDT",
                            "Pacific/Apia",
                            "Pacific/Auckland",
                            "Pacific/Bougainville",
                            "Pacific/Chatham",
                            "Pacific/Chuuk",
                            "Pacific/Easter",
                            "Pacific/Efate",
                            "Pacific/Enderbury",
                            "Pacific/Fakaofo",
                            "Pacific/Fiji",
                            "Pacific/Funafuti",
                            "Pacific/Galapagos",
                            "Pacific/Gambier",
                            "Pacific/Guadalcanal",
                            "Pacific/Guam",
                            "Pacific/Honolulu",
                            "Pacific/Johnston",
                            "Pacific/Kanton",
                            "Pacific/Kiritimati",
                            "Pacific/Kosrae",
                            "Pacific/Kwajalein",
                            "Pacific/Majuro",
                            "Pacific/Marquesas",
                            "Pacific/Midway",
                            "Pacific/Nauru",
                            "Pacific/Niue",
                            "Pacific/Norfolk",
                            "Pacific/Noumea",
                            "Pacific/Pago_Pago",
                            "Pacific/Palau",
                            "Pacific/Pitcairn",
                            "Pacific/Pohnpei",
                            "Pacific/Ponape",
                            "Pacific/Port_Moresby",
                            "Pacific/Rarotonga",
                            "Pacific/Saipan",
                            "Pacific/Samoa",
                            "Pacific/Tahiti",
                            "Pacific/Tarawa",
                            "Pacific/Tongatapu",
                            "Pacific/Truk",
                            "Pacific/Wake",
                            "Pacific/Wallis",
                            "Pacific/Yap",
                            "Poland",
                            "Portugal",
                            "ROC",
                            "ROK",
                            "Singapore",
                            "Turkey",
                            "UCT",
                            "US/Alaska",
                            "US/Aleutian",
                            "US/Arizona",
                            "US/Central",
                            "US/East-Indiana",
                            "US/Eastern",
                            "US/Hawaii",
                            "US/Indiana-Starke",
                            "US/Michigan",
                            "US/Mountain",
                            "US/Pacific",
                            "US/Samoa",
                            "UTC",
                            "Universal",
                            "W-SU",
                            "WET",
                            "Zulu"
                        ],
                        "type": "string"
                    },
                    "enable_product_grade": {
                        "type": "boolean",
                        "title": "Enable Product Grading",
                        "description": "Displays a grade letter next to a product to show the overall health."
                    },
                    "product_grade": {
                        "type": "string",
                        "maxLength": 800
                    },
                    "product_grade_a": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade A",
                        "description": "Percentage score for an 'A' >="
                    },
                    "product_grade_b": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade B",
                        "description": "Percentage score for a 'B' >="
                    },
                    "product_grade_c": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade C",
                        "description": "Percentage score for a 'C' >="
                    },
                    "product_grade_d": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade D",
                        "description": "Percentage score for a 'D' >="
                    },
                    "product_grade_f": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade F",
                        "description": "Percentage score for an 'F' <="
                    },
                    "enable_benchmark": {
                        "type": "boolean",
                        "title": "Enable Benchmarks",
                        "description": "Enables Benchmarks such as the OWASP ASVS (Application Security Verification Standard)"
                    },
                    "enable_template_match": {
                        "type": "boolean",
                        "title": "Enable Remediation Advice",
                        "description": "Enables global remediation advice and matching on CWE and Title. The text will be replaced for mitigation, impact and references on a finding. Useful for providing consistent impact and remediation advice regardless of the scanner."
                    },
                    "engagement_auto_close": {
                        "type": "boolean",
                        "title": "Enable Engagement Auto-Close",
                        "description": "Closes an engagement after 3 days (default) past due date including last update."
                    },
                    "engagement_auto_close_days": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Closes an engagement after the specified number of days past due date including last update."
                    },
                    "enable_finding_sla": {
                        "type": "boolean",
                        "title": "Enable Finding SLA's",
                        "description": "Enables Finding SLA's for time to remediate."
                    },
                    "enable_notify_sla_active": {
                        "type": "boolean",
                        "title": "Enable Notifiy SLA's Breach for active Findings",
                        "description": "Enables Notify when time to remediate according to Finding SLA's is breached for active Findings."
                    },
                    "enable_notify_sla_active_verified": {
                        "type": "boolean",
                        "title": "Enable Notifiy SLA's Breach for active, verified Findings",
                        "description": "Enables Notify when time to remediate according to Finding SLA's is breached for active, verified Findings."
                    },
                    "enable_notify_sla_jira_only": {
                        "type": "boolean",
                        "title": "Enable Notifiy SLA's Breach for Findings linked to JIRA",
                        "description": "Enables Notify when time to remediate according to Finding SLA's is breached for Findings that are linked to JIRA issues."
                    },
                    "allow_anonymous_survey_repsonse": {
                        "type": "boolean",
                        "title": "Allow Anonymous Survey Responses",
                        "description": "Enable anyone with a link to the survey to answer a survey"
                    },
                    "credentials": {
                        "type": "string",
                        "maxLength": 3000
                    },
                    "disclaimer": {
                        "type": "string",
                        "title": "Custom Disclaimer",
                        "description": "Include this custom disclaimer on all notifications and generated reports",
                        "maxLength": 3000
                    },
                    "column_widths": {
                        "type": "string",
                        "maxLength": 1500
                    },
                    "drive_folder_ID": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "email_address": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 100
                    },
                    "risk_acceptance_form_default_days": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "Default expiry period for risk acceptance form."
                    },
                    "risk_acceptance_notify_before_expiration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Risk acceptance expiration heads up days",
                        "description": "Notify X days before risk acceptance expires. Leave empty to disable."
                    },
                    "enable_credentials": {
                        "type": "boolean",
                        "description": "With this setting turned off, credentials will be disabled in the user interface."
                    },
                    "enable_questionnaires": {
                        "type": "boolean",
                        "description": "With this setting turned off, questionnaires will be disabled in the user interface."
                    },
                    "enable_checklists": {
                        "type": "boolean",
                        "description": "With this setting turned off, checklists will be disabled in the user interface."
                    },
                    "enable_endpoint_metadata_import": {
                        "type": "boolean",
                        "description": "With this setting turned off, endpoint metadata import will be disabled in the user interface."
                    },
                    "enable_google_sheets": {
                        "type": "boolean",
                        "title": "Enable Google Sheets Integration",
                        "description": "With this setting turned off, the Google sheets integration will be disabled in the user interface."
                    },
                    "enable_rules_framework": {
                        "type": "boolean",
                        "description": "With this setting turned off, the rules framwork will be disabled in the user interface."
                    },
                    "enable_user_profile_editable": {
                        "type": "boolean",
                        "title": "Enable user profile for writing",
                        "description": "When turned on users can edit their profiles"
                    },
                    "enable_product_tracking_files": {
                        "type": "boolean",
                        "description": "With this setting turned off, the product tracking files will be disabled in the user interface."
                    },
                    "enable_finding_groups": {
                        "type": "boolean",
                        "description": "With this setting turned off, the Finding Groups will be disabled."
                    },
                    "enable_calendar": {
                        "type": "boolean",
                        "description": "With this setting turned off, the Calendar will be disabled in the user interface."
                    },
                    "default_group_email_pattern": {
                        "type": "string",
                        "description": "New users will only be assigned to the default group, when their email address matches this regex pattern. This is optional condition.",
                        "maxLength": 200
                    },
                    "minimum_password_length": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Requires user to set passwords greater than minimum length."
                    },
                    "maximum_password_length": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Requires user to set passwords less than maximum length."
                    },
                    "number_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one digit",
                        "description": "Requires user passwords to contain at least one digit (0-9)."
                    },
                    "special_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one special character",
                        "description": "Requires user passwords to contain at least one special character (()[]{}|\\`~!@#$%^&*_-+=;:'\",<>./?)."
                    },
                    "lowercase_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one lowercase letter",
                        "description": "Requires user passwords to contain at least one lowercase letter (a-z)."
                    },
                    "uppercase_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one uppercase letter",
                        "description": "Requires user passwords to contain at least one uppercase letter (A-Z)."
                    },
                    "default_group": {
                        "type": "integer",
                        "nullable": true,
                        "description": "New users will be assigned to this group."
                    },
                    "default_group_role": {
                        "type": "integer",
                        "nullable": true,
                        "description": "New users will be assigned to their default group with this role."
                    }
                },
                "required": [
                    "id"
                ]
            },
            "SystemSettingsRequest": {
                "type": "object",
                "properties": {
                    "enable_auditlog": {
                        "type": "boolean",
                        "title": "Enable audit logging",
                        "description": "With this setting turned on, Dojo maintains an audit log of changes made to entities (Findings, Tests, Engagements, Procuts, ...)If you run big import you may want to disable this because the way django-auditlog currently works, there's a big performance hit. Especially during (re-)imports."
                    },
                    "enable_deduplication": {
                        "type": "boolean",
                        "title": "Deduplicate findings",
                        "description": "With this setting turned on, Dojo deduplicates findings by comparing endpoints, cwe fields, and titles. If two findings share a URL and have the same CWE or title, Dojo marks the less recent finding as a duplicate. When deduplication is enabled, a list of deduplicated findings is added to the engagement view."
                    },
                    "delete_duplicates": {
                        "type": "boolean",
                        "description": "Requires next setting: maximum number of duplicates to retain."
                    },
                    "max_dupes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Max Duplicates",
                        "description": "When enabled, if a single issue reaches the maximum number of duplicates, the oldest will be deleted. Duplicate will not be deleted when left empty. A value of 0 will remove all duplicates."
                    },
                    "email_from": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "enable_jira": {
                        "type": "boolean",
                        "title": "Enable JIRA integration"
                    },
                    "enable_jira_web_hook": {
                        "type": "boolean",
                        "description": "Please note: It is strongly recommended to use a secret below and / or IP whitelist the JIRA server using a proxy such as Nginx."
                    },
                    "disable_jira_webhook_secret": {
                        "type": "boolean",
                        "title": "Disable web hook secret",
                        "description": "Allows incoming requests without a secret (discouraged legacy behaviour)"
                    },
                    "jira_webhook_secret": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "title": "JIRA Webhook URL",
                        "description": "Secret needed in URL for incoming JIRA Webhook",
                        "maxLength": 64
                    },
                    "jira_minimum_severity": {
                        "enum": [
                            "Critical",
                            "High",
                            "Medium",
                            "Low",
                            "Info",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "jira_labels": {
                        "type": "string",
                        "nullable": true,
                        "description": "JIRA issue labels space seperated",
                        "maxLength": 200
                    },
                    "add_vulnerability_id_to_jira_label": {
                        "type": "boolean",
                        "title": "Add vulnerability Id as a JIRA label"
                    },
                    "enable_github": {
                        "type": "boolean",
                        "title": "Enable GITHUB integration"
                    },
                    "enable_slack_notifications": {
                        "type": "boolean"
                    },
                    "slack_channel": {
                        "type": "string",
                        "description": "Optional. Needed if you want to send global notifications.",
                        "maxLength": 100
                    },
                    "slack_token": {
                        "type": "string",
                        "description": "Token required for interacting with Slack. Get one at https://api.slack.com/tokens",
                        "maxLength": 100
                    },
                    "slack_username": {
                        "type": "string",
                        "description": "Optional. Will take your bot name otherwise.",
                        "maxLength": 100
                    },
                    "enable_msteams_notifications": {
                        "type": "boolean",
                        "title": "Enable Microsoft Teams notifications"
                    },
                    "msteams_url": {
                        "type": "string",
                        "description": "The full URL of the incoming webhook",
                        "maxLength": 400
                    },
                    "enable_mail_notifications": {
                        "type": "boolean"
                    },
                    "mail_notifications_to": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "false_positive_history": {
                        "type": "boolean",
                        "description": "DefectDojo will automatically mark the finding as a false positive if the finding has been previously marked as a false positive. Not needed when using deduplication, advised to not combine these two."
                    },
                    "url_prefix": {
                        "type": "string",
                        "description": "URL prefix if DefectDojo is installed in it's own virtual subdirectory.",
                        "maxLength": 300
                    },
                    "team_name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "time_zone": {
                        "enum": [
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Asmera",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Timbuktu",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Anguilla",
                            "America/Antigua",
                            "America/Araguaina",
                            "America/Argentina/Buenos_Aires",
                            "America/Argentina/Catamarca",
                            "America/Argentina/ComodRivadavia",
                            "America/Argentina/Cordoba",
                            "America/Argentina/Jujuy",
                            "America/Argentina/La_Rioja",
                            "America/Argentina/Mendoza",
                            "America/Argentina/Rio_Gallegos",
                            "America/Argentina/Salta",
                            "America/Argentina/San_Juan",
                            "America/Argentina/San_Luis",
                            "America/Argentina/Tucuman",
                            "America/Argentina/Ushuaia",
                            "America/Aruba",
                            "America/Asuncion",
                            "America/Atikokan",
                            "America/Atka",
                            "America/Bahia",
                            "America/Bahia_Banderas",
                            "America/Barbados",
                            "America/Belem",
                            "America/Belize",
                            "America/Blanc-Sablon",
                            "America/Boa_Vista",
                            "America/Bogota",
                            "America/Boise",
                            "America/Buenos_Aires",
                            "America/Cambridge_Bay",
                            "America/Campo_Grande",
                            "America/Cancun",
                            "America/Caracas",
                            "America/Catamarca",
                            "America/Cayenne",
                            "America/Cayman",
                            "America/Chicago",
                            "America/Chihuahua",
                            "America/Coral_Harbour",
                            "America/Cordoba",
                            "America/Costa_Rica",
                            "America/Creston",
                            "America/Cuiaba",
                            "America/Curacao",
                            "America/Danmarkshavn",
                            "America/Dawson",
                            "America/Dawson_Creek",
                            "America/Denver",
                            "America/Detroit",
                            "America/Dominica",
                            "America/Edmonton",
                            "America/Eirunepe",
                            "America/El_Salvador",
                            "America/Ensenada",
                            "America/Fort_Nelson",
                            "America/Fort_Wayne",
                            "America/Fortaleza",
                            "America/Glace_Bay",
                            "America/Godthab",
                            "America/Goose_Bay",
                            "America/Grand_Turk",
                            "America/Grenada",
                            "America/Guadeloupe",
                            "America/Guatemala",
                            "America/Guayaquil",
                            "America/Guyana",
                            "America/Halifax",
                            "America/Havana",
                            "America/Hermosillo",
                            "America/Indiana/Indianapolis",
                            "America/Indiana/Knox",
                            "America/Indiana/Marengo",
                            "America/Indiana/Petersburg",
                            "America/Indiana/Tell_City",
                            "America/Indiana/Vevay",
                            "America/Indiana/Vincennes",
                            "America/Indiana/Winamac",
                            "America/Indianapolis",
                            "America/Inuvik",
                            "America/Iqaluit",
                            "America/Jamaica",
                            "America/Jujuy",
                            "America/Juneau",
                            "America/Kentucky/Louisville",
                            "America/Kentucky/Monticello",
                            "America/Knox_IN",
                            "America/Kralendijk",
                            "America/La_Paz",
                            "America/Lima",
                            "America/Los_Angeles",
                            "America/Louisville",
                            "America/Lower_Princes",
                            "America/Maceio",
                            "America/Managua",
                            "America/Manaus",
                            "America/Marigot",
                            "America/Martinique",
                            "America/Matamoros",
                            "America/Mazatlan",
                            "America/Mendoza",
                            "America/Menominee",
                            "America/Merida",
                            "America/Metlakatla",
                            "America/Mexico_City",
                            "America/Miquelon",
                            "America/Moncton",
                            "America/Monterrey",
                            "America/Montevideo",
                            "America/Montreal",
                            "America/Montserrat",
                            "America/Nassau",
                            "America/New_York",
                            "America/Nipigon",
                            "America/Nome",
                            "America/Noronha",
                            "America/North_Dakota/Beulah",
                            "America/North_Dakota/Center",
                            "America/North_Dakota/New_Salem",
                            "America/Nuuk",
                            "America/Ojinaga",
                            "America/Panama",
                            "America/Pangnirtung",
                            "America/Paramaribo",
                            "America/Phoenix",
                            "America/Port-au-Prince",
                            "America/Port_of_Spain",
                            "America/Porto_Acre",
                            "America/Porto_Velho",
                            "America/Puerto_Rico",
                            "America/Punta_Arenas",
                            "America/Rainy_River",
                            "America/Rankin_Inlet",
                            "America/Recife",
                            "America/Regina",
                            "America/Resolute",
                            "America/Rio_Branco",
                            "America/Rosario",
                            "America/Santa_Isabel",
                            "America/Santarem",
                            "America/Santiago",
                            "America/Santo_Domingo",
                            "America/Sao_Paulo",
                            "America/Scoresbysund",
                            "America/Shiprock",
                            "America/Sitka",
                            "America/St_Barthelemy",
                            "America/St_Johns",
                            "America/St_Kitts",
                            "America/St_Lucia",
                            "America/St_Thomas",
                            "America/St_Vincent",
                            "America/Swift_Current",
                            "America/Tegucigalpa",
                            "America/Thule",
                            "America/Thunder_Bay",
                            "America/Tijuana",
                            "America/Toronto",
                            "America/Tortola",
                            "America/Vancouver",
                            "America/Virgin",
                            "America/Whitehorse",
                            "America/Winnipeg",
                            "America/Yakutat",
                            "America/Yellowknife",
                            "Antarctica/Casey",
                            "Antarctica/Davis",
                            "Antarctica/DumontDUrville",
                            "Antarctica/Macquarie",
                            "Antarctica/Mawson",
                            "Antarctica/McMurdo",
                            "Antarctica/Palmer",
                            "Antarctica/Rothera",
                            "Antarctica/South_Pole",
                            "Antarctica/Syowa",
                            "Antarctica/Troll",
                            "Antarctica/Vostok",
                            "Arctic/Longyearbyen",
                            "Asia/Aden",
                            "Asia/Almaty",
                            "Asia/Amman",
                            "Asia/Anadyr",
                            "Asia/Aqtau",
                            "Asia/Aqtobe",
                            "Asia/Ashgabat",
                            "Asia/Ashkhabad",
                            "Asia/Atyrau",
                            "Asia/Baghdad",
                            "Asia/Bahrain",
                            "Asia/Baku",
                            "Asia/Bangkok",
                            "Asia/Barnaul",
                            "Asia/Beirut",
                            "Asia/Bishkek",
                            "Asia/Brunei",
                            "Asia/Calcutta",
                            "Asia/Chita",
                            "Asia/Choibalsan",
                            "Asia/Chongqing",
                            "Asia/Chungking",
                            "Asia/Colombo",
                            "Asia/Dacca",
                            "Asia/Damascus",
                            "Asia/Dhaka",
                            "Asia/Dili",
                            "Asia/Dubai",
                            "Asia/Dushanbe",
                            "Asia/Famagusta",
                            "Asia/Gaza",
                            "Asia/Harbin",
                            "Asia/Hebron",
                            "Asia/Ho_Chi_Minh",
                            "Asia/Hong_Kong",
                            "Asia/Hovd",
                            "Asia/Irkutsk",
                            "Asia/Istanbul",
                            "Asia/Jakarta",
                            "Asia/Jayapura",
                            "Asia/Jerusalem",
                            "Asia/Kabul",
                            "Asia/Kamchatka",
                            "Asia/Karachi",
                            "Asia/Kashgar",
                            "Asia/Kathmandu",
                            "Asia/Katmandu",
                            "Asia/Khandyga",
                            "Asia/Kolkata",
                            "Asia/Krasnoyarsk",
                            "Asia/Kuala_Lumpur",
                            "Asia/Kuching",
                            "Asia/Kuwait",
                            "Asia/Macao",
                            "Asia/Macau",
                            "Asia/Magadan",
                            "Asia/Makassar",
                            "Asia/Manila",
                            "Asia/Muscat",
                            "Asia/Nicosia",
                            "Asia/Novokuznetsk",
                            "Asia/Novosibirsk",
                            "Asia/Omsk",
                            "Asia/Oral",
                            "Asia/Phnom_Penh",
                            "Asia/Pontianak",
                            "Asia/Pyongyang",
                            "Asia/Qatar",
                            "Asia/Qostanay",
                            "Asia/Qyzylorda",
                            "Asia/Rangoon",
                            "Asia/Riyadh",
                            "Asia/Saigon",
                            "Asia/Sakhalin",
                            "Asia/Samarkand",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Srednekolymsk",
                            "Asia/Taipei",
                            "Asia/Tashkent",
                            "Asia/Tbilisi",
                            "Asia/Tehran",
                            "Asia/Tel_Aviv",
                            "Asia/Thimbu",
                            "Asia/Thimphu",
                            "Asia/Tokyo",
                            "Asia/Tomsk",
                            "Asia/Ujung_Pandang",
                            "Asia/Ulaanbaatar",
                            "Asia/Ulan_Bator",
                            "Asia/Urumqi",
                            "Asia/Ust-Nera",
                            "Asia/Vientiane",
                            "Asia/Vladivostok",
                            "Asia/Yakutsk",
                            "Asia/Yangon",
                            "Asia/Yekaterinburg",
                            "Asia/Yerevan",
                            "Atlantic/Azores",
                            "Atlantic/Bermuda",
                            "Atlantic/Canary",
                            "Atlantic/Cape_Verde",
                            "Atlantic/Faeroe",
                            "Atlantic/Faroe",
                            "Atlantic/Jan_Mayen",
                            "Atlantic/Madeira",
                            "Atlantic/Reykjavik",
                            "Atlantic/South_Georgia",
                            "Atlantic/St_Helena",
                            "Atlantic/Stanley",
                            "Australia/ACT",
                            "Australia/Adelaide",
                            "Australia/Brisbane",
                            "Australia/Broken_Hill",
                            "Australia/Canberra",
                            "Australia/Currie",
                            "Australia/Darwin",
                            "Australia/Eucla",
                            "Australia/Hobart",
                            "Australia/LHI",
                            "Australia/Lindeman",
                            "Australia/Lord_Howe",
                            "Australia/Melbourne",
                            "Australia/NSW",
                            "Australia/North",
                            "Australia/Perth",
                            "Australia/Queensland",
                            "Australia/South",
                            "Australia/Sydney",
                            "Australia/Tasmania",
                            "Australia/Victoria",
                            "Australia/West",
                            "Australia/Yancowinna",
                            "Brazil/Acre",
                            "Brazil/DeNoronha",
                            "Brazil/East",
                            "Brazil/West",
                            "CET",
                            "CST6CDT",
                            "Canada/Atlantic",
                            "Canada/Central",
                            "Canada/Eastern",
                            "Canada/Mountain",
                            "Canada/Newfoundland",
                            "Canada/Pacific",
                            "Canada/Saskatchewan",
                            "Canada/Yukon",
                            "Chile/Continental",
                            "Chile/EasterIsland",
                            "Cuba",
                            "EET",
                            "EST",
                            "EST5EDT",
                            "Egypt",
                            "Eire",
                            "Etc/GMT",
                            "Etc/GMT+0",
                            "Etc/GMT+1",
                            "Etc/GMT+10",
                            "Etc/GMT+11",
                            "Etc/GMT+12",
                            "Etc/GMT+2",
                            "Etc/GMT+3",
                            "Etc/GMT+4",
                            "Etc/GMT+5",
                            "Etc/GMT+6",
                            "Etc/GMT+7",
                            "Etc/GMT+8",
                            "Etc/GMT+9",
                            "Etc/GMT-0",
                            "Etc/GMT-1",
                            "Etc/GMT-10",
                            "Etc/GMT-11",
                            "Etc/GMT-12",
                            "Etc/GMT-13",
                            "Etc/GMT-14",
                            "Etc/GMT-2",
                            "Etc/GMT-3",
                            "Etc/GMT-4",
                            "Etc/GMT-5",
                            "Etc/GMT-6",
                            "Etc/GMT-7",
                            "Etc/GMT-8",
                            "Etc/GMT-9",
                            "Etc/GMT0",
                            "Etc/Greenwich",
                            "Etc/UCT",
                            "Etc/UTC",
                            "Etc/Universal",
                            "Etc/Zulu",
                            "Europe/Amsterdam",
                            "Europe/Andorra",
                            "Europe/Astrakhan",
                            "Europe/Athens",
                            "Europe/Belfast",
                            "Europe/Belgrade",
                            "Europe/Berlin",
                            "Europe/Bratislava",
                            "Europe/Brussels",
                            "Europe/Bucharest",
                            "Europe/Budapest",
                            "Europe/Busingen",
                            "Europe/Chisinau",
                            "Europe/Copenhagen",
                            "Europe/Dublin",
                            "Europe/Gibraltar",
                            "Europe/Guernsey",
                            "Europe/Helsinki",
                            "Europe/Isle_of_Man",
                            "Europe/Istanbul",
                            "Europe/Jersey",
                            "Europe/Kaliningrad",
                            "Europe/Kiev",
                            "Europe/Kirov",
                            "Europe/Kyiv",
                            "Europe/Lisbon",
                            "Europe/Ljubljana",
                            "Europe/London",
                            "Europe/Luxembourg",
                            "Europe/Madrid",
                            "Europe/Malta",
                            "Europe/Mariehamn",
                            "Europe/Minsk",
                            "Europe/Monaco",
                            "Europe/Moscow",
                            "Europe/Nicosia",
                            "Europe/Oslo",
                            "Europe/Paris",
                            "Europe/Podgorica",
                            "Europe/Prague",
                            "Europe/Riga",
                            "Europe/Rome",
                            "Europe/Samara",
                            "Europe/San_Marino",
                            "Europe/Sarajevo",
                            "Europe/Saratov",
                            "Europe/Simferopol",
                            "Europe/Skopje",
                            "Europe/Sofia",
                            "Europe/Stockholm",
                            "Europe/Tallinn",
                            "Europe/Tirane",
                            "Europe/Tiraspol",
                            "Europe/Ulyanovsk",
                            "Europe/Uzhgorod",
                            "Europe/Vaduz",
                            "Europe/Vatican",
                            "Europe/Vienna",
                            "Europe/Vilnius",
                            "Europe/Volgograd",
                            "Europe/Warsaw",
                            "Europe/Zagreb",
                            "Europe/Zaporozhye",
                            "Europe/Zurich",
                            "GB",
                            "GB-Eire",
                            "GMT",
                            "GMT+0",
                            "GMT-0",
                            "GMT0",
                            "Greenwich",
                            "HST",
                            "Hongkong",
                            "Iceland",
                            "Indian/Antananarivo",
                            "Indian/Chagos",
                            "Indian/Christmas",
                            "Indian/Cocos",
                            "Indian/Comoro",
                            "Indian/Kerguelen",
                            "Indian/Mahe",
                            "Indian/Maldives",
                            "Indian/Mauritius",
                            "Indian/Mayotte",
                            "Indian/Reunion",
                            "Iran",
                            "Israel",
                            "Jamaica",
                            "Japan",
                            "Kwajalein",
                            "Libya",
                            "MET",
                            "MST",
                            "MST7MDT",
                            "Mexico/BajaNorte",
                            "Mexico/BajaSur",
                            "Mexico/General",
                            "NZ",
                            "NZ-CHAT",
                            "Navajo",
                            "PRC",
                            "PST8PDT",
                            "Pacific/Apia",
                            "Pacific/Auckland",
                            "Pacific/Bougainville",
                            "Pacific/Chatham",
                            "Pacific/Chuuk",
                            "Pacific/Easter",
                            "Pacific/Efate",
                            "Pacific/Enderbury",
                            "Pacific/Fakaofo",
                            "Pacific/Fiji",
                            "Pacific/Funafuti",
                            "Pacific/Galapagos",
                            "Pacific/Gambier",
                            "Pacific/Guadalcanal",
                            "Pacific/Guam",
                            "Pacific/Honolulu",
                            "Pacific/Johnston",
                            "Pacific/Kanton",
                            "Pacific/Kiritimati",
                            "Pacific/Kosrae",
                            "Pacific/Kwajalein",
                            "Pacific/Majuro",
                            "Pacific/Marquesas",
                            "Pacific/Midway",
                            "Pacific/Nauru",
                            "Pacific/Niue",
                            "Pacific/Norfolk",
                            "Pacific/Noumea",
                            "Pacific/Pago_Pago",
                            "Pacific/Palau",
                            "Pacific/Pitcairn",
                            "Pacific/Pohnpei",
                            "Pacific/Ponape",
                            "Pacific/Port_Moresby",
                            "Pacific/Rarotonga",
                            "Pacific/Saipan",
                            "Pacific/Samoa",
                            "Pacific/Tahiti",
                            "Pacific/Tarawa",
                            "Pacific/Tongatapu",
                            "Pacific/Truk",
                            "Pacific/Wake",
                            "Pacific/Wallis",
                            "Pacific/Yap",
                            "Poland",
                            "Portugal",
                            "ROC",
                            "ROK",
                            "Singapore",
                            "Turkey",
                            "UCT",
                            "US/Alaska",
                            "US/Aleutian",
                            "US/Arizona",
                            "US/Central",
                            "US/East-Indiana",
                            "US/Eastern",
                            "US/Hawaii",
                            "US/Indiana-Starke",
                            "US/Michigan",
                            "US/Mountain",
                            "US/Pacific",
                            "US/Samoa",
                            "UTC",
                            "Universal",
                            "W-SU",
                            "WET",
                            "Zulu"
                        ],
                        "type": "string"
                    },
                    "enable_product_grade": {
                        "type": "boolean",
                        "title": "Enable Product Grading",
                        "description": "Displays a grade letter next to a product to show the overall health."
                    },
                    "product_grade": {
                        "type": "string",
                        "maxLength": 800
                    },
                    "product_grade_a": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade A",
                        "description": "Percentage score for an 'A' >="
                    },
                    "product_grade_b": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade B",
                        "description": "Percentage score for a 'B' >="
                    },
                    "product_grade_c": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade C",
                        "description": "Percentage score for a 'C' >="
                    },
                    "product_grade_d": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade D",
                        "description": "Percentage score for a 'D' >="
                    },
                    "product_grade_f": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Grade F",
                        "description": "Percentage score for an 'F' <="
                    },
                    "enable_benchmark": {
                        "type": "boolean",
                        "title": "Enable Benchmarks",
                        "description": "Enables Benchmarks such as the OWASP ASVS (Application Security Verification Standard)"
                    },
                    "enable_template_match": {
                        "type": "boolean",
                        "title": "Enable Remediation Advice",
                        "description": "Enables global remediation advice and matching on CWE and Title. The text will be replaced for mitigation, impact and references on a finding. Useful for providing consistent impact and remediation advice regardless of the scanner."
                    },
                    "engagement_auto_close": {
                        "type": "boolean",
                        "title": "Enable Engagement Auto-Close",
                        "description": "Closes an engagement after 3 days (default) past due date including last update."
                    },
                    "engagement_auto_close_days": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Closes an engagement after the specified number of days past due date including last update."
                    },
                    "enable_finding_sla": {
                        "type": "boolean",
                        "title": "Enable Finding SLA's",
                        "description": "Enables Finding SLA's for time to remediate."
                    },
                    "enable_notify_sla_active": {
                        "type": "boolean",
                        "title": "Enable Notifiy SLA's Breach for active Findings",
                        "description": "Enables Notify when time to remediate according to Finding SLA's is breached for active Findings."
                    },
                    "enable_notify_sla_active_verified": {
                        "type": "boolean",
                        "title": "Enable Notifiy SLA's Breach for active, verified Findings",
                        "description": "Enables Notify when time to remediate according to Finding SLA's is breached for active, verified Findings."
                    },
                    "enable_notify_sla_jira_only": {
                        "type": "boolean",
                        "title": "Enable Notifiy SLA's Breach for Findings linked to JIRA",
                        "description": "Enables Notify when time to remediate according to Finding SLA's is breached for Findings that are linked to JIRA issues."
                    },
                    "allow_anonymous_survey_repsonse": {
                        "type": "boolean",
                        "title": "Allow Anonymous Survey Responses",
                        "description": "Enable anyone with a link to the survey to answer a survey"
                    },
                    "credentials": {
                        "type": "string",
                        "maxLength": 3000
                    },
                    "disclaimer": {
                        "type": "string",
                        "title": "Custom Disclaimer",
                        "description": "Include this custom disclaimer on all notifications and generated reports",
                        "maxLength": 3000
                    },
                    "column_widths": {
                        "type": "string",
                        "maxLength": 1500
                    },
                    "drive_folder_ID": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "email_address": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 100
                    },
                    "risk_acceptance_form_default_days": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "Default expiry period for risk acceptance form."
                    },
                    "risk_acceptance_notify_before_expiration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Risk acceptance expiration heads up days",
                        "description": "Notify X days before risk acceptance expires. Leave empty to disable."
                    },
                    "enable_credentials": {
                        "type": "boolean",
                        "description": "With this setting turned off, credentials will be disabled in the user interface."
                    },
                    "enable_questionnaires": {
                        "type": "boolean",
                        "description": "With this setting turned off, questionnaires will be disabled in the user interface."
                    },
                    "enable_checklists": {
                        "type": "boolean",
                        "description": "With this setting turned off, checklists will be disabled in the user interface."
                    },
                    "enable_endpoint_metadata_import": {
                        "type": "boolean",
                        "description": "With this setting turned off, endpoint metadata import will be disabled in the user interface."
                    },
                    "enable_google_sheets": {
                        "type": "boolean",
                        "title": "Enable Google Sheets Integration",
                        "description": "With this setting turned off, the Google sheets integration will be disabled in the user interface."
                    },
                    "enable_rules_framework": {
                        "type": "boolean",
                        "description": "With this setting turned off, the rules framwork will be disabled in the user interface."
                    },
                    "enable_user_profile_editable": {
                        "type": "boolean",
                        "title": "Enable user profile for writing",
                        "description": "When turned on users can edit their profiles"
                    },
                    "enable_product_tracking_files": {
                        "type": "boolean",
                        "description": "With this setting turned off, the product tracking files will be disabled in the user interface."
                    },
                    "enable_finding_groups": {
                        "type": "boolean",
                        "description": "With this setting turned off, the Finding Groups will be disabled."
                    },
                    "enable_calendar": {
                        "type": "boolean",
                        "description": "With this setting turned off, the Calendar will be disabled in the user interface."
                    },
                    "default_group_email_pattern": {
                        "type": "string",
                        "description": "New users will only be assigned to the default group, when their email address matches this regex pattern. This is optional condition.",
                        "maxLength": 200
                    },
                    "minimum_password_length": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Requires user to set passwords greater than minimum length."
                    },
                    "maximum_password_length": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "description": "Requires user to set passwords less than maximum length."
                    },
                    "number_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one digit",
                        "description": "Requires user passwords to contain at least one digit (0-9)."
                    },
                    "special_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one special character",
                        "description": "Requires user passwords to contain at least one special character (()[]{}|\\`~!@#$%^&*_-+=;:'\",<>./?)."
                    },
                    "lowercase_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one lowercase letter",
                        "description": "Requires user passwords to contain at least one lowercase letter (a-z)."
                    },
                    "uppercase_character_required": {
                        "type": "boolean",
                        "title": "Password must contain one uppercase letter",
                        "description": "Requires user passwords to contain at least one uppercase letter (A-Z)."
                    },
                    "default_group": {
                        "type": "integer",
                        "nullable": true,
                        "description": "New users will be assigned to this group."
                    },
                    "default_group_role": {
                        "type": "integer",
                        "nullable": true,
                        "description": "New users will be assigned to their default group with this role."
                    }
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "tags"
                ]
            },
            "TagRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                },
                "required": [
                    "tags"
                ]
            },
            "Test": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "test_type_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "finding_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FindingGroup"
                        },
                        "readOnly": true
                    },
                    "scan_type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "target_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "target_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "estimated_time": {
                        "type": "string",
                        "format": "time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "actual_time": {
                        "type": "string",
                        "format": "time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "percent_complete": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "engagement": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "test_type": {
                        "type": "integer"
                    },
                    "environment": {
                        "type": "integer",
                        "nullable": true
                    },
                    "api_scan_configuration": {
                        "type": "integer",
                        "nullable": true
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Note"
                        },
                        "readOnly": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "actual_time",
                    "created",
                    "engagement",
                    "estimated_time",
                    "files",
                    "finding_groups",
                    "id",
                    "notes",
                    "target_end",
                    "target_start",
                    "test_type",
                    "test_type_name",
                    "updated"
                ]
            },
            "TestCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "engagement": {
                        "type": "integer"
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scan_type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "target_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "target_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "estimated_time": {
                        "type": "string",
                        "format": "time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "actual_time": {
                        "type": "string",
                        "format": "time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "percent_complete": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "test_type": {
                        "type": "integer"
                    },
                    "environment": {
                        "type": "integer",
                        "nullable": true
                    },
                    "api_scan_configuration": {
                        "type": "integer",
                        "nullable": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "actual_time",
                    "created",
                    "engagement",
                    "estimated_time",
                    "files",
                    "id",
                    "target_end",
                    "target_start",
                    "test_type",
                    "updated"
                ]
            },
            "TestCreateRequest": {
                "type": "object",
                "properties": {
                    "engagement": {
                        "type": "integer"
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "scan_type": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "target_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "target_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "percent_complete": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "test_type": {
                        "type": "integer"
                    },
                    "environment": {
                        "type": "integer",
                        "nullable": true
                    },
                    "api_scan_configuration": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "engagement",
                    "target_end",
                    "target_start",
                    "test_type"
                ]
            },
            "TestImport": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "test_import_finding_action_set": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TestImportFindingAction"
                        },
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "import_settings": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "test": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "findings_affected": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "findings_affected": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Finding"
                                }
                            },
                            "test": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/Test"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "created",
                    "findings_affected",
                    "id",
                    "modified",
                    "test",
                    "test_import_finding_action_set"
                ]
            },
            "TestImportFindingAction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "action": {
                        "enum": [
                            "N",
                            "C",
                            "R",
                            "U",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "test_import": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "finding": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "finding",
                    "id",
                    "modified",
                    "test_import"
                ]
            },
            "TestImportFindingActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "enum": [
                            "N",
                            "C",
                            "R",
                            "U",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "TestImportRequest": {
                "type": "object",
                "properties": {
                    "import_settings": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch that was tested, a reimport may update this field.",
                        "maxLength": 150
                    }
                }
            },
            "TestRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "scan_type": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "target_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "target_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "percent_complete": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "build_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "Build ID that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "commit_hash": {
                        "type": "string",
                        "nullable": true,
                        "description": "Commit hash tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "branch_tag": {
                        "type": "string",
                        "nullable": true,
                        "title": "Branch/Tag",
                        "description": "Tag or branch that was tested, a reimport may update this field.",
                        "maxLength": 150
                    },
                    "lead": {
                        "type": "integer",
                        "nullable": true
                    },
                    "test_type": {
                        "type": "integer"
                    },
                    "environment": {
                        "type": "integer",
                        "nullable": true
                    },
                    "api_scan_configuration": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "target_end",
                    "target_start",
                    "test_type"
                ]
            },
            "TestToFiles": {
                "type": "object",
                "properties": {
                    "test_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    }
                },
                "required": [
                    "files",
                    "test_id"
                ]
            },
            "TestToNotes": {
                "type": "object",
                "properties": {
                    "test_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Note"
                        }
                    }
                },
                "required": [
                    "notes",
                    "test_id"
                ]
            },
            "TestType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "static_tool": {
                        "type": "boolean"
                    },
                    "dynamic_tool": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "TestTypeRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "static_tool": {
                        "type": "boolean"
                    },
                    "dynamic_tool": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ToolConfiguration": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "authentication_type": {
                        "enum": [
                            "API",
                            "Password",
                            "SSH",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "extras": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional definitions that will be consumed by scanner",
                        "maxLength": 255
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "auth_title": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title for SSH/API Key",
                        "maxLength": 200
                    },
                    "tool_type": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "tool_type"
                ]
            },
            "ToolConfigurationRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "authentication_type": {
                        "enum": [
                            "API",
                            "Password",
                            "SSH",
                            "",
                            null
                        ],
                        "type": "string",
                        "nullable": true
                    },
                    "extras": {
                        "type": "string",
                        "nullable": true,
                        "description": "Additional definitions that will be consumed by scanner",
                        "maxLength": 255
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "maxLength": 600
                    },
                    "auth_title": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title for SSH/API Key",
                        "maxLength": 200
                    },
                    "ssh": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "maxLength": 6000
                    },
                    "api_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "maxLength": 600
                    },
                    "tool_type": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "tool_type"
                ]
            },
            "ToolProductSettings": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "setting_url": {
                        "type": "string"
                    },
                    "product": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "tool_project_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "tool_configuration": {
                        "type": "integer"
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name",
                    "notes",
                    "product",
                    "setting_url",
                    "tool_configuration"
                ]
            },
            "ToolProductSettingsRequest": {
                "type": "object",
                "properties": {
                    "setting_url": {
                        "type": "string",
                        "minLength": 1
                    },
                    "product": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    },
                    "tool_project_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 200
                    },
                    "tool_configuration": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "product",
                    "setting_url",
                    "tool_configuration"
                ]
            },
            "ToolType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ToolTypeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 2000
                    }
                },
                "required": [
                    "name"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "configuration_permissions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "id",
                    "last_login",
                    "username"
                ]
            },
            "UserContactInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 150
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                        "pattern": "^\\+?1?\\d{9,15}$",
                        "maxLength": 15
                    },
                    "cell_number": {
                        "type": "string",
                        "description": "Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                        "pattern": "^\\+?1?\\d{9,15}$",
                        "maxLength": 15
                    },
                    "twitter_username": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 150
                    },
                    "github_username": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 150
                    },
                    "slack_username": {
                        "type": "string",
                        "nullable": true,
                        "title": "Slack Email Address",
                        "description": "Email address associated with your slack account",
                        "maxLength": 150
                    },
                    "slack_user_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 25
                    },
                    "block_execution": {
                        "type": "boolean",
                        "description": "Instead of async deduping a finding the findings will be deduped synchronously and will 'block' the user until completion."
                    },
                    "force_password_reset": {
                        "type": "boolean",
                        "description": "Forces this user to reset their password on next login."
                    },
                    "user": {
                        "type": "integer"
                    },
                    "prefetch": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "type": "object",
                                "readOnly": true,
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/UserStub"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "user"
                ]
            },
            "UserContactInfoRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 150
                    },
                    "phone_number": {
                        "type": "string",
                        "description": "Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                        "pattern": "^\\+?1?\\d{9,15}$",
                        "maxLength": 15
                    },
                    "cell_number": {
                        "type": "string",
                        "description": "Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                        "pattern": "^\\+?1?\\d{9,15}$",
                        "maxLength": 15
                    },
                    "twitter_username": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 150
                    },
                    "github_username": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 150
                    },
                    "slack_username": {
                        "type": "string",
                        "nullable": true,
                        "title": "Slack Email Address",
                        "description": "Email address associated with your slack account",
                        "maxLength": 150
                    },
                    "slack_user_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 25
                    },
                    "block_execution": {
                        "type": "boolean",
                        "description": "Instead of async deduping a finding the findings will be deduped synchronously and will 'block' the user until completion."
                    },
                    "force_password_reset": {
                        "type": "boolean",
                        "description": "Forces this user to reset their password on next login."
                    },
                    "user": {
                        "type": "integer"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "UserProfile": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "user_contact_info": {
                        "$ref": "#/components/schemas/UserContactInfo"
                    },
                    "global_role": {
                        "$ref": "#/components/schemas/GlobalRole"
                    },
                    "dojo_group_member": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DojoGroupMember"
                        }
                    },
                    "product_type_member": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductTypeMember"
                        }
                    },
                    "product_member": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductMember"
                        }
                    }
                },
                "required": [
                    "dojo_group_member",
                    "global_role",
                    "product_member",
                    "product_type_member",
                    "user",
                    "user_contact_info"
                ]
            },
            "UserRequest": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1
                    },
                    "configuration_permissions": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserStub": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "required": [
                    "id",
                    "username"
                ]
            },
            "UserStubRequest": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "required": [
                    "username"
                ]
            },
            "VulnerabilityId": {
                "type": "object",
                "properties": {
                    "vulnerability_id": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "required": [
                    "vulnerability_id"
                ]
            },
            "VulnerabilityIdRequest": {
                "type": "object",
                "properties": {
                    "vulnerability_id": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    }
                },
                "required": [
                    "vulnerability_id"
                ]
            },
            "VulnerabilityIdTemplate": {
                "type": "object",
                "properties": {
                    "vulnerability_id": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "required": [
                    "vulnerability_id"
                ]
            },
            "VulnerabilityIdTemplateRequest": {
                "type": "object",
                "properties": {
                    "vulnerability_id": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    }
                },
                "required": [
                    "vulnerability_id"
                ]
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            },
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"Token\""
            }
        }
    }
}